(self["webpackChunkadopta_app"] = self["webpackChunkadopta_app"] || []).push([["node_modules_pnpm_react-native_0_78_2__babel_core_7_27_1__babel_preset-env_7_27_2__babel_core-97d5ec"], {
"./node_modules/.pnpm/react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@7.27.2_@babel+core@7.27.1__@react-na_43qvm7if4insp4vmqzbfvigaoq/node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js": 
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@7.27.2_@babel+core@7.27.1__@react-na_43qvm7if4insp4vmqzbfvigaoq/node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js ***!
  \****************************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {
/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @format
 *      
 */ Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "default", ({
    enumerable: true,
    get: function() {
        return _default;
    }
}));
var dispatchCommand = (__webpack_require__(/*! ../ReactNative/RendererProxy */ "./node_modules/.pnpm/react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@7.27.2_@babel+core@7.27.1__@react-na_43qvm7if4insp4vmqzbfvigaoq/node_modules/react-native/Libraries/ReactNative/RendererProxy.js")/* .dispatchCommand */.dispatchCommand);
function codegenNativeCommands(options) {
    var commandObj = {};
    options.supportedCommands.forEach((command)=>{
        // $FlowFixMe[missing-local-annot]
        commandObj[command] = (ref, ...args)=>{
            // $FlowFixMe[incompatible-call]
            dispatchCommand(ref, command, args);
        };
    });
    return commandObj;
}
var _default = codegenNativeCommands;


}),

}]);//# sourceMappingURL=node_modules_pnpm_react-native_0_78_2__babel_core_7_27_1__babel_preset-env_7_27_2__babel_core-97d5ec.chunk.bundle.map?platform=android