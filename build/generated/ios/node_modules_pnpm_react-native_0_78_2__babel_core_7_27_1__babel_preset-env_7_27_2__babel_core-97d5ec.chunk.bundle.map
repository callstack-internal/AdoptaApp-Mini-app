{"version":3,"file":"node_modules_pnpm_react-native_0_78_2__babel_core_7_27_1__babel_preset-env_7_27_2__babel_core-97d5ec.chunk.bundle","sources":["webpack://adopta-app/./node_modules/.pnpm/react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@7.27.2_@babel+core@7.27.1__@react-na_43qvm7if4insp4vmqzbfvigaoq/node_modules/react-native/Libraries/Utilities/codegenNativeCommands.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n *      \n */\n\nconst {dispatchCommand} = require('../ReactNative/RendererProxy');\n\n                                       \n                                       \n    \n\nfunction codegenNativeCommands                 (options                   )    {\n  const commandObj                                                   = {};\n\n  options.supportedCommands.forEach(command => {\n    // $FlowFixMe[missing-local-annot]\n    commandObj[command] = (ref, ...args) => {\n      // $FlowFixMe[incompatible-call]\n      dispatchCommand(ref, command, args);\n    };\n  });\n\n  return ((commandObj     )   );\n}\n\nexport default codegenNativeCommands;\n"],"names":["_default","dispatchCommand","require","codegenNativeCommands","options","commandObj","command","ref","args"],"mappings":";;;;;;AAAA;;;;;;;;CAQC;;;2CAsBDA;;;eAAAA;;;AApBA,IAAOC,kBAAmBC,iTAAJD;AAMtB,SAASE,sBAAuCC,OAAO;IACrD,IAAMC,aAA+D,CAAC;IAEtED,QAAQ,iBAAiB,CAAC,OAAO,CAACE,CAAAA;QAChC,kCAAkC;QAClCD,UAAU,CAACC,QAAQ,GAAG,CAACC,KAAK,GAAGC;YAC7B,gCAAgC;YAChCP,gBAAgBM,KAAKD,SAASE;QAChC;IACF;IAEA,OAASH;AACX;IAEAL,WAAeG"}