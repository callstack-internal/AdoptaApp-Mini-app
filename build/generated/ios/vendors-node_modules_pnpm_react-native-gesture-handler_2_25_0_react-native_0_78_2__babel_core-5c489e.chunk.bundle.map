{"version":3,"file":"vendors-node_modules_pnpm_react-native-gesture-handler_2_25_0_react-native_0_78_2__babel_core-5c489e.chunk.bundle","sources":["webpack://adopta-app/./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_construct.cjs","webpack://adopta-app/./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_get.cjs","webpack://adopta-app/./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_super_prop_base.cjs","webpack://adopta-app/./node_modules/.pnpm/hoist-non-react-statics@3.3.2/node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","webpack://adopta-app/./node_modules/.pnpm/invariant@2.2.4/node_modules/invariant/browser.js","webpack://adopta-app/./node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/cjs/react-is.development.js","webpack://adopta-app/./node_modules/.pnpm/react-is@16.13.1/node_modules/react-is/index.js","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/NativeViewGestureHandler.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/specs/NativeRNGestureHandlerModule.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/specs/RNGestureHandlerButtonNativeComponent.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/ActionType.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/Directions.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/EnableNewWebImplementation.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/GestureHandlerRootViewContext.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/PlatformConstants.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/PointerType.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/RNGestureHandlerModule.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/RNRenderer.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/State.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/TouchEventType.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/Pressable/index.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/Pressable/utils.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/touchables/index.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/findNodeHandle.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/getShadowNodeFromRef.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/ghQueueMicrotask.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/FlingGestureHandler.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/ForceTouchGestureHandler.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/LongPressGestureHandler.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/PanGestureHandler.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/PinchGestureHandler.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/RotationGestureHandler.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/TapGestureHandler.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/customDirectEventTypes.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestureHandlerCommon.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/attachHandlers.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/dropHandlers.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/needsToReattach.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/updateHandlers.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useDetectorUpdater.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useMountReactions.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useViewRefHandler.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/utils.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/eventReceiver.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/flingGesture.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/forceTouchGesture.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/gesture.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/gestureComposition.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/gestureObjects.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/gestureStateManager.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/hoverGesture.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/longPressGesture.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/manualGesture.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/nativeGesture.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/panGesture.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/pinchGesture.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/reanimatedWrapper.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/rotationGesture.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/tapGesture.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/getNextHandlerTag.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/handlersRegistry.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/utils.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/index.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/init.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/mountRegistry.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/utils.ts","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/DrawerLayout.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/GestureButtons.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/GestureComponents.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/GestureHandlerButton.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/GestureHandlerRootView.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/Pressable/Pressable.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/Swipeable.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/Text.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/gestureHandlerRootHOC.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/touchables/GenericTouchable.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/touchables/TouchableHighlight.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/touchables/TouchableNativeFeedback.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/touchables/TouchableOpacity.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/components/touchables/TouchableWithoutFeedback.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/PressabilityDebugView.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/createHandler.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/createNativeWrapper.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/Wrap.tsx","webpack://adopta-app/./node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/index.tsx"],"sourcesContent":["\"use strict\";\n\nvar _is_native_reflect_construct = require(\"./_is_native_reflect_construct.cjs\");\nvar _set_prototype_of = require(\"./_set_prototype_of.cjs\");\nfunction _construct(Parent, args, Class) {\n    if (_is_native_reflect_construct._()) exports._ = _construct = Reflect.construct;\n    else {\n        exports._ = _construct = function construct(Parent, args, Class) {\n            var a = [null];\n            a.push.apply(a, args);\n            var Constructor = Function.bind.apply(Parent, a);\n            var instance = new Constructor();\n\n            if (Class) _set_prototype_of._(instance, Class.prototype);\n\n            return instance;\n        };\n    }\n\n    return _construct.apply(null, arguments);\n}\nexports._ = _construct;\n","\"use strict\";\n\nvar _super_prop_base = require(\"./_super_prop_base.cjs\");\n\nfunction _get(target, property, receiver) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) exports._ = _get = Reflect.get;\n    else {\n        exports._ = _get = function get(target, property, receiver) {\n            var base = _super_prop_base._(target, property);\n\n            if (!base) return;\n\n            var desc = Object.getOwnPropertyDescriptor(base, property);\n\n            if (desc.get) return desc.get.call(receiver || target);\n\n            return desc.value;\n        };\n    }\n\n    return _get(target, property, receiver || target);\n}\nexports._ = _get;\n","\"use strict\";\n\nvar _get_prototype_of = require(\"./_get_prototype_of.cjs\");\n\nfunction _super_prop_base(object, property) {\n    while (!Object.prototype.hasOwnProperty.call(object, property)) {\n        object = _get_prototype_of._(object);\n        if (object === null) break;\n    }\n\n    return object;\n}\nexports._ = _super_prop_base;\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","import type { NativeViewGestureHandlerPayload } from './GestureHandlerEventPayload';\nimport createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const nativeViewGestureHandlerProps = [\n  'shouldActivateOnStart',\n  'disallowInterruption',\n] as const;\n\nexport interface NativeViewGestureConfig {\n  /**\n   * Android only.\n   *\n   * Determines whether the handler should check for an existing touch event on\n   * instantiation.\n   */\n  shouldActivateOnStart?: boolean;\n\n  /**\n   * When `true`, cancels all other gesture handlers when this\n   * `NativeViewGestureHandler` receives an `ACTIVE` state event.\n   */\n  disallowInterruption?: boolean;\n}\n\n/**\n * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.\n */\nexport interface NativeViewGestureHandlerProps\n  extends BaseGestureHandlerProps<NativeViewGestureHandlerPayload>,\n    NativeViewGestureConfig {}\n\nexport const nativeViewProps = [\n  ...baseGestureHandlerProps,\n  ...nativeViewGestureHandlerProps,\n] as const;\n\nexport const nativeViewHandlerName = 'NativeViewGestureHandler';\n\n/**\n * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.\n */\nexport type NativeViewGestureHandler = typeof NativeViewGestureHandler;\n\n/**\n * @deprecated NativeViewGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Native()` instead.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const NativeViewGestureHandler = createHandler<\n  NativeViewGestureHandlerProps,\n  NativeViewGestureHandlerPayload\n>({\n  name: nativeViewHandlerName,\n  allowedProps: nativeViewProps,\n  config: {},\n});\n","import { TurboModuleRegistry, TurboModule } from 'react-native';\nimport { Double } from 'react-native/Libraries/Types/CodegenTypes';\n\nexport interface Spec extends TurboModule {\n  handleSetJSResponder: (tag: Double, blockNativeResponder: boolean) => void;\n  handleClearJSResponder: () => void;\n  createGestureHandler: (\n    handlerName: string,\n    handlerTag: Double,\n    // Record<> is not supported by codegen\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    config: Object\n  ) => void;\n  attachGestureHandler: (\n    handlerTag: Double,\n    newView: Double,\n    actionType: Double\n  ) => void;\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  updateGestureHandler: (handlerTag: Double, newConfig: Object) => void;\n  dropGestureHandler: (handlerTag: Double) => void;\n  install: () => boolean;\n  flushOperations: () => void;\n}\n\nexport default TurboModuleRegistry.getEnforcing<Spec>('RNGestureHandlerModule');\n","import codegenNativeComponent from 'react-native/Libraries/Utilities/codegenNativeComponent';\nimport type {\n  Int32,\n  WithDefault,\n  Float,\n} from 'react-native/Libraries/Types/CodegenTypes';\nimport type { ViewProps, ColorValue } from 'react-native';\n\ninterface NativeProps extends ViewProps {\n  exclusive?: WithDefault<boolean, true>;\n  foreground?: boolean;\n  borderless?: boolean;\n  enabled?: WithDefault<boolean, true>;\n  rippleColor?: ColorValue;\n  rippleRadius?: Int32;\n  touchSoundDisabled?: WithDefault<boolean, false>;\n  borderWidth?: Float;\n  borderColor?: ColorValue;\n  borderStyle?: WithDefault<string, 'solid'>;\n}\n\nexport default codegenNativeComponent<NativeProps>('RNGestureHandlerButton');\n","export const ActionType = {\n  REANIMATED_WORKLET: 1,\n  NATIVE_ANIMATED_EVENT: 2,\n  JS_FUNCTION_OLD_API: 3,\n  JS_FUNCTION_NEW_API: 4,\n} as const;\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; it can be used as a type and as a value\nexport type ActionType = (typeof ActionType)[keyof typeof ActionType];\n","const RIGHT = 1;\nconst LEFT = 2;\nconst UP = 4;\nconst DOWN = 8;\n\n// Public interface\nexport const Directions = {\n  RIGHT: RIGHT,\n  LEFT: LEFT,\n  UP: UP,\n  DOWN: DOWN,\n} as const;\n\n// Internal interface\nexport const DiagonalDirections = {\n  UP_RIGHT: UP | RIGHT,\n  DOWN_RIGHT: DOWN | RIGHT,\n  UP_LEFT: UP | LEFT,\n  DOWN_LEFT: DOWN | LEFT,\n} as const;\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; it can be used as a type and as a value\nexport type Directions = (typeof Directions)[keyof typeof Directions];\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type DiagonalDirections =\n  (typeof DiagonalDirections)[keyof typeof DiagonalDirections];\n","import { Platform } from 'react-native';\nimport { tagMessage } from './utils';\n\nlet useNewWebImplementation = true;\nlet getWasCalled = false;\n\n/**\n * @deprecated new web implementation is enabled by default. This function will be removed in Gesture Handler 3\n */\nexport function enableExperimentalWebImplementation(\n  _shouldEnable = true\n): void {\n  // NO-OP since the new implementation is now the default\n  console.warn(\n    tagMessage(\n      'New web implementation is enabled by default. This function will be removed in Gesture Handler 3.'\n    )\n  );\n}\n\n/**\n * @deprecated legacy implementation is no longer supported. This function will be removed in Gesture Handler 3\n */\nexport function enableLegacyWebImplementation(\n  shouldUseLegacyImplementation = true\n): void {\n  console.warn(\n    tagMessage(\n      'Legacy web implementation is deprecated. This function will be removed in Gesture Handler 3.'\n    )\n  );\n\n  if (\n    Platform.OS !== 'web' ||\n    useNewWebImplementation === !shouldUseLegacyImplementation\n  ) {\n    return;\n  }\n\n  if (getWasCalled) {\n    console.error(\n      'Some parts of this application have already started using the new gesture handler implementation. No changes will be applied. You can try enabling legacy implementation earlier.'\n    );\n    return;\n  }\n\n  useNewWebImplementation = !shouldUseLegacyImplementation;\n}\n\nexport function isNewWebImplementationEnabled(): boolean {\n  getWasCalled = true;\n  return useNewWebImplementation;\n}\n","import React from 'react';\n\nexport default React.createContext(false);\n","import { NativeModules, Platform } from 'react-native';\n\ntype PlatformConstants = {\n  forceTouchAvailable: boolean;\n};\n\nexport default (NativeModules?.PlatformConstants ??\n  Platform.constants) as PlatformConstants;\n","export enum PointerType {\n  TOUCH,\n  STYLUS,\n  MOUSE,\n  KEY,\n  OTHER,\n}\n","// Reexport the native module spec used by codegen. The relevant files are inluded on Android\n// to ensure the compatibility with the old arch, while iOS doesn't require those at all.\n\nimport Module from './specs/NativeRNGestureHandlerModule';\nexport default Module;\n","// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nexport { default as RNRenderer } from 'react-native/Libraries/Renderer/shims/ReactNative';\n","// TODO use State from RNModule\n\nexport const State = {\n  UNDETERMINED: 0,\n  FAILED: 1,\n  BEGAN: 2,\n  CANCELLED: 3,\n  ACTIVE: 4,\n  END: 5,\n} as const;\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; it can be used as a type and as a value\nexport type State = (typeof State)[keyof typeof State];\n","export const TouchEventType = {\n  UNDETERMINED: 0,\n  TOUCHES_DOWN: 1,\n  TOUCHES_MOVE: 2,\n  TOUCHES_UP: 3,\n  TOUCHES_CANCELLED: 4,\n} as const;\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; it can be used as a type and as a value\nexport type TouchEventType =\n  (typeof TouchEventType)[keyof typeof TouchEventType];\n","export type {\n  PressableProps,\n  PressableStateCallbackType,\n} from './PressableProps';\nexport { default } from './Pressable';\n","import { Insets } from 'react-native';\nimport {\n  HoverGestureHandlerEventPayload,\n  LongPressGestureHandlerEventPayload,\n} from '../../handlers/GestureHandlerEventPayload';\nimport {\n  TouchData,\n  GestureStateChangeEvent,\n  GestureTouchEvent,\n} from '../../handlers/gestureHandlerCommon';\nimport { InnerPressableEvent, PressableEvent } from './PressableProps';\n\nconst numberAsInset = (value: number): Insets => ({\n  left: value,\n  right: value,\n  top: value,\n  bottom: value,\n});\n\nconst addInsets = (a: Insets, b: Insets): Insets => ({\n  left: (a.left ?? 0) + (b.left ?? 0),\n  right: (a.right ?? 0) + (b.right ?? 0),\n  top: (a.top ?? 0) + (b.top ?? 0),\n  bottom: (a.bottom ?? 0) + (b.bottom ?? 0),\n});\n\nconst touchDataToPressEvent = (\n  data: TouchData,\n  timestamp: number,\n  targetId: number\n): InnerPressableEvent => ({\n  identifier: data.id,\n  locationX: data.x,\n  locationY: data.y,\n  pageX: data.absoluteX,\n  pageY: data.absoluteY,\n  target: targetId,\n  timestamp: timestamp,\n  touches: [], // Always empty - legacy compatibility\n  changedTouches: [], // Always empty - legacy compatibility\n});\n\nconst gestureToPressEvent = (\n  event: GestureStateChangeEvent<\n    HoverGestureHandlerEventPayload | LongPressGestureHandlerEventPayload\n  >,\n  timestamp: number,\n  targetId: number\n): InnerPressableEvent => ({\n  identifier: event.handlerTag,\n  locationX: event.x,\n  locationY: event.y,\n  pageX: event.absoluteX,\n  pageY: event.absoluteY,\n  target: targetId,\n  timestamp: timestamp,\n  touches: [], // Always empty - legacy compatibility\n  changedTouches: [], // Always empty - legacy compatibility\n});\n\nconst isTouchWithinInset = (\n  dimensions: { width: number; height: number },\n  inset: Insets,\n  touch?: TouchData\n) =>\n  (touch?.x ?? 0) < (inset.right ?? 0) + dimensions.width &&\n  (touch?.y ?? 0) < (inset.bottom ?? 0) + dimensions.height &&\n  (touch?.x ?? 0) > -(inset.left ?? 0) &&\n  (touch?.y ?? 0) > -(inset.top ?? 0);\n\nconst gestureToPressableEvent = (\n  event: GestureStateChangeEvent<\n    HoverGestureHandlerEventPayload | LongPressGestureHandlerEventPayload\n  >\n): PressableEvent => {\n  const timestamp = Date.now();\n\n  // As far as I can see, there isn't a conventional way of getting targetId with the data we get\n  const targetId = 0;\n\n  const pressEvent = gestureToPressEvent(event, timestamp, targetId);\n\n  return {\n    nativeEvent: {\n      touches: [pressEvent],\n      changedTouches: [pressEvent],\n      identifier: pressEvent.identifier,\n      locationX: event.x,\n      locationY: event.y,\n      pageX: event.absoluteX,\n      pageY: event.absoluteY,\n      target: targetId,\n      timestamp: timestamp,\n      force: undefined,\n    },\n  };\n};\n\nconst gestureTouchToPressableEvent = (\n  event: GestureTouchEvent\n): PressableEvent => {\n  const timestamp = Date.now();\n\n  // As far as I can see, there isn't a conventional way of getting targetId with the data we get\n  const targetId = 0;\n\n  const touchesList = event.allTouches.map((touch: TouchData) =>\n    touchDataToPressEvent(touch, timestamp, targetId)\n  );\n  const changedTouchesList = event.changedTouches.map((touch: TouchData) =>\n    touchDataToPressEvent(touch, timestamp, targetId)\n  );\n\n  return {\n    nativeEvent: {\n      touches: touchesList,\n      changedTouches: changedTouchesList,\n      identifier: event.handlerTag,\n      locationX: event.allTouches.at(0)?.x ?? -1,\n      locationY: event.allTouches.at(0)?.y ?? -1,\n      pageX: event.allTouches.at(0)?.absoluteX ?? -1,\n      pageY: event.allTouches.at(0)?.absoluteY ?? -1,\n      target: targetId,\n      timestamp: timestamp,\n      force: undefined,\n    },\n  };\n};\n\nexport {\n  numberAsInset,\n  addInsets,\n  isTouchWithinInset,\n  gestureToPressableEvent,\n  gestureTouchToPressableEvent,\n};\n","export type { TouchableHighlightProps } from './TouchableHighlight';\nexport type { TouchableOpacityProps } from './TouchableOpacity';\nexport type { TouchableWithoutFeedbackProps } from './TouchableWithoutFeedback';\nexport { default as TouchableNativeFeedback } from './TouchableNativeFeedback';\nexport { default as TouchableWithoutFeedback } from './TouchableWithoutFeedback';\nexport { default as TouchableOpacity } from './TouchableOpacity';\nexport { default as TouchableHighlight } from './TouchableHighlight';\n","import { findNodeHandle } from 'react-native';\n\nexport default findNodeHandle;\n","// Used by GestureDetector (unsupported on web at the moment) to check whether the\n// attached view may get flattened on Fabric. This implementation causes errors\n// on web due to the static resolution of `require` statements by webpack breaking\n// the conditional importing. Solved by making .web file.\nlet findHostInstance_DEPRECATED: (ref: unknown) => void;\nlet getInternalInstanceHandleFromPublicInstance: (ref: unknown) => {\n  stateNode: { node: unknown };\n};\n\nexport function getShadowNodeFromRef(ref: unknown) {\n  // Load findHostInstance_DEPRECATED lazily because it may not be available before render\n  if (findHostInstance_DEPRECATED === undefined) {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-assignment\n      const ReactFabric = require('react-native/Libraries/Renderer/shims/ReactFabric');\n      // Since RN 0.77 ReactFabric exports findHostInstance_DEPRECATED in default object so we're trying to\n      // access it first, then fallback on named export\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      findHostInstance_DEPRECATED =\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        ReactFabric?.default?.findHostInstance_DEPRECATED ||\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        ReactFabric?.findHostInstance_DEPRECATED;\n    } catch (e) {\n      findHostInstance_DEPRECATED = (_ref: unknown) => null;\n    }\n  }\n\n  // Load findHostInstance_DEPRECATED lazily because it may not be available before render\n  if (getInternalInstanceHandleFromPublicInstance === undefined) {\n    try {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      getInternalInstanceHandleFromPublicInstance =\n        // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-unsafe-member-access\n        require('react-native/Libraries/ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstance')\n          .getInternalInstanceHandleFromPublicInstance ??\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-return\n        ((ref: any) => ref._internalInstanceHandle);\n    } catch (e) {\n      getInternalInstanceHandleFromPublicInstance = (ref: any) =>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-return\n        ref._internalInstanceHandle;\n    }\n  }\n\n  // @ts-ignore Fabric\n  return getInternalInstanceHandleFromPublicInstance(\n    findHostInstance_DEPRECATED(ref)\n  ).stateNode.node;\n}\n","// We check for typeof requestAnimationFrame because of SSR\n// Functions are bound to null to avoid issues with scope when using Metro inline requires.\nexport const ghQueueMicrotask =\n  typeof setImmediate === 'function'\n    ? setImmediate.bind(null)\n    : typeof requestAnimationFrame === 'function'\n      ? requestAnimationFrame.bind(null)\n      : queueMicrotask.bind(null);\n","import type { FlingGestureHandlerEventPayload } from './GestureHandlerEventPayload';\nimport createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const flingGestureHandlerProps = [\n  'numberOfPointers',\n  'direction',\n] as const;\n\nexport interface FlingGestureConfig {\n  /**\n   * Expressed allowed direction of movement. It's possible to pass one or many\n   * directions in one parameter:\n   *\n   * ```js\n   * direction={Directions.RIGHT | Directions.LEFT}\n   * ```\n   *\n   * or\n   *\n   * ```js\n   * direction={Directions.DOWN}\n   * ```\n   */\n  direction?: number;\n\n  /**\n   * Determine exact number of points required to handle the fling gesture.\n   */\n  numberOfPointers?: number;\n}\n\n/**\n * @deprecated FlingGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Fling()` instead.\n */\nexport interface FlingGestureHandlerProps\n  extends BaseGestureHandlerProps<FlingGestureHandlerEventPayload>,\n    FlingGestureConfig {}\n\nexport const flingHandlerName = 'FlingGestureHandler';\n\n/**\n * @deprecated FlingGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Fling()` instead.\n */\nexport type FlingGestureHandler = typeof FlingGestureHandler;\n\n/**\n * @deprecated FlingGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Fling()` instead.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const FlingGestureHandler = createHandler<\n  FlingGestureHandlerProps,\n  FlingGestureHandlerEventPayload\n>({\n  name: flingHandlerName,\n  allowedProps: [\n    ...baseGestureHandlerProps,\n    ...flingGestureHandlerProps,\n  ] as const,\n  config: {},\n});\n","import React, { PropsWithChildren } from 'react';\nimport { tagMessage } from '../utils';\nimport PlatformConstants from '../PlatformConstants';\nimport createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\nimport type { ForceTouchGestureHandlerEventPayload } from './GestureHandlerEventPayload';\n\nexport const forceTouchGestureHandlerProps = [\n  'minForce',\n  'maxForce',\n  'feedbackOnActivation',\n] as const;\n\n// implicit `children` prop has been removed in @types/react^18.0.0\nclass ForceTouchFallback extends React.Component<PropsWithChildren<unknown>> {\n  static forceTouchAvailable = false;\n  componentDidMount() {\n    console.warn(\n      tagMessage(\n        'ForceTouchGestureHandler is not available on this platform. Please use ForceTouchGestureHandler.forceTouchAvailable to conditionally render other components that would provide a fallback behavior specific to your usecase'\n      )\n    );\n  }\n  render() {\n    return this.props.children;\n  }\n}\n\nexport interface ForceTouchGestureConfig {\n  /**\n   *\n   * A minimal pressure that is required before handler can activate. Should be a\n   * value from range `[0.0, 1.0]`. Default is `0.2`.\n   */\n  minForce?: number;\n\n  /**\n   * A maximal pressure that could be applied for handler. If the pressure is\n   * greater, handler fails. Should be a value from range `[0.0, 1.0]`.\n   */\n  maxForce?: number;\n\n  /**\n   * Boolean value defining if haptic feedback has to be performed on\n   * activation.\n   */\n  feedbackOnActivation?: boolean;\n}\n\n/**\n * @deprecated ForceTouchGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.ForceTouch()` instead.\n */\nexport interface ForceTouchGestureHandlerProps\n  extends BaseGestureHandlerProps<ForceTouchGestureHandlerEventPayload>,\n    ForceTouchGestureConfig {}\n\n/**\n * @deprecated ForceTouchGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.ForceTouch()` instead.\n */\nexport type ForceTouchGestureHandler = typeof ForceTouchGestureHandler & {\n  forceTouchAvailable: boolean;\n};\n\nexport const forceTouchHandlerName = 'ForceTouchGestureHandler';\n\n/**\n * @deprecated ForceTouchGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.ForceTouch()` instead.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const ForceTouchGestureHandler = PlatformConstants?.forceTouchAvailable\n  ? createHandler<\n      ForceTouchGestureHandlerProps,\n      ForceTouchGestureHandlerEventPayload\n    >({\n      name: forceTouchHandlerName,\n      allowedProps: [\n        ...baseGestureHandlerProps,\n        ...forceTouchGestureHandlerProps,\n      ] as const,\n      config: {},\n    })\n  : ForceTouchFallback;\n\n(ForceTouchGestureHandler as ForceTouchGestureHandler).forceTouchAvailable =\n  PlatformConstants?.forceTouchAvailable || false;\n","import { LongPressGestureHandlerEventPayload } from './GestureHandlerEventPayload';\nimport createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const longPressGestureHandlerProps = [\n  'minDurationMs',\n  'maxDist',\n  'numberOfPointers',\n] as const;\n\nexport interface LongPressGestureConfig {\n  /**\n   * Minimum time, expressed in milliseconds, that a finger must remain pressed on\n   * the corresponding view. The default value is 500.\n   */\n  minDurationMs?: number;\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is\n   * allowed to travel during a long press gesture. If the finger travels\n   * further than the defined distance and the handler hasn't yet activated, it\n   * will fail to recognize the gesture. The default value is 10.\n   */\n  maxDist?: number;\n\n  /**\n   * Determine exact number of points required to handle the long press gesture.\n   */\n  numberOfPointers?: number;\n}\n\n/**\n * @deprecated LongPressGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.LongPress()` instead.\n */\nexport interface LongPressGestureHandlerProps\n  extends BaseGestureHandlerProps<LongPressGestureHandlerEventPayload>,\n    LongPressGestureConfig {}\n\nexport const longPressHandlerName = 'LongPressGestureHandler';\n\n/**\n * @deprecated LongPressGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.LongPress()` instead.\n */\nexport type LongPressGestureHandler = typeof LongPressGestureHandler;\n\n/**\n * @deprecated LongPressGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.LongPress()` instead.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const LongPressGestureHandler = createHandler<\n  LongPressGestureHandlerProps,\n  LongPressGestureHandlerEventPayload\n>({\n  name: longPressHandlerName,\n  allowedProps: [\n    ...baseGestureHandlerProps,\n    ...longPressGestureHandlerProps,\n  ] as const,\n  config: {\n    shouldCancelWhenOutside: true,\n  },\n});\n","import type { PanGestureHandlerEventPayload } from './GestureHandlerEventPayload';\nimport createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const panGestureHandlerProps = [\n  'activeOffsetY',\n  'activeOffsetX',\n  'failOffsetY',\n  'failOffsetX',\n  'minDist',\n  'minVelocity',\n  'minVelocityX',\n  'minVelocityY',\n  'minPointers',\n  'maxPointers',\n  'avgTouches',\n  'enableTrackpadTwoFingerGesture',\n  'activateAfterLongPress',\n] as const;\n\nexport const panGestureHandlerCustomNativeProps = [\n  'activeOffsetYStart',\n  'activeOffsetYEnd',\n  'activeOffsetXStart',\n  'activeOffsetXEnd',\n  'failOffsetYStart',\n  'failOffsetYEnd',\n  'failOffsetXStart',\n  'failOffsetXEnd',\n] as const;\n\ninterface CommonPanProperties {\n  /**\n   * Minimum distance the finger (or multiple finger) need to travel before the\n   * handler activates. Expressed in points.\n   */\n  minDist?: number;\n\n  /**\n   * Android only.\n   */\n  avgTouches?: boolean;\n\n  /**\n   * Enables two-finger gestures on supported devices, for example iPads with\n   * trackpads. If not enabled the gesture will require click + drag, with\n   * enableTrackpadTwoFingerGesture swiping with two fingers will also trigger\n   * the gesture.\n   */\n  enableTrackpadTwoFingerGesture?: boolean;\n\n  /**\n   * A number of fingers that is required to be placed before handler can\n   * activate. Should be a higher or equal to 0 integer.\n   */\n  minPointers?: number;\n\n  /**\n   * When the given number of fingers is placed on the screen and handler hasn't\n   * yet activated it will fail recognizing the gesture. Should be a higher or\n   * equal to 0 integer.\n   */\n  maxPointers?: number;\n\n  minVelocity?: number;\n  minVelocityX?: number;\n  minVelocityY?: number;\n  activateAfterLongPress?: number;\n}\n\nexport interface PanGestureConfig extends CommonPanProperties {\n  activeOffsetYStart?: number;\n  activeOffsetYEnd?: number;\n  activeOffsetXStart?: number;\n  activeOffsetXEnd?: number;\n  failOffsetYStart?: number;\n  failOffsetYEnd?: number;\n  failOffsetXStart?: number;\n  failOffsetXEnd?: number;\n}\n\n/**\n * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n */\nexport interface PanGestureHandlerProps\n  extends BaseGestureHandlerProps<PanGestureHandlerEventPayload>,\n    CommonPanProperties {\n  /**\n   * Range along X axis (in points) where fingers travels without activation of\n   * handler. Moving outside of this range implies activation of handler. Range\n   * can be given as an array or a single number. If range is set as an array,\n   * first value must be lower or equal to 0, a the second one higher or equal\n   * to 0. If only one number `p` is given a range of `(-inf, p)` will be used\n   * if `p` is higher or equal to 0 and `(-p, inf)` otherwise.\n   */\n  activeOffsetY?:\n    | number\n    | [activeOffsetYStart: number, activeOffsetYEnd: number];\n\n  /**\n   * Range along X axis (in points) where fingers travels without activation of\n   * handler. Moving outside of this range implies activation of handler. Range\n   * can be given as an array or a single number. If range is set as an array,\n   * first value must be lower or equal to 0, a the second one higher or equal\n   * to 0. If only one number `p` is given a range of `(-inf, p)` will be used\n   * if `p` is higher or equal to 0 and `(-p, inf)` otherwise.\n   */\n  activeOffsetX?:\n    | number\n    | [activeOffsetXStart: number, activeOffsetXEnd: number];\n\n  /**\n   * When the finger moves outside this range (in points) along Y axis and\n   * handler hasn't yet activated it will fail recognizing the gesture. Range\n   * can be given as an array or a single number. If range is set as an array,\n   * first value must be lower or equal to 0, a the second one higher or equal\n   * to 0. If only one number `p` is given a range of `(-inf, p)` will be used\n   * if `p` is higher or equal to 0 and `(-p, inf)` otherwise.\n   */\n  failOffsetY?: number | [failOffsetYStart: number, failOffsetYEnd: number];\n\n  /**\n   * When the finger moves outside this range (in points) along X axis and\n   * handler hasn't yet activated it will fail recognizing the gesture. Range\n   * can be given as an array or a single number. If range is set as an array,\n   * first value must be lower or equal to 0, a the second one higher or equal\n   * to 0. If only one number `p` is given a range of `(-inf, p)` will be used\n   * if `p` is higher or equal to 0 and `(-p, inf)` otherwise.\n   */\n  failOffsetX?: number | [failOffsetXStart: number, failOffsetXEnd: number];\n}\n\nexport const panHandlerName = 'PanGestureHandler';\n\n/**\n * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n */\nexport type PanGestureHandler = typeof PanGestureHandler;\n\n/**\n * @deprecated PanGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pan()` instead.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const PanGestureHandler = createHandler<\n  PanGestureHandlerProps,\n  PanGestureHandlerEventPayload\n>({\n  name: panHandlerName,\n  allowedProps: [\n    ...baseGestureHandlerProps,\n    ...panGestureHandlerProps,\n  ] as const,\n  config: {},\n  transformProps: managePanProps,\n  customNativeProps: panGestureHandlerCustomNativeProps,\n});\n\nfunction validatePanGestureHandlerProps(props: PanGestureHandlerProps) {\n  if (\n    Array.isArray(props.activeOffsetX) &&\n    (props.activeOffsetX[0] > 0 || props.activeOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.activeOffsetY) &&\n    (props.activeOffsetY[0] > 0 || props.activeOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of activeOffsetY should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetX) &&\n    (props.failOffsetX[0] > 0 || props.failOffsetX[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetX should be negative, a the second one should be positive`\n    );\n  }\n\n  if (\n    Array.isArray(props.failOffsetY) &&\n    (props.failOffsetY[0] > 0 || props.failOffsetY[1] < 0)\n  ) {\n    throw new Error(\n      `First element of failOffsetY should be negative, a the second one should be positive`\n    );\n  }\n\n  if (props.minDist && (props.failOffsetX || props.failOffsetY)) {\n    throw new Error(\n      `It is not supported to use minDist with failOffsetX or failOffsetY, use activeOffsetX and activeOffsetY instead`\n    );\n  }\n\n  if (props.minDist && (props.activeOffsetX || props.activeOffsetY)) {\n    throw new Error(\n      `It is not supported to use minDist with activeOffsetX or activeOffsetY`\n    );\n  }\n}\n\nfunction transformPanGestureHandlerProps(props: PanGestureHandlerProps) {\n  type InternalPanGHKeys =\n    | 'activeOffsetXStart'\n    | 'activeOffsetXEnd'\n    | 'failOffsetXStart'\n    | 'failOffsetXEnd'\n    | 'activeOffsetYStart'\n    | 'activeOffsetYEnd'\n    | 'failOffsetYStart'\n    | 'failOffsetYEnd';\n  type PanGestureHandlerInternalProps = PanGestureHandlerProps &\n    Partial<Record<InternalPanGHKeys, number>>;\n\n  const res: PanGestureHandlerInternalProps = { ...props };\n\n  if (props.activeOffsetX !== undefined) {\n    delete res.activeOffsetX;\n    if (Array.isArray(props.activeOffsetX)) {\n      res.activeOffsetXStart = props.activeOffsetX[0];\n      res.activeOffsetXEnd = props.activeOffsetX[1];\n    } else if (props.activeOffsetX < 0) {\n      res.activeOffsetXStart = props.activeOffsetX;\n    } else {\n      res.activeOffsetXEnd = props.activeOffsetX;\n    }\n  }\n\n  if (props.activeOffsetY !== undefined) {\n    delete res.activeOffsetY;\n    if (Array.isArray(props.activeOffsetY)) {\n      res.activeOffsetYStart = props.activeOffsetY[0];\n      res.activeOffsetYEnd = props.activeOffsetY[1];\n    } else if (props.activeOffsetY < 0) {\n      res.activeOffsetYStart = props.activeOffsetY;\n    } else {\n      res.activeOffsetYEnd = props.activeOffsetY;\n    }\n  }\n\n  if (props.failOffsetX !== undefined) {\n    delete res.failOffsetX;\n    if (Array.isArray(props.failOffsetX)) {\n      res.failOffsetXStart = props.failOffsetX[0];\n      res.failOffsetXEnd = props.failOffsetX[1];\n    } else if (props.failOffsetX < 0) {\n      res.failOffsetXStart = props.failOffsetX;\n    } else {\n      res.failOffsetXEnd = props.failOffsetX;\n    }\n  }\n\n  if (props.failOffsetY !== undefined) {\n    delete res.failOffsetY;\n    if (Array.isArray(props.failOffsetY)) {\n      res.failOffsetYStart = props.failOffsetY[0];\n      res.failOffsetYEnd = props.failOffsetY[1];\n    } else if (props.failOffsetY < 0) {\n      res.failOffsetYStart = props.failOffsetY;\n    } else {\n      res.failOffsetYEnd = props.failOffsetY;\n    }\n  }\n\n  return res;\n}\n\nexport function managePanProps(props: PanGestureHandlerProps) {\n  if (__DEV__) {\n    validatePanGestureHandlerProps(props);\n  }\n  return transformPanGestureHandlerProps(props);\n}\n","import { PinchGestureHandlerEventPayload } from './GestureHandlerEventPayload';\nimport createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\n/**\n * @deprecated PinchGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pinch()` instead.\n */\nexport interface PinchGestureHandlerProps\n  extends BaseGestureHandlerProps<PinchGestureHandlerEventPayload> {}\n\nexport const pinchHandlerName = 'PinchGestureHandler';\n\n/**\n * @deprecated PinchGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pinch()` instead.\n */\nexport type PinchGestureHandler = typeof PinchGestureHandler;\n\n/**\n * @deprecated PinchGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Pinch()` instead.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const PinchGestureHandler = createHandler<\n  PinchGestureHandlerProps,\n  PinchGestureHandlerEventPayload\n>({\n  name: pinchHandlerName,\n  allowedProps: baseGestureHandlerProps,\n  config: {},\n});\n","import { RotationGestureHandlerEventPayload } from './GestureHandlerEventPayload';\nimport createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\n/**\n * @deprecated RotationGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Rotation()` instead.\n */\nexport interface RotationGestureHandlerProps\n  extends BaseGestureHandlerProps<RotationGestureHandlerEventPayload> {}\n\nexport const rotationHandlerName = 'RotationGestureHandler';\n\n/**\n * @deprecated RotationGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Rotation()` instead.\n */\nexport type RotationGestureHandler = typeof RotationGestureHandler;\n\n/**\n * @deprecated RotationGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Rotation()` instead.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const RotationGestureHandler = createHandler<\n  RotationGestureHandlerProps,\n  RotationGestureHandlerEventPayload\n>({\n  name: rotationHandlerName,\n  allowedProps: baseGestureHandlerProps,\n  config: {},\n});\n","import type { TapGestureHandlerEventPayload } from './GestureHandlerEventPayload';\nimport createHandler from './createHandler';\nimport {\n  BaseGestureHandlerProps,\n  baseGestureHandlerProps,\n} from './gestureHandlerCommon';\n\nexport const tapGestureHandlerProps = [\n  'maxDurationMs',\n  'maxDelayMs',\n  'numberOfTaps',\n  'maxDeltaX',\n  'maxDeltaY',\n  'maxDist',\n  'minPointers',\n] as const;\n\nexport interface TapGestureConfig {\n  /**\n   * Minimum number of pointers (fingers) required to be placed before the\n   * handler activates. Should be a positive integer.\n   * The default value is 1.\n   */\n  minPointers?: number;\n\n  /**\n   * Maximum time, expressed in milliseconds, that defines how fast a finger\n   * must be released after a touch. The default value is 500.\n   */\n  maxDurationMs?: number;\n\n  /**\n   * Maximum time, expressed in milliseconds, that can pass before the next tap\n   * if many taps are required. The default value is 500.\n   */\n  maxDelayMs?: number;\n\n  /**\n   * Number of tap gestures required to activate the handler. The default value\n   * is 1.\n   */\n  numberOfTaps?: number;\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is\n   * allowed to travel along the X axis during a tap gesture. If the finger\n   * travels further than the defined distance along the X axis and the handler\n   * hasn't yet activated, it will fail to recognize the gesture.\n   */\n  maxDeltaX?: number;\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is\n   * allowed to travel along the Y axis during a tap gesture. If the finger\n   * travels further than the defined distance along the Y axis and the handler\n   * hasn't yet activated, it will fail to recognize the gesture.\n   */\n  maxDeltaY?: number;\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is\n   * allowed to travel during a tap gesture. If the finger travels further than\n   * the defined distance and the handler hasn't yet\n   * activated, it will fail to recognize the gesture.\n   */\n  maxDist?: number;\n}\n\n/**\n * @deprecated TapGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Tap()` instead.\n */\nexport interface TapGestureHandlerProps\n  extends BaseGestureHandlerProps<TapGestureHandlerEventPayload>,\n    TapGestureConfig {}\n\nexport const tapHandlerName = 'TapGestureHandler';\n\n/**\n * @deprecated TapGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Tap()` instead.\n */\nexport type TapGestureHandler = typeof TapGestureHandler;\n\n/**\n * @deprecated TapGestureHandler will be removed in the future version of Gesture Handler. Use `Gesture.Tap()` instead.\n */\n// eslint-disable-next-line @typescript-eslint/no-redeclare -- backward compatibility; see description on the top of gestureHandlerCommon.ts file\nexport const TapGestureHandler = createHandler<\n  TapGestureHandlerProps,\n  TapGestureHandlerEventPayload\n>({\n  name: tapHandlerName,\n  allowedProps: [\n    ...baseGestureHandlerProps,\n    ...tapGestureHandlerProps,\n  ] as const,\n  config: {\n    shouldCancelWhenOutside: true,\n  },\n});\n","// @ts-ignore - its taken straight from RN\nexport { customDirectEventTypes } from 'react-native/Libraries/Renderer/shims/ReactNativeViewConfigRegistry';\n","// Previous types exported gesture handlers as classes which creates an interface and variable, both named the same as class.\n// Without those types, we'd introduce breaking change, forcing users to prefix every handler type specification with typeof\n// e.g. React.createRef<TapGestureHandler> -> React.createRef<typeof TapGestureHandler>.\n// See https://www.typescriptlang.org/docs/handbook/classes.html#constructor-functions for reference.\nimport * as React from 'react';\n\nimport { State } from '../State';\nimport { TouchEventType } from '../TouchEventType';\nimport { ValueOf } from '../typeUtils';\nimport { PointerType } from '../PointerType';\n\nconst commonProps = [\n  'id',\n  'enabled',\n  'shouldCancelWhenOutside',\n  'hitSlop',\n  'cancelsTouchesInView',\n  'userSelect',\n  'activeCursor',\n  'mouseButton',\n  'enableContextMenu',\n  'touchAction',\n] as const;\n\nconst componentInteractionProps = [\n  'waitFor',\n  'simultaneousHandlers',\n  'blocksHandlers',\n] as const;\n\nexport const baseGestureHandlerProps = [\n  ...commonProps,\n  ...componentInteractionProps,\n  'onBegan',\n  'onFailed',\n  'onCancelled',\n  'onActivated',\n  'onEnded',\n  'onGestureEvent',\n  'onHandlerStateChange',\n] as const;\n\nexport const baseGestureHandlerWithDetectorProps = [\n  ...commonProps,\n  'needsPointerData',\n  'manualActivation',\n];\n\nexport interface GestureEventPayload {\n  handlerTag: number;\n  numberOfPointers: number;\n  state: ValueOf<typeof State>;\n  pointerType: PointerType;\n}\nexport interface HandlerStateChangeEventPayload extends GestureEventPayload {\n  oldState: ValueOf<typeof State>;\n}\n\nexport type HitSlop =\n  | number\n  | null\n  | undefined\n  | Partial<\n      Record<\n        'left' | 'right' | 'top' | 'bottom' | 'vertical' | 'horizontal',\n        number\n      >\n    >\n  | Record<'width' | 'left', number>\n  | Record<'width' | 'right', number>\n  | Record<'height' | 'top', number>\n  | Record<'height' | 'bottom', number>;\n\nexport type UserSelect = 'none' | 'auto' | 'text';\nexport type ActiveCursor =\n  | 'auto'\n  | 'default'\n  | 'none'\n  | 'context-menu'\n  | 'help'\n  | 'pointer'\n  | 'progress'\n  | 'wait'\n  | 'cell'\n  | 'crosshair'\n  | 'text'\n  | 'vertical-text'\n  | 'alias'\n  | 'copy'\n  | 'move'\n  | 'no-drop'\n  | 'not-allowed'\n  | 'grab'\n  | 'grabbing'\n  | 'e-resize'\n  | 'n-resize'\n  | 'ne-resize'\n  | 'nw-resize'\n  | 's-resize'\n  | 'se-resize'\n  | 'sw-resize'\n  | 'w-resize'\n  | 'ew-resize'\n  | 'ns-resize'\n  | 'nesw-resize'\n  | 'nwse-resize'\n  | 'col-resize'\n  | 'row-resize'\n  | 'all-scroll'\n  | 'zoom-in'\n  | 'zoom-out';\n\nexport enum MouseButton {\n  LEFT = 1,\n  RIGHT = 2,\n  MIDDLE = 4,\n  BUTTON_4 = 8,\n  BUTTON_5 = 16,\n  ALL = 31,\n}\n\nexport type TouchAction =\n  | 'auto'\n  | 'none'\n  | 'pan-x'\n  | 'pan-left'\n  | 'pan-right'\n  | 'pan-y'\n  | 'pan-up'\n  | 'pan-down'\n  | 'pinch-zoom'\n  | 'manipulation'\n  | 'inherit'\n  | 'initial'\n  | 'revert'\n  | 'revert-layer'\n  | 'unset';\n\n// TODO(TS) events in handlers\n\nexport interface GestureEvent<ExtraEventPayloadT = Record<string, unknown>> {\n  nativeEvent: Readonly<GestureEventPayload & ExtraEventPayloadT>;\n}\nexport interface HandlerStateChangeEvent<\n  ExtraEventPayloadT = Record<string, unknown>,\n> {\n  nativeEvent: Readonly<HandlerStateChangeEventPayload & ExtraEventPayloadT>;\n}\n\nexport type TouchData = {\n  id: number;\n  x: number;\n  y: number;\n  absoluteX: number;\n  absoluteY: number;\n};\n\nexport type GestureTouchEvent = {\n  handlerTag: number;\n  numberOfTouches: number;\n  state: ValueOf<typeof State>;\n  eventType: TouchEventType;\n  allTouches: TouchData[];\n  changedTouches: TouchData[];\n  pointerType: PointerType;\n};\n\nexport type GestureUpdateEvent<GestureEventPayloadT = Record<string, unknown>> =\n  GestureEventPayload & GestureEventPayloadT;\n\nexport type GestureStateChangeEvent<\n  GestureStateChangeEventPayloadT = Record<string, unknown>,\n> = HandlerStateChangeEventPayload & GestureStateChangeEventPayloadT;\n\nexport type CommonGestureConfig = {\n  enabled?: boolean;\n  shouldCancelWhenOutside?: boolean;\n  hitSlop?: HitSlop;\n  userSelect?: UserSelect;\n  activeCursor?: ActiveCursor;\n  mouseButton?: MouseButton;\n  enableContextMenu?: boolean;\n  touchAction?: TouchAction;\n};\n\n// Events payloads are types instead of interfaces due to TS limitation.\n// See https://github.com/microsoft/TypeScript/issues/15300 for more info.\nexport type BaseGestureHandlerProps<\n  ExtraEventPayloadT extends Record<string, unknown> = Record<string, unknown>,\n> = CommonGestureConfig & {\n  id?: string;\n  waitFor?: React.Ref<unknown> | React.Ref<unknown>[];\n  simultaneousHandlers?: React.Ref<unknown> | React.Ref<unknown>[];\n  blocksHandlers?: React.Ref<unknown> | React.Ref<unknown>[];\n  testID?: string;\n  cancelsTouchesInView?: boolean;\n  // TODO(TS) - fix event types\n  onBegan?: (event: HandlerStateChangeEvent) => void;\n  onFailed?: (event: HandlerStateChangeEvent) => void;\n  onCancelled?: (event: HandlerStateChangeEvent) => void;\n  onActivated?: (event: HandlerStateChangeEvent) => void;\n  onEnded?: (event: HandlerStateChangeEvent) => void;\n\n  // TODO(TS) consider using NativeSyntheticEvent\n  onGestureEvent?: (event: GestureEvent<ExtraEventPayloadT>) => void;\n  onHandlerStateChange?: (\n    event: HandlerStateChangeEvent<ExtraEventPayloadT>\n  ) => void;\n  // Implicit `children` prop has been removed in @types/react^18.0.0\n  children?: React.ReactNode;\n};\n","import React from 'react';\nimport { GestureType, HandlerCallbacks } from '../gesture';\nimport { registerHandler } from '../../handlersRegistry';\nimport RNGestureHandlerModule from '../../../RNGestureHandlerModule';\nimport { filterConfig, scheduleFlushOperations } from '../../utils';\nimport { ComposedGesture } from '../gestureComposition';\nimport { ActionType } from '../../../ActionType';\nimport { Platform } from 'react-native';\nimport type RNGestureHandlerModuleWeb from '../../../RNGestureHandlerModule.web';\nimport { ghQueueMicrotask } from '../../../ghQueueMicrotask';\nimport { AttachedGestureState, WebEventHandler } from './types';\nimport {\n  extractGestureRelations,\n  checkGestureCallbacksForWorklets,\n  ALLOWED_PROPS,\n} from './utils';\nimport { MountRegistry } from '../../../mountRegistry';\n\ninterface AttachHandlersConfig {\n  preparedGesture: AttachedGestureState;\n  gestureConfig: ComposedGesture | GestureType;\n  gesturesToAttach: GestureType[];\n  viewTag: number;\n  webEventHandlersRef: React.RefObject<WebEventHandler>;\n}\n\nexport function attachHandlers({\n  preparedGesture,\n  gestureConfig,\n  gesturesToAttach,\n  viewTag,\n  webEventHandlersRef,\n}: AttachHandlersConfig) {\n  gestureConfig.initialize();\n\n  // Use queueMicrotask to extract handlerTags, because all refs should be initialized\n  // when it's ran\n  ghQueueMicrotask(() => {\n    if (!preparedGesture.isMounted) {\n      return;\n    }\n    gestureConfig.prepare();\n  });\n\n  for (const handler of gesturesToAttach) {\n    checkGestureCallbacksForWorklets(handler);\n    RNGestureHandlerModule.createGestureHandler(\n      handler.handlerName,\n      handler.handlerTag,\n      filterConfig(handler.config, ALLOWED_PROPS)\n    );\n\n    registerHandler(handler.handlerTag, handler, handler.config.testId);\n  }\n\n  // Use queueMicrotask to extract handlerTags, because all refs should be initialized\n  // when it's ran\n  ghQueueMicrotask(() => {\n    if (!preparedGesture.isMounted) {\n      return;\n    }\n    for (const handler of gesturesToAttach) {\n      RNGestureHandlerModule.updateGestureHandler(\n        handler.handlerTag,\n        filterConfig(\n          handler.config,\n          ALLOWED_PROPS,\n          extractGestureRelations(handler)\n        )\n      );\n    }\n\n    scheduleFlushOperations();\n  });\n\n  for (const gesture of gesturesToAttach) {\n    const actionType = gesture.shouldUseReanimated\n      ? ActionType.REANIMATED_WORKLET\n      : ActionType.JS_FUNCTION_NEW_API;\n\n    if (Platform.OS === 'web') {\n      (\n        RNGestureHandlerModule.attachGestureHandler as typeof RNGestureHandlerModuleWeb.attachGestureHandler\n      )(\n        gesture.handlerTag,\n        viewTag,\n        ActionType.JS_FUNCTION_OLD_API, // Ignored on web\n        webEventHandlersRef\n      );\n    } else {\n      RNGestureHandlerModule.attachGestureHandler(\n        gesture.handlerTag,\n        viewTag,\n        actionType\n      );\n    }\n\n    MountRegistry.gestureWillMount(gesture);\n  }\n\n  preparedGesture.attachedGestures = gesturesToAttach;\n\n  if (preparedGesture.animatedHandlers) {\n    const isAnimatedGesture = (g: GestureType) => g.shouldUseReanimated;\n\n    preparedGesture.animatedHandlers.value = gesturesToAttach\n      .filter(isAnimatedGesture)\n      .map((g) => g.handlers) as unknown as HandlerCallbacks<\n      Record<string, unknown>\n    >[];\n  }\n}\n","import { unregisterHandler } from '../../handlersRegistry';\nimport RNGestureHandlerModule from '../../../RNGestureHandlerModule';\nimport { scheduleFlushOperations } from '../../utils';\nimport { AttachedGestureState } from './types';\nimport { MountRegistry } from '../../../mountRegistry';\n\nexport function dropHandlers(preparedGesture: AttachedGestureState) {\n  for (const handler of preparedGesture.attachedGestures) {\n    RNGestureHandlerModule.dropGestureHandler(handler.handlerTag);\n\n    unregisterHandler(handler.handlerTag, handler.config.testId);\n\n    MountRegistry.gestureWillUnmount(handler);\n  }\n\n  scheduleFlushOperations();\n}\n","import { GestureType } from '../gesture';\nimport { AttachedGestureState } from './types';\n\n// Checks whether the gesture should be reattached to the view, this will happen when:\n// - The number of gestures in the preparedGesture is different than the number of gestures in the gesture\n// - The handlerName is different in any of the gestures\n// - At least one of the gestures changed the thread it runs on\nexport function needsToReattach(\n  preparedGesture: AttachedGestureState,\n  newGestures: GestureType[]\n) {\n  if (newGestures.length !== preparedGesture.attachedGestures.length) {\n    return true;\n  }\n  for (let i = 0; i < newGestures.length; i++) {\n    if (\n      newGestures[i].handlerName !==\n        preparedGesture.attachedGestures[i].handlerName ||\n      newGestures[i].shouldUseReanimated !==\n        preparedGesture.attachedGestures[i].shouldUseReanimated\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","import { GestureType, HandlerCallbacks } from '../gesture';\nimport { registerHandler } from '../../handlersRegistry';\nimport RNGestureHandlerModule from '../../../RNGestureHandlerModule';\nimport { filterConfig, scheduleFlushOperations } from '../../utils';\nimport { ComposedGesture } from '../gestureComposition';\nimport { ghQueueMicrotask } from '../../../ghQueueMicrotask';\nimport { AttachedGestureState } from './types';\nimport {\n  extractGestureRelations,\n  checkGestureCallbacksForWorklets,\n  ALLOWED_PROPS,\n} from './utils';\n\nexport function updateHandlers(\n  preparedGesture: AttachedGestureState,\n  gestureConfig: ComposedGesture | GestureType,\n  newGestures: GestureType[]\n) {\n  gestureConfig.prepare();\n\n  for (let i = 0; i < newGestures.length; i++) {\n    const handler = preparedGesture.attachedGestures[i];\n    checkGestureCallbacksForWorklets(handler);\n\n    // Only update handlerTag when it's actually different, it may be the same\n    // if gesture config object is wrapped with useMemo\n    if (newGestures[i].handlerTag !== handler.handlerTag) {\n      newGestures[i].handlerTag = handler.handlerTag;\n      newGestures[i].handlers.handlerTag = handler.handlerTag;\n    }\n  }\n\n  // Store attached gestures to avoid crash when gestures changed after queueing micro task\n  const attachedGestures = preparedGesture.attachedGestures;\n\n  // Use queueMicrotask to extract handlerTags, because when it's ran, all refs should be updated\n  // and handlerTags in BaseGesture references should be updated in the loop above (we need to wait\n  // in case of external relations)\n  ghQueueMicrotask(() => {\n    if (!preparedGesture.isMounted) {\n      return;\n    }\n\n    // Stop if attached gestures changed after queueing micro task\n    if (attachedGestures !== preparedGesture.attachedGestures) {\n      return;\n    }\n\n    // If amount of gesture configs changes, we need to update the callbacks in shared value\n    let shouldUpdateSharedValueIfUsed =\n      attachedGestures.length !== newGestures.length;\n\n    for (let i = 0; i < newGestures.length; i++) {\n      const handler = attachedGestures[i];\n\n      // If the gestureId is different (gesture isn't wrapped with useMemo or its dependencies changed),\n      // we need to update the shared value, assuming the gesture runs on UI thread or the thread changed\n      if (\n        handler.handlers.gestureId !== newGestures[i].handlers.gestureId &&\n        (newGestures[i].shouldUseReanimated || handler.shouldUseReanimated)\n      ) {\n        shouldUpdateSharedValueIfUsed = true;\n      }\n\n      handler.config = newGestures[i].config;\n      handler.handlers = newGestures[i].handlers;\n\n      RNGestureHandlerModule.updateGestureHandler(\n        handler.handlerTag,\n        filterConfig(\n          handler.config,\n          ALLOWED_PROPS,\n          extractGestureRelations(handler)\n        )\n      );\n\n      registerHandler(handler.handlerTag, handler, handler.config.testId);\n    }\n\n    if (preparedGesture.animatedHandlers && shouldUpdateSharedValueIfUsed) {\n      const newHandlersValue = attachedGestures\n        .filter((g) => g.shouldUseReanimated) // Ignore gestures that shouldn't run on UI\n        .map((g) => g.handlers) as unknown as HandlerCallbacks<\n        Record<string, unknown>\n      >[];\n\n      preparedGesture.animatedHandlers.value = newHandlersValue;\n    }\n\n    scheduleFlushOperations();\n  });\n}\n","import { HandlerCallbacks, CALLBACK_TYPE } from '../gesture';\nimport { Reanimated } from '../reanimatedWrapper';\nimport { GestureTouchEvent, GestureUpdateEvent, GestureStateChangeEvent } from '../../gestureHandlerCommon';\nimport { GestureStateManager, GestureStateManagerType } from '../gestureStateManager';\nimport { State } from '../../../State';\nimport { TouchEventType } from '../../../TouchEventType';\nimport { tagMessage } from '../../../utils';\nimport { AttachedGestureState } from './types';\nconst _worklet_12174736290982_init_data = {\n  code: \"function getHandler_Pnpm_useAnimatedGestureTs1(type,gesture){const{CALLBACK_TYPE}=this.__closure;switch(type){case CALLBACK_TYPE.BEGAN:return gesture.onBegin;case CALLBACK_TYPE.START:return gesture.onStart;case CALLBACK_TYPE.UPDATE:return gesture.onUpdate;case CALLBACK_TYPE.CHANGE:return gesture.onChange;case CALLBACK_TYPE.END:return gesture.onEnd;case CALLBACK_TYPE.FINALIZE:return gesture.onFinalize;case CALLBACK_TYPE.TOUCHES_DOWN:return gesture.onTouchesDown;case CALLBACK_TYPE.TOUCHES_MOVE:return gesture.onTouchesMove;case CALLBACK_TYPE.TOUCHES_UP:return gesture.onTouchesUp;case CALLBACK_TYPE.TOUCHES_CANCELLED:return gesture.onTouchesCancelled;}}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"getHandler_Pnpm_useAnimatedGestureTs1\\\",\\\"type\\\",\\\"gesture\\\",\\\"CALLBACK_TYPE\\\",\\\"__closure\\\",\\\"BEGAN\\\",\\\"onBegin\\\",\\\"START\\\",\\\"onStart\\\",\\\"UPDATE\\\",\\\"onUpdate\\\",\\\"CHANGE\\\",\\\"onChange\\\",\\\"END\\\",\\\"onEnd\\\",\\\"FINALIZE\\\",\\\"onFinalize\\\",\\\"TOUCHES_DOWN\\\",\\\"onTouchesDown\\\",\\\"TOUCHES_MOVE\\\",\\\"onTouchesMove\\\",\\\"TOUCHES_UP\\\",\\\"onTouchesUp\\\",\\\"TOUCHES_CANCELLED\\\",\\\"onTouchesCancelled\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\\\"],\\\"mappings\\\":\\\"AAgBA,SAAAA,qCAGEA,CAAAC,IAAA,CAAAC,OAAA,QAAAC,aAAA,OAAAC,SAAA,CAEA,OAAQH,IAAI,EACV,IAAK,CAAAE,aAAa,CAACE,KAAK,CACtB,MAAO,CAAAH,OAAO,CAACI,OAAO,CACxB,IAAK,CAAAH,aAAa,CAACI,KAAK,CACtB,MAAO,CAAAL,OAAO,CAACM,OAAO,CACxB,IAAK,CAAAL,aAAa,CAACM,MAAM,CACvB,MAAO,CAAAP,OAAO,CAACQ,QAAQ,CACzB,IAAK,CAAAP,aAAa,CAACQ,MAAM,CACvB,MAAO,CAAAT,OAAO,CAACU,QAAQ,CACzB,IAAK,CAAAT,aAAa,CAACU,GAAG,CACpB,MAAO,CAAAX,OAAO,CAACY,KAAK,CACtB,IAAK,CAAAX,aAAa,CAACY,QAAQ,CACzB,MAAO,CAAAb,OAAO,CAACc,UAAU,CAC3B,IAAK,CAAAb,aAAa,CAACc,YAAY,CAC7B,MAAO,CAAAf,OAAO,CAACgB,aAAa,CAC9B,IAAK,CAAAf,aAAa,CAACgB,YAAY,CAC7B,MAAO,CAAAjB,OAAO,CAACkB,aAAa,CAC9B,IAAK,CAAAjB,aAAa,CAACkB,UAAU,CAC3B,MAAO,CAAAnB,OAAO,CAACoB,WAAW,CAC5B,IAAK,CAAAnB,aAAa,CAACoB,iBAAiB,CAClC,MAAO,CAAArB,OAAO,CAACsB,kBAAkB,CACrC,CACF\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst getHandler = function () {\n  const _e = [new global.Error(), -2, -27];\n  const getHandler = function (type: CALLBACK_TYPE, gesture: HandlerCallbacks<Record<string, unknown>>) {\n    switch (type) {\n      case CALLBACK_TYPE.BEGAN:\n        return gesture.onBegin;\n      case CALLBACK_TYPE.START:\n        return gesture.onStart;\n      case CALLBACK_TYPE.UPDATE:\n        return gesture.onUpdate;\n      case CALLBACK_TYPE.CHANGE:\n        return gesture.onChange;\n      case CALLBACK_TYPE.END:\n        return gesture.onEnd;\n      case CALLBACK_TYPE.FINALIZE:\n        return gesture.onFinalize;\n      case CALLBACK_TYPE.TOUCHES_DOWN:\n        return gesture.onTouchesDown;\n      case CALLBACK_TYPE.TOUCHES_MOVE:\n        return gesture.onTouchesMove;\n      case CALLBACK_TYPE.TOUCHES_UP:\n        return gesture.onTouchesUp;\n      case CALLBACK_TYPE.TOUCHES_CANCELLED:\n        return gesture.onTouchesCancelled;\n    }\n  };\n  getHandler.__closure = {\n    CALLBACK_TYPE\n  };\n  getHandler.__workletHash = 12174736290982;\n  getHandler.__initData = _worklet_12174736290982_init_data;\n  getHandler.__stackDetails = _e;\n  return getHandler;\n}();\nconst _worklet_6825086001765_init_data = {\n  code: \"function touchEventTypeToCallbackType_Pnpm_useAnimatedGestureTs2(eventType){const{TouchEventType,CALLBACK_TYPE}=this.__closure;switch(eventType){case TouchEventType.TOUCHES_DOWN:return CALLBACK_TYPE.TOUCHES_DOWN;case TouchEventType.TOUCHES_MOVE:return CALLBACK_TYPE.TOUCHES_MOVE;case TouchEventType.TOUCHES_UP:return CALLBACK_TYPE.TOUCHES_UP;case TouchEventType.TOUCHES_CANCELLED:return CALLBACK_TYPE.TOUCHES_CANCELLED;}return CALLBACK_TYPE.UNDEFINED;}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"touchEventTypeToCallbackType_Pnpm_useAnimatedGestureTs2\\\",\\\"eventType\\\",\\\"TouchEventType\\\",\\\"CALLBACK_TYPE\\\",\\\"__closure\\\",\\\"TOUCHES_DOWN\\\",\\\"TOUCHES_MOVE\\\",\\\"TOUCHES_UP\\\",\\\"TOUCHES_CANCELLED\\\",\\\"UNDEFINED\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\\\"],\\\"mappings\\\":\\\"AA6CA,SAAAA,uDAEiBA,CAAAC,SAAA,QAAAC,cAAA,CAAAC,aAAA,OAAAC,SAAA,CAEf,OAAQH,SAAS,EACf,IAAK,CAAAC,cAAc,CAACG,YAAY,CAC9B,MAAO,CAAAF,aAAa,CAACE,YAAY,CACnC,IAAK,CAAAH,cAAc,CAACI,YAAY,CAC9B,MAAO,CAAAH,aAAa,CAACG,YAAY,CACnC,IAAK,CAAAJ,cAAc,CAACK,UAAU,CAC5B,MAAO,CAAAJ,aAAa,CAACI,UAAU,CACjC,IAAK,CAAAL,cAAc,CAACM,iBAAiB,CACnC,MAAO,CAAAL,aAAa,CAACK,iBAAiB,CAC1C,CACA,MAAO,CAAAL,aAAa,CAACM,SAAS,CAChC\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst touchEventTypeToCallbackType = function () {\n  const _e = [new global.Error(), -3, -27];\n  const touchEventTypeToCallbackType = function (eventType: TouchEventType) {\n    switch (eventType) {\n      case TouchEventType.TOUCHES_DOWN:\n        return CALLBACK_TYPE.TOUCHES_DOWN;\n      case TouchEventType.TOUCHES_MOVE:\n        return CALLBACK_TYPE.TOUCHES_MOVE;\n      case TouchEventType.TOUCHES_UP:\n        return CALLBACK_TYPE.TOUCHES_UP;\n      case TouchEventType.TOUCHES_CANCELLED:\n        return CALLBACK_TYPE.TOUCHES_CANCELLED;\n    }\n    return CALLBACK_TYPE.UNDEFINED;\n  };\n  touchEventTypeToCallbackType.__closure = {\n    TouchEventType,\n    CALLBACK_TYPE\n  };\n  touchEventTypeToCallbackType.__workletHash = 6825086001765;\n  touchEventTypeToCallbackType.__initData = _worklet_6825086001765_init_data;\n  touchEventTypeToCallbackType.__stackDetails = _e;\n  return touchEventTypeToCallbackType;\n}();\nconst _worklet_6506685255530_init_data = {\n  code: \"function runWorklet_Pnpm_useAnimatedGestureTs3(type,gesture,event,...args){const{getHandler,tagMessage}=this.__closure;const handler=getHandler(type,gesture);if(gesture.isWorklet[type]){handler===null||handler===void 0||handler(event,...args);}else if(handler){console.warn(tagMessage('Animated gesture callback must be a worklet'));}}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"runWorklet_Pnpm_useAnimatedGestureTs3\\\",\\\"type\\\",\\\"gesture\\\",\\\"event\\\",\\\"args\\\",\\\"getHandler\\\",\\\"tagMessage\\\",\\\"__closure\\\",\\\"handler\\\",\\\"isWorklet\\\",\\\"console\\\",\\\"warn\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\\\"],\\\"mappings\\\":\\\"AA8DA,SAAAA,qCAIKA,CAAAC,IAAe,CAClBC,OAAA,CAAAC,KAAA,IAAAC,IAAA,QAAAC,UAAA,CAAAC,UAAA,OAAAC,SAAA,CAEA,KAAM,CAAAC,OAAO,CAAGH,UAAU,CAACJ,IAAI,CAAEC,OAAO,CAAC,CACzC,GAAIA,OAAO,CAACO,SAAS,CAACR,IAAI,CAAC,CAAE,CAG3BO,OAAO,SAAPA,OAAO,WAAPA,OAAO,CAAGL,KAAK,CAAE,GAAGC,IAAI,CAAC,CAC3B,CAAC,IAAM,IAAII,OAAO,CAAE,CAClBE,OAAO,CAACC,IAAI,CAACL,UAAU,CAAC,6CAA6C,CAAC,CAAC,CACzE,CACF\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst runWorklet = function () {\n  const _e = [new global.Error(), -3, -27];\n  const runWorklet = function (type: CALLBACK_TYPE, gesture: HandlerCallbacks<Record<string, unknown>>, event: GestureStateChangeEvent | GestureUpdateEvent | GestureTouchEvent, ...args: unknown[]) {\n    const handler = getHandler(type, gesture);\n    if (gesture.isWorklet[type]) {\n      // @ts-ignore Logic below makes sure the correct event is send to the\n      // correct handler.\n      handler?.(event, ...args);\n    } else if (handler) {\n      console.warn(tagMessage('Animated gesture callback must be a worklet'));\n    }\n  };\n  runWorklet.__closure = {\n    getHandler,\n    tagMessage\n  };\n  runWorklet.__workletHash = 6506685255530;\n  runWorklet.__initData = _worklet_6506685255530_init_data;\n  runWorklet.__stackDetails = _e;\n  return runWorklet;\n}();\nconst _worklet_8201524245094_init_data = {\n  code: \"function isStateChangeEvent_Pnpm_useAnimatedGestureTs4(event){return event.oldState!=null;}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"isStateChangeEvent_Pnpm_useAnimatedGestureTs4\\\",\\\"event\\\",\\\"oldState\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\\\"],\\\"mappings\\\":\\\"AA+EA,SAAAA,6CAEoCA,CAAAC,KAAA,EAGlC,MAAO,CAAAA,KAAK,CAACC,QAAQ,EAAI,IAAI,CAC/B\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst isStateChangeEvent = function () {\n  const _e = [new global.Error(), 1, -27];\n  const isStateChangeEvent = function (event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent) {\n    // @ts-ignore Yes, the oldState prop is missing on GestureTouchEvent, that's the point\n    return event.oldState != null;\n  };\n  isStateChangeEvent.__closure = {};\n  isStateChangeEvent.__workletHash = 8201524245094;\n  isStateChangeEvent.__initData = _worklet_8201524245094_init_data;\n  isStateChangeEvent.__stackDetails = _e;\n  return isStateChangeEvent;\n}();\nconst _worklet_6575076970903_init_data = {\n  code: \"function isTouchEvent_Pnpm_useAnimatedGestureTs5(event){return event.eventType!=null;}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"isTouchEvent_Pnpm_useAnimatedGestureTs5\\\",\\\"event\\\",\\\"eventType\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\\\"],\\\"mappings\\\":\\\"AAuFA,SAAAA,uCAE8BA,CAAAC,KAAA,EAE5B,MAAO,CAAAA,KAAK,CAACC,SAAS,EAAI,IAAI,CAChC\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst isTouchEvent = function () {\n  const _e = [new global.Error(), 1, -27];\n  const isTouchEvent = function (event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent) {\n    return event.eventType != null;\n  };\n  isTouchEvent.__closure = {};\n  isTouchEvent.__workletHash = 6575076970903;\n  isTouchEvent.__initData = _worklet_6575076970903_init_data;\n  isTouchEvent.__stackDetails = _e;\n  return isTouchEvent;\n}();\nconst _worklet_5273055625178_init_data = {\n  code: \"function pnpm_useAnimatedGestureTs6(event){const{sharedHandlersCallbacks,isStateChangeEvent,State,runWorklet,CALLBACK_TYPE,lastUpdateEvent,isTouchEvent,stateControllers,GestureStateManager,TouchEventType,touchEventTypeToCallbackType}=this.__closure;const currentCallback=sharedHandlersCallbacks.value;if(!currentCallback){return;}for(let i=0;i<currentCallback.length;i++){const gesture=currentCallback[i];if(event.handlerTag!==gesture.handlerTag){continue;}if(isStateChangeEvent(event)){if(event.oldState===State.UNDETERMINED&&event.state===State.BEGAN){runWorklet(CALLBACK_TYPE.BEGAN,gesture,event);}else if((event.oldState===State.BEGAN||event.oldState===State.UNDETERMINED)&&event.state===State.ACTIVE){runWorklet(CALLBACK_TYPE.START,gesture,event);lastUpdateEvent.value[gesture.handlerTag]=undefined;}else if(event.oldState!==event.state&&event.state===State.END){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,true);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,true);}else if((event.state===State.FAILED||event.state===State.CANCELLED)&&event.state!==event.oldState){if(event.oldState===State.ACTIVE){runWorklet(CALLBACK_TYPE.END,gesture,event,false);}runWorklet(CALLBACK_TYPE.FINALIZE,gesture,event,false);}}else if(isTouchEvent(event)){if(!stateControllers[i]){stateControllers[i]=GestureStateManager.create(event.handlerTag);}if(event.eventType!==TouchEventType.UNDETERMINED){runWorklet(touchEventTypeToCallbackType(event.eventType),gesture,event,stateControllers[i]);}}else{runWorklet(CALLBACK_TYPE.UPDATE,gesture,event);if(gesture.onChange&&gesture.changeEventCalculator){var _gesture$changeEventC;runWorklet(CALLBACK_TYPE.CHANGE,gesture,(_gesture$changeEventC=gesture.changeEventCalculator)===null||_gesture$changeEventC===void 0?void 0:_gesture$changeEventC.call(gesture,event,lastUpdateEvent.value[gesture.handlerTag]));lastUpdateEvent.value[gesture.handlerTag]=event;}}}}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"pnpm_useAnimatedGestureTs6\\\",\\\"event\\\",\\\"sharedHandlersCallbacks\\\",\\\"isStateChangeEvent\\\",\\\"State\\\",\\\"runWorklet\\\",\\\"CALLBACK_TYPE\\\",\\\"lastUpdateEvent\\\",\\\"isTouchEvent\\\",\\\"stateControllers\\\",\\\"GestureStateManager\\\",\\\"TouchEventType\\\",\\\"touchEventTypeToCallbackType\\\",\\\"__closure\\\",\\\"currentCallback\\\",\\\"value\\\",\\\"i\\\",\\\"length\\\",\\\"gesture\\\",\\\"handlerTag\\\",\\\"oldState\\\",\\\"UNDETERMINED\\\",\\\"state\\\",\\\"BEGAN\\\",\\\"ACTIVE\\\",\\\"START\\\",\\\"undefined\\\",\\\"END\\\",\\\"FINALIZE\\\",\\\"FAILED\\\",\\\"CANCELLED\\\",\\\"create\\\",\\\"eventType\\\",\\\"UPDATE\\\",\\\"onChange\\\",\\\"changeEventCalculator\\\",\\\"_gesture$changeEventC\\\",\\\"CHANGE\\\",\\\"call\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/GestureDetector/useAnimatedGesture.ts\\\"],\\\"mappings\\\":\\\"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\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nexport function useAnimatedGesture(preparedGesture: AttachedGestureState, needsRebuild: boolean) {\n  if (!Reanimated) {\n    return;\n  }\n\n  // Hooks are called conditionally, but the condition is whether the\n  // react-native-reanimated is installed, which shouldn't change while running\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const sharedHandlersCallbacks = Reanimated.useSharedValue<HandlerCallbacks<Record<string, unknown>>[] | null>(null);\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const lastUpdateEvent = Reanimated.useSharedValue<(GestureUpdateEvent | undefined)[]>([]);\n\n  // not every gesture needs a state controller, init them lazily\n  const stateControllers: GestureStateManagerType[] = [];\n  const callback = function () {\n    const _e = [new global.Error(), -12, -27];\n    const pnpm_useAnimatedGestureTs6 = function (event: GestureStateChangeEvent | GestureUpdateEvent | GestureTouchEvent) {\n      const currentCallback = sharedHandlersCallbacks.value;\n      if (!currentCallback) {\n        return;\n      }\n      for (let i = 0; i < currentCallback.length; i++) {\n        const gesture = currentCallback[i];\n        if (event.handlerTag !== gesture.handlerTag) {\n          continue;\n        }\n        if (isStateChangeEvent(event)) {\n          if (event.oldState === State.UNDETERMINED && event.state === State.BEGAN) {\n            runWorklet(CALLBACK_TYPE.BEGAN, gesture, event);\n          } else if ((event.oldState === State.BEGAN || event.oldState === State.UNDETERMINED) && event.state === State.ACTIVE) {\n            runWorklet(CALLBACK_TYPE.START, gesture, event);\n            lastUpdateEvent.value[gesture.handlerTag] = undefined;\n          } else if (event.oldState !== event.state && event.state === State.END) {\n            if (event.oldState === State.ACTIVE) {\n              runWorklet(CALLBACK_TYPE.END, gesture, event, true);\n            }\n            runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, true);\n          } else if ((event.state === State.FAILED || event.state === State.CANCELLED) && event.state !== event.oldState) {\n            if (event.oldState === State.ACTIVE) {\n              runWorklet(CALLBACK_TYPE.END, gesture, event, false);\n            }\n            runWorklet(CALLBACK_TYPE.FINALIZE, gesture, event, false);\n          }\n        } else if (isTouchEvent(event)) {\n          if (!stateControllers[i]) {\n            stateControllers[i] = GestureStateManager.create(event.handlerTag);\n          }\n          if (event.eventType !== TouchEventType.UNDETERMINED) {\n            runWorklet(touchEventTypeToCallbackType(event.eventType), gesture, event, stateControllers[i]);\n          }\n        } else {\n          runWorklet(CALLBACK_TYPE.UPDATE, gesture, event);\n          if (gesture.onChange && gesture.changeEventCalculator) {\n            runWorklet(CALLBACK_TYPE.CHANGE, gesture, gesture.changeEventCalculator?.(event, lastUpdateEvent.value[gesture.handlerTag]));\n            lastUpdateEvent.value[gesture.handlerTag] = event;\n          }\n        }\n      }\n    };\n    pnpm_useAnimatedGestureTs6.__closure = {\n      sharedHandlersCallbacks,\n      isStateChangeEvent,\n      State,\n      runWorklet,\n      CALLBACK_TYPE,\n      lastUpdateEvent,\n      isTouchEvent,\n      stateControllers,\n      GestureStateManager,\n      TouchEventType,\n      touchEventTypeToCallbackType\n    };\n    pnpm_useAnimatedGestureTs6.__workletHash = 5273055625178;\n    pnpm_useAnimatedGestureTs6.__initData = _worklet_5273055625178_init_data;\n    pnpm_useAnimatedGestureTs6.__stackDetails = _e;\n    return pnpm_useAnimatedGestureTs6;\n  }();\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const event = Reanimated.useEvent(callback, ['onGestureHandlerStateChange', 'onGestureHandlerEvent'], needsRebuild);\n  preparedGesture.animatedEventHandler = event;\n  preparedGesture.animatedHandlers = sharedHandlersCallbacks;\n}","import React, { useCallback } from 'react';\nimport { GestureType } from '../gesture';\nimport { ComposedGesture } from '../gestureComposition';\n\nimport {\n  AttachedGestureState,\n  GestureDetectorState,\n  WebEventHandler,\n} from './types';\nimport { attachHandlers } from './attachHandlers';\nimport { updateHandlers } from './updateHandlers';\nimport { needsToReattach } from './needsToReattach';\nimport { dropHandlers } from './dropHandlers';\nimport { useForceRender, validateDetectorChildren } from './utils';\nimport findNodeHandle from '../../../findNodeHandle';\n\n// Returns a function that's responsible for updating the attached gestures\n// If the view has changed, it will reattach the handlers to the new view\n// If the view remains the same, it will update the handlers with the new config\nexport function useDetectorUpdater(\n  state: GestureDetectorState,\n  preparedGesture: AttachedGestureState,\n  gesturesToAttach: GestureType[],\n  gestureConfig: ComposedGesture | GestureType,\n  webEventHandlersRef: React.RefObject<WebEventHandler>\n) {\n  const forceRender = useForceRender();\n  const updateAttachedGestures = useCallback(\n    // skipConfigUpdate is used to prevent unnecessary updates when only checking if the view has changed\n    (skipConfigUpdate?: boolean) => {\n      // If the underlying view has changed we need to reattach handlers to the new view\n      const viewTag = findNodeHandle(state.viewRef) as number;\n      const didUnderlyingViewChange = viewTag !== state.previousViewTag;\n\n      if (\n        didUnderlyingViewChange ||\n        needsToReattach(preparedGesture, gesturesToAttach)\n      ) {\n        validateDetectorChildren(state.viewRef);\n        dropHandlers(preparedGesture);\n        attachHandlers({\n          preparedGesture,\n          gestureConfig,\n          gesturesToAttach,\n          webEventHandlersRef,\n          viewTag,\n        });\n\n        if (didUnderlyingViewChange) {\n          state.previousViewTag = viewTag;\n          state.forceRebuildReanimatedEvent = true;\n          forceRender();\n        }\n      } else if (!skipConfigUpdate) {\n        updateHandlers(preparedGesture, gestureConfig, gesturesToAttach);\n      }\n    },\n    [\n      forceRender,\n      gestureConfig,\n      gesturesToAttach,\n      preparedGesture,\n      state,\n      webEventHandlersRef,\n    ]\n  );\n\n  return updateAttachedGestures;\n}\n","import { transformIntoHandlerTags } from '../../utils';\nimport { MountRegistry } from '../../../mountRegistry';\nimport { AttachedGestureState } from './types';\nimport { useEffect } from 'react';\nimport { GestureRef } from '../gesture';\n\nfunction shouldUpdateDetector(\n  relation: GestureRef[] | undefined,\n  gesture: { handlerTag: number }\n) {\n  if (relation === undefined) {\n    return false;\n  }\n\n  for (const tag of transformIntoHandlerTags(relation)) {\n    if (tag === gesture.handlerTag) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nexport function useMountReactions(\n  updateDetector: () => void,\n  state: AttachedGestureState\n) {\n  useEffect(() => {\n    return MountRegistry.addMountListener((gesture) => {\n      // At this point the ref in the gesture config should be updated, so we can check if one of the gestures\n      // set in a relation with the gesture got mounted. If so, we need to update the detector to propagate\n      // the changes to the native side.\n      for (const attachedGesture of state.attachedGestures) {\n        const blocksHandlers = attachedGesture.config.blocksHandlers;\n        const requireToFail = attachedGesture.config.requireToFail;\n        const simultaneousWith = attachedGesture.config.simultaneousWith;\n\n        if (\n          shouldUpdateDetector(blocksHandlers, gesture) ||\n          shouldUpdateDetector(requireToFail, gesture) ||\n          shouldUpdateDetector(simultaneousWith, gesture)\n        ) {\n          updateDetector();\n\n          // We can safely return here, if any other gestures should be updated, they will be by the above call\n          return;\n        }\n      }\n    });\n  }, [updateDetector, state]);\n}\n","import { isFabric, tagMessage } from '../../../utils';\nimport { getShadowNodeFromRef } from '../../../getShadowNodeFromRef';\n\nimport { GestureDetectorState } from './types';\nimport React, { useCallback } from 'react';\nimport findNodeHandle from '../../../findNodeHandle';\n\ndeclare const global: {\n  isViewFlatteningDisabled: (node: unknown) => boolean | null; // JSI function\n};\n\n// Ref handler for the Wrap component attached under the GestureDetector.\n// It's responsible for setting the viewRef on the state and triggering the reattaching of handlers\n// if the view has changed.\nexport function useViewRefHandler(\n  state: GestureDetectorState,\n  updateAttachedGestures: (skipConfigUpdate?: boolean) => void\n) {\n  const refHandler = useCallback(\n    (ref: React.Component | null) => {\n      if (ref === null) {\n        return;\n      }\n\n      state.viewRef = ref;\n\n      // if it's the first render, also set the previousViewTag to prevent reattaching gestures when not needed\n      if (state.previousViewTag === -1) {\n        state.previousViewTag = findNodeHandle(state.viewRef) as number;\n      }\n\n      // Pass true as `skipConfigUpdate`. Here we only want to trigger the eventual reattaching of handlers\n      // in case the view has changed. If the view doesn't change, the update will be handled by detector.\n      if (!state.firstRender) {\n        updateAttachedGestures(true);\n      }\n\n      if (__DEV__ && isFabric() && global.isViewFlatteningDisabled) {\n        const node = getShadowNodeFromRef(ref);\n        if (global.isViewFlatteningDisabled(node) === false) {\n          console.error(\n            tagMessage(\n              'GestureDetector has received a child that may get view-flattened. ' +\n                '\\nTo prevent it from misbehaving you need to wrap the child with a `<View collapsable={false}>`.'\n            )\n          );\n        }\n      }\n    },\n    [state, updateAttachedGestures]\n  );\n\n  return refHandler;\n}\n","import { Platform } from 'react-native';\nimport { isTestEnv, tagMessage } from '../../../utils';\nimport { GestureRef, BaseGesture, GestureType } from '../gesture';\nimport { flingGestureHandlerProps } from '../../FlingGestureHandler';\nimport { forceTouchGestureHandlerProps } from '../../ForceTouchGestureHandler';\nimport { longPressGestureHandlerProps } from '../../LongPressGestureHandler';\nimport { panGestureHandlerProps, panGestureHandlerCustomNativeProps } from '../../PanGestureHandler';\nimport { tapGestureHandlerProps } from '../../TapGestureHandler';\nimport { hoverGestureHandlerProps } from '../hoverGesture';\nimport { nativeViewGestureHandlerProps } from '../../NativeViewGestureHandler';\nimport { HandlerStateChangeEvent, baseGestureHandlerWithDetectorProps } from '../../gestureHandlerCommon';\nimport { isNewWebImplementationEnabled } from '../../../EnableNewWebImplementation';\nimport { RNRenderer } from '../../../RNRenderer';\nimport { useCallback, useRef, useState } from 'react';\nimport { Reanimated } from '../reanimatedWrapper';\nimport { onGestureHandlerEvent } from '../eventReceiver';\nimport { WebEventHandler } from './types';\nexport const ALLOWED_PROPS = [...baseGestureHandlerWithDetectorProps, ...tapGestureHandlerProps, ...panGestureHandlerProps, ...panGestureHandlerCustomNativeProps, ...longPressGestureHandlerProps, ...forceTouchGestureHandlerProps, ...flingGestureHandlerProps, ...hoverGestureHandlerProps, ...nativeViewGestureHandlerProps];\nfunction convertToHandlerTag(ref: GestureRef): number {\n  if (typeof ref === 'number') {\n    return ref;\n  } else if (ref instanceof BaseGesture) {\n    return ref.handlerTag;\n  } else {\n    // @ts-ignore in this case it should be a ref either to gesture object or\n    // a gesture handler component, in both cases handlerTag property exists\n    return ref.current?.handlerTag ?? -1;\n  }\n}\nfunction extractValidHandlerTags(interactionGroup: GestureRef[] | undefined) {\n  return interactionGroup?.map(convertToHandlerTag)?.filter(tag => tag > 0) ?? [];\n}\nexport function extractGestureRelations(gesture: GestureType) {\n  const requireToFail = extractValidHandlerTags(gesture.config.requireToFail);\n  const simultaneousWith = extractValidHandlerTags(gesture.config.simultaneousWith);\n  const blocksHandlers = extractValidHandlerTags(gesture.config.blocksHandlers);\n  return {\n    waitFor: requireToFail,\n    simultaneousHandlers: simultaneousWith,\n    blocksHandlers: blocksHandlers\n  };\n}\nexport function checkGestureCallbacksForWorklets(gesture: GestureType) {\n  if (!__DEV__) {\n    return;\n  }\n  // If a gesture is explicitly marked to run on the JS thread there is no need to check\n  // if callbacks are worklets as the user is aware they will be ran on the JS thread\n  if (gesture.config.runOnJS) {\n    return;\n  }\n  const areSomeNotWorklets = gesture.handlers.isWorklet.includes(false);\n  const areSomeWorklets = gesture.handlers.isWorklet.includes(true);\n\n  // If some of the callbacks are worklets and some are not, and the gesture is not\n  // explicitly marked with `.runOnJS(true)` show an error\n  if (areSomeNotWorklets && areSomeWorklets) {\n    console.error(tagMessage(`Some of the callbacks in the gesture are worklets and some are not. Either make sure that all calbacks are marked as 'worklet' if you wish to run them on the UI thread or use '.runOnJS(true)' modifier on the gesture explicitly to run all callbacks on the JS thread.`));\n  }\n  if (Reanimated === undefined) {\n    // If Reanimated is not available, we can't run worklets, so we shouldn't show the warning\n    return;\n  }\n  const areAllNotWorklets = !areSomeWorklets && areSomeNotWorklets;\n  // If none of the callbacks are worklets and the gesture is not explicitly marked with\n  // `.runOnJS(true)` show a warning\n  if (areAllNotWorklets && !isTestEnv()) {\n    console.warn(tagMessage(`None of the callbacks in the gesture are worklets. If you wish to run them on the JS thread use '.runOnJS(true)' modifier on the gesture to make this explicit. Otherwise, mark the callbacks as 'worklet' to run them on the UI thread.`));\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function validateDetectorChildren(ref: any) {\n  // Finds the first native view under the Wrap component and traverses the fiber tree upwards\n  // to check whether there is more than one native view as a pseudo-direct child of GestureDetector\n  // i.e. this is not ok:\n  //            Wrap\n  //             |\n  //            / \\\n  //           /   \\\n  //          /     \\\n  //         /       \\\n  //   NativeView  NativeView\n  //\n  // but this is fine:\n  //            Wrap\n  //             |\n  //         NativeView\n  //             |\n  //            / \\\n  //           /   \\\n  //          /     \\\n  //         /       \\\n  //   NativeView  NativeView\n  if (__DEV__ && Platform.OS !== 'web') {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const wrapType =\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    ref._reactInternals.elementType;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    let instance = RNRenderer.findHostInstance_DEPRECATED(ref)._internalFiberInstanceHandleDEV;\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    while (instance && instance.elementType !== wrapType) {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n      if (instance.sibling) {\n        throw new Error('GestureDetector has more than one native view as its children. This can happen if you are using a custom component that renders multiple views, like React.Fragment. You should wrap content of GestureDetector with a <View> or <Animated.View>.');\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n      instance = instance.return;\n    }\n  }\n}\nexport function useForceRender() {\n  const [renderState, setRenderState] = useState(false);\n  const forceRender = useCallback(() => {\n    setRenderState(!renderState);\n  }, [renderState, setRenderState]);\n  return forceRender;\n}\nexport function useWebEventHandlers() {\n  return useRef<WebEventHandler>({\n    onGestureHandlerEvent: (e: HandlerStateChangeEvent<unknown>) => {\n      onGestureHandlerEvent(e.nativeEvent);\n    },\n    onGestureHandlerStateChange: isNewWebImplementationEnabled() ? (e: HandlerStateChangeEvent<unknown>) => {\n      onGestureHandlerEvent(e.nativeEvent);\n    } : undefined\n  });\n}","import { DeviceEventEmitter, EmitterSubscription } from 'react-native';\nimport { State } from '../../State';\nimport { TouchEventType } from '../../TouchEventType';\nimport {\n  GestureTouchEvent,\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from '../gestureHandlerCommon';\nimport { findHandler, findOldGestureHandler } from '../handlersRegistry';\nimport { BaseGesture } from './gesture';\nimport {\n  GestureStateManager,\n  GestureStateManagerType,\n} from './gestureStateManager';\n\nlet gestureHandlerEventSubscription: EmitterSubscription | null = null;\nlet gestureHandlerStateChangeEventSubscription: EmitterSubscription | null =\n  null;\n\nconst gestureStateManagers: Map<number, GestureStateManagerType> = new Map<\n  number,\n  GestureStateManagerType\n>();\n\nconst lastUpdateEvent: (GestureUpdateEvent | undefined)[] = [];\n\nfunction isStateChangeEvent(\n  event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n): event is GestureStateChangeEvent {\n  // @ts-ignore oldState doesn't exist on GestureTouchEvent and that's the point\n  return event.oldState != null;\n}\n\nfunction isTouchEvent(\n  event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n): event is GestureTouchEvent {\n  return event.eventType != null;\n}\n\nexport function onGestureHandlerEvent(\n  event: GestureUpdateEvent | GestureStateChangeEvent | GestureTouchEvent\n) {\n  const handler = findHandler(event.handlerTag) as BaseGesture<\n    Record<string, unknown>\n  >;\n\n  if (handler) {\n    if (isStateChangeEvent(event)) {\n      if (\n        event.oldState === State.UNDETERMINED &&\n        event.state === State.BEGAN\n      ) {\n        handler.handlers.onBegin?.(event);\n      } else if (\n        (event.oldState === State.BEGAN ||\n          event.oldState === State.UNDETERMINED) &&\n        event.state === State.ACTIVE\n      ) {\n        handler.handlers.onStart?.(event);\n        lastUpdateEvent[handler.handlers.handlerTag] = event;\n      } else if (event.oldState !== event.state && event.state === State.END) {\n        if (event.oldState === State.ACTIVE) {\n          handler.handlers.onEnd?.(event, true);\n        }\n        handler.handlers.onFinalize?.(event, true);\n        lastUpdateEvent[handler.handlers.handlerTag] = undefined;\n      } else if (\n        (event.state === State.FAILED || event.state === State.CANCELLED) &&\n        event.oldState !== event.state\n      ) {\n        if (event.oldState === State.ACTIVE) {\n          handler.handlers.onEnd?.(event, false);\n        }\n        handler.handlers.onFinalize?.(event, false);\n        gestureStateManagers.delete(event.handlerTag);\n        lastUpdateEvent[handler.handlers.handlerTag] = undefined;\n      }\n    } else if (isTouchEvent(event)) {\n      if (!gestureStateManagers.has(event.handlerTag)) {\n        gestureStateManagers.set(\n          event.handlerTag,\n          GestureStateManager.create(event.handlerTag)\n        );\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const manager = gestureStateManagers.get(event.handlerTag)!;\n\n      switch (event.eventType) {\n        case TouchEventType.TOUCHES_DOWN:\n          handler.handlers?.onTouchesDown?.(event, manager);\n          break;\n        case TouchEventType.TOUCHES_MOVE:\n          handler.handlers?.onTouchesMove?.(event, manager);\n          break;\n        case TouchEventType.TOUCHES_UP:\n          handler.handlers?.onTouchesUp?.(event, manager);\n          break;\n        case TouchEventType.TOUCHES_CANCELLED:\n          handler.handlers?.onTouchesCancelled?.(event, manager);\n          break;\n      }\n    } else {\n      handler.handlers.onUpdate?.(event);\n\n      if (handler.handlers.onChange && handler.handlers.changeEventCalculator) {\n        handler.handlers.onChange?.(\n          handler.handlers.changeEventCalculator?.(\n            event,\n            lastUpdateEvent[handler.handlers.handlerTag]\n          )\n        );\n\n        lastUpdateEvent[handler.handlers.handlerTag] = event;\n      }\n    }\n  } else {\n    const oldHandler = findOldGestureHandler(event.handlerTag);\n    if (oldHandler) {\n      const nativeEvent = { nativeEvent: event };\n      if (isStateChangeEvent(event)) {\n        oldHandler.onGestureStateChange(nativeEvent);\n      } else {\n        oldHandler.onGestureEvent(nativeEvent);\n      }\n      return;\n    }\n  }\n}\n\nexport function startListening() {\n  stopListening();\n\n  gestureHandlerEventSubscription = DeviceEventEmitter.addListener(\n    'onGestureHandlerEvent',\n    onGestureHandlerEvent\n  );\n\n  gestureHandlerStateChangeEventSubscription = DeviceEventEmitter.addListener(\n    'onGestureHandlerStateChange',\n    onGestureHandlerEvent\n  );\n}\n\nexport function stopListening() {\n  if (gestureHandlerEventSubscription) {\n    gestureHandlerEventSubscription.remove();\n    gestureHandlerEventSubscription = null;\n  }\n\n  if (gestureHandlerStateChangeEventSubscription) {\n    gestureHandlerStateChangeEventSubscription.remove();\n    gestureHandlerStateChangeEventSubscription = null;\n  }\n}\n","import { BaseGesture, BaseGestureConfig } from './gesture';\nimport { FlingGestureConfig } from '../FlingGestureHandler';\nimport type { FlingGestureHandlerEventPayload } from '../GestureHandlerEventPayload';\n\nexport class FlingGesture extends BaseGesture<FlingGestureHandlerEventPayload> {\n  public config: BaseGestureConfig & FlingGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'FlingGestureHandler';\n  }\n\n  /**\n   * Determine exact number of points required to handle the fling gesture.\n   * @param pointers\n   */\n  numberOfPointers(pointers: number) {\n    this.config.numberOfPointers = pointers;\n    return this;\n  }\n\n  /**\n   * Expressed allowed direction of movement.\n   * Expected values are exported as constants in the Directions object.\n   * Arguments can be combined using `|` operator. Default value is set to `MouseButton.LEFT`.\n   * @param direction\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/fling-gesture/#directionvalue-directions\n   */\n  direction(direction: number) {\n    this.config.direction = direction;\n    return this;\n  }\n}\n\nexport type FlingGestureType = InstanceType<typeof FlingGesture>;\n","import { BaseGestureConfig, ContinousBaseGesture } from './gesture';\nimport { ForceTouchGestureConfig } from '../ForceTouchGestureHandler';\nimport type { ForceTouchGestureHandlerEventPayload } from '../GestureHandlerEventPayload';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\nexport type ForceTouchGestureChangeEventPayload = {\n  forceChange: number;\n};\nconst _worklet_11365193947542_init_data = {\n  code: \"function changeEventCalculator_Pnpm_forceTouchGestureTs1(current,previous){let changePayload;if(previous===undefined){changePayload={forceChange:current.force};}else{changePayload={forceChange:current.force-previous.force};}return{...current,...changePayload};}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/forceTouchGesture.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator_Pnpm_forceTouchGestureTs1\\\",\\\"current\\\",\\\"previous\\\",\\\"changePayload\\\",\\\"undefined\\\",\\\"forceChange\\\",\\\"force\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/forceTouchGesture.ts\\\"],\\\"mappings\\\":\\\"AASA,SAAAA,+CAGEA,CAAAC,OAAA,CAAAC,QAAA,EAEA,GAAI,CAAAC,aAAkD,CACtD,GAAID,QAAQ,GAAKE,SAAS,CAAE,CAC1BD,aAAa,CAAG,CACdE,WAAW,CAAEJ,OAAO,CAACK,KACvB,CAAC,CACH,CAAC,IAAM,CACLH,aAAa,CAAG,CACdE,WAAW,CAAEJ,OAAO,CAACK,KAAK,CAAGJ,QAAQ,CAACI,KACxC,CAAC,CACH,CAEA,MAAO,CAAE,GAAGL,OAAO,CAAE,GAAGE,aAAc,CAAC,CACzC\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst changeEventCalculator = function () {\n  const _e = [new global.Error(), 1, -27];\n  const changeEventCalculator = function (current: GestureUpdateEvent<ForceTouchGestureHandlerEventPayload>, previous?: GestureUpdateEvent<ForceTouchGestureHandlerEventPayload>) {\n    let changePayload: ForceTouchGestureChangeEventPayload;\n    if (previous === undefined) {\n      changePayload = {\n        forceChange: current.force\n      };\n    } else {\n      changePayload = {\n        forceChange: current.force - previous.force\n      };\n    }\n    return {\n      ...current,\n      ...changePayload\n    };\n  };\n  changeEventCalculator.__closure = {};\n  changeEventCalculator.__workletHash = 11365193947542;\n  changeEventCalculator.__initData = _worklet_11365193947542_init_data;\n  changeEventCalculator.__stackDetails = _e;\n  return changeEventCalculator;\n}();\nexport class ForceTouchGesture extends ContinousBaseGesture<ForceTouchGestureHandlerEventPayload, ForceTouchGestureChangeEventPayload> {\n  public config: BaseGestureConfig & ForceTouchGestureConfig = {};\n  constructor() {\n    super();\n    this.handlerName = 'ForceTouchGestureHandler';\n  }\n\n  /**\n   * A minimal pressure that is required before gesture can activate.\n   * Should be a value from range [0.0, 1.0]. Default is 0.2.\n   * @param force\n   */\n  minForce(force: number) {\n    this.config.minForce = force;\n    return this;\n  }\n\n  /**\n   * A maximal pressure that could be applied for gesture.\n   * If the pressure is greater, gesture fails. Should be a value from range [0.0, 1.0].\n   * @param force\n   */\n  maxForce(force: number) {\n    this.config.maxForce = force;\n    return this;\n  }\n\n  /**\n   * Value defining if haptic feedback has to be performed on activation.\n   * @param value\n   */\n  feedbackOnActivation(value: boolean) {\n    this.config.feedbackOnActivation = value;\n    return this;\n  }\n  onChange(callback: (event: GestureUpdateEvent<GestureUpdateEvent<ForceTouchGestureHandlerEventPayload & ForceTouchGestureChangeEventPayload>>) => void) {\n    // @ts-ignore TS being overprotective, ForceTouchGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\nexport type ForceTouchGestureType = InstanceType<typeof ForceTouchGesture>;","import { HitSlop, CommonGestureConfig, GestureTouchEvent, GestureStateChangeEvent, GestureUpdateEvent, ActiveCursor, MouseButton } from '../gestureHandlerCommon';\nimport { getNextHandlerTag } from '../getNextHandlerTag';\nimport { GestureStateManagerType } from './gestureStateManager';\nimport type { FlingGestureHandlerEventPayload, ForceTouchGestureHandlerEventPayload, LongPressGestureHandlerEventPayload, PanGestureHandlerEventPayload, PinchGestureHandlerEventPayload, RotationGestureHandlerEventPayload, TapGestureHandlerEventPayload, NativeViewGestureHandlerPayload, HoverGestureHandlerEventPayload } from '../GestureHandlerEventPayload';\nimport { isRemoteDebuggingEnabled } from '../../utils';\nexport type GestureType = BaseGesture<Record<string, unknown>> | BaseGesture<Record<string, never>> | BaseGesture<TapGestureHandlerEventPayload> | BaseGesture<PanGestureHandlerEventPayload> | BaseGesture<LongPressGestureHandlerEventPayload> | BaseGesture<RotationGestureHandlerEventPayload> | BaseGesture<PinchGestureHandlerEventPayload> | BaseGesture<FlingGestureHandlerEventPayload> | BaseGesture<ForceTouchGestureHandlerEventPayload> | BaseGesture<NativeViewGestureHandlerPayload> | BaseGesture<HoverGestureHandlerEventPayload>;\nexport type GestureRef = number | GestureType | React.RefObject<GestureType | undefined> | React.RefObject<React.ComponentType | undefined>; // Allow adding a ref to a gesture handler\nexport interface BaseGestureConfig extends CommonGestureConfig, Record<string, unknown> {\n  ref?: React.MutableRefObject<GestureType | undefined>;\n  requireToFail?: GestureRef[];\n  simultaneousWith?: GestureRef[];\n  blocksHandlers?: GestureRef[];\n  needsPointerData?: boolean;\n  manualActivation?: boolean;\n  runOnJS?: boolean;\n  testId?: string;\n  cancelsTouchesInView?: boolean;\n}\ntype TouchEventHandlerType = (event: GestureTouchEvent, stateManager: GestureStateManagerType) => void;\nexport type HandlerCallbacks<EventPayloadT extends Record<string, unknown>> = {\n  gestureId: number;\n  handlerTag: number;\n  onBegin?: (event: GestureStateChangeEvent<EventPayloadT>) => void;\n  onStart?: (event: GestureStateChangeEvent<EventPayloadT>) => void;\n  onEnd?: (event: GestureStateChangeEvent<EventPayloadT>, success: boolean) => void;\n  onFinalize?: (event: GestureStateChangeEvent<EventPayloadT>, success: boolean) => void;\n  onUpdate?: (event: GestureUpdateEvent<EventPayloadT>) => void;\n  onChange?: (event: any) => void;\n  onTouchesDown?: TouchEventHandlerType;\n  onTouchesMove?: TouchEventHandlerType;\n  onTouchesUp?: TouchEventHandlerType;\n  onTouchesCancelled?: TouchEventHandlerType;\n  changeEventCalculator?: (current: GestureUpdateEvent<Record<string, unknown>>, previous?: GestureUpdateEvent<Record<string, unknown>>) => GestureUpdateEvent<Record<string, unknown>>;\n  isWorklet: boolean[];\n};\nexport const CALLBACK_TYPE = {\n  UNDEFINED: 0,\n  BEGAN: 1,\n  START: 2,\n  UPDATE: 3,\n  CHANGE: 4,\n  END: 5,\n  FINALIZE: 6,\n  TOUCHES_DOWN: 7,\n  TOUCHES_MOVE: 8,\n  TOUCHES_UP: 9,\n  TOUCHES_CANCELLED: 10\n} as const;\n\n// Allow using CALLBACK_TYPE as object and type\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type CALLBACK_TYPE = (typeof CALLBACK_TYPE)[keyof typeof CALLBACK_TYPE];\nexport abstract class Gesture {\n  /**\n   * Return array of gestures, providing the same interface for creating and updating\n   * handlers, no matter which object was used to create gesture instance.\n   */\n  abstract toGestureArray(): GestureType[];\n\n  /**\n   * Assign handlerTag to the gesture instance and set ref.current (if a ref is set)\n   */\n  abstract initialize(): void;\n\n  /**\n   * Make sure that values of properties defining relations are arrays. Do any necessary\n   * preprocessing required to configure relations between handlers. Called just before\n   * updating the handler on the native side.\n   */\n  abstract prepare(): void;\n}\nlet nextGestureId = 0;\nexport abstract class BaseGesture<EventPayloadT extends Record<string, unknown>> extends Gesture {\n  private gestureId = -1;\n  public handlerTag = -1;\n  public handlerName = '';\n  public config: BaseGestureConfig = {};\n  public handlers: HandlerCallbacks<EventPayloadT> = {\n    gestureId: -1,\n    handlerTag: -1,\n    isWorklet: []\n  };\n  constructor() {\n    super();\n\n    // Used to check whether the gesture config has been updated when wrapping it\n    // with `useMemo`. Since every config will have a unique id, when the dependencies\n    // don't change, the config won't be recreated and the id will stay the same.\n    // If the id is different, it means that the config has changed and the gesture\n    // needs to be updated.\n    this.gestureId = nextGestureId++;\n    this.handlers.gestureId = this.gestureId;\n  }\n  private addDependency(key: 'simultaneousWith' | 'requireToFail' | 'blocksHandlers', gesture: Exclude<GestureRef, number>) {\n    const value = this.config[key];\n    this.config[key] = value ? Array<GestureRef>().concat(value, gesture) : [gesture];\n  }\n\n  /**\n   * Sets a `ref` to the gesture object, allowing for interoperability with the old API.\n   * @param ref\n   */\n  withRef(ref: React.MutableRefObject<GestureType | undefined>) {\n    this.config.ref = ref;\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  protected isWorklet(callback: Function) {\n    // @ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    return callback.__workletHash !== undefined;\n  }\n\n  /**\n   * Set the callback that is being called when given gesture handler starts receiving touches.\n   * At the moment of this callback the handler is in `BEGAN` state and we don't know yet if it will recognize the gesture at all.\n   * @param callback\n   */\n  onBegin(callback: (event: GestureStateChangeEvent<EventPayloadT>) => void) {\n    this.handlers.onBegin = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.BEGAN] = this.isWorklet(callback);\n    return this;\n  }\n\n  /**\n   * Set the callback that is being called when the gesture is recognized by the handler and it transitions to the `ACTIVE` state.\n   * @param callback\n   */\n  onStart(callback: (event: GestureStateChangeEvent<EventPayloadT>) => void) {\n    this.handlers.onStart = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.START] = this.isWorklet(callback);\n    return this;\n  }\n\n  /**\n   * Set the callback that is being called when the gesture that was recognized by the handler finishes and handler reaches `END` state.\n   * It will be called only if the handler was previously in the `ACTIVE` state.\n   * @param callback\n   */\n  onEnd(callback: (event: GestureStateChangeEvent<EventPayloadT>, success: boolean) => void) {\n    this.handlers.onEnd = callback;\n    // @ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    this.handlers.isWorklet[CALLBACK_TYPE.END] = this.isWorklet(callback);\n    return this;\n  }\n\n  /**\n   * Set the callback that is being called when the handler finalizes handling gesture - the gesture was recognized and has finished or it failed to recognize.\n   * @param callback\n   */\n  onFinalize(callback: (event: GestureStateChangeEvent<EventPayloadT>, success: boolean) => void) {\n    this.handlers.onFinalize = callback;\n    // @ts-ignore if callback is a worklet, the property will be available, if not then the check will return false\n    this.handlers.isWorklet[CALLBACK_TYPE.FINALIZE] = this.isWorklet(callback);\n    return this;\n  }\n\n  /**\n   * Set the `onTouchesDown` callback which is called every time a pointer is placed on the screen.\n   * @param callback\n   */\n  onTouchesDown(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesDown = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_DOWN] = this.isWorklet(callback);\n    return this;\n  }\n\n  /**\n   * Set the `onTouchesMove` callback which is called every time a pointer is moved on the screen.\n   * @param callback\n   */\n  onTouchesMove(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesMove = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_MOVE] = this.isWorklet(callback);\n    return this;\n  }\n\n  /**\n   * Set the `onTouchesUp` callback which is called every time a pointer is lifted from the screen.\n   * @param callback\n   */\n  onTouchesUp(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesUp = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_UP] = this.isWorklet(callback);\n    return this;\n  }\n\n  /**\n   * Set the `onTouchesCancelled` callback which is called every time a pointer stops being tracked, for example when the gesture finishes.\n   * @param callback\n   */\n  onTouchesCancelled(callback: TouchEventHandlerType) {\n    this.config.needsPointerData = true;\n    this.handlers.onTouchesCancelled = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.TOUCHES_CANCELLED] = this.isWorklet(callback);\n    return this;\n  }\n\n  /**\n   * Indicates whether the given handler should be analyzing stream of touch events or not.\n   * @param enabled\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#enabledvalue-boolean\n   */\n  enabled(enabled: boolean) {\n    this.config.enabled = enabled;\n    return this;\n  }\n\n  /**\n   * When true the handler will cancel or fail recognition (depending on its current state) whenever the finger leaves the area of the connected view.\n   * @param value\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#shouldcancelwhenoutsidevalue-boolean\n   */\n  shouldCancelWhenOutside(value: boolean) {\n    this.config.shouldCancelWhenOutside = value;\n    return this;\n  }\n\n  /**\n   * This parameter enables control over what part of the connected view area can be used to begin recognizing the gesture.\n   * When a negative number is provided the bounds of the view will reduce the area by the given number of points in each of the sides evenly.\n   * @param hitSlop\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#hitslopsettings\n   */\n  hitSlop(hitSlop: HitSlop) {\n    this.config.hitSlop = hitSlop;\n    return this;\n  }\n\n  /**\n   * #### Web only\n   * This parameter allows to specify which `cursor` should be used when gesture activates.\n   * Supports all CSS cursor values (e.g. `\"grab\"`, `\"zoom-in\"`). Default value is set to `\"auto\"`.\n   * @param activeCursor\n   */\n  activeCursor(activeCursor: ActiveCursor) {\n    this.config.activeCursor = activeCursor;\n    return this;\n  }\n\n  /**\n   * #### Web & Android only\n   * Allows users to choose which mouse button should handler respond to.\n   * Arguments can be combined using `|` operator, e.g. `mouseButton(MouseButton.LEFT | MouseButton.RIGHT)`.\n   * Default value is set to `MouseButton.LEFT`.\n   * @param mouseButton\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#mousebuttonvalue-mousebutton-web--android-only\n   */\n  mouseButton(mouseButton: MouseButton) {\n    this.config.mouseButton = mouseButton;\n    return this;\n  }\n\n  /**\n   * When `react-native-reanimated` is installed, the callbacks passed to the gestures are automatically workletized and run on the UI thread when called.\n   * This option allows for changing this behavior: when `true`, all the callbacks will be run on the JS thread instead of the UI thread, regardless of whether they are worklets or not.\n   * Defaults to `false`.\n   * @param runOnJS\n   */\n  runOnJS(runOnJS: boolean) {\n    this.config.runOnJS = runOnJS;\n    return this;\n  }\n\n  /**\n   * Allows gestures across different components to be recognized simultaneously.\n   * @param gestures\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#simultaneouswithexternalgesture\n   */\n  simultaneousWithExternalGesture(...gestures: Exclude<GestureRef, number>[]) {\n    for (const gesture of gestures) {\n      this.addDependency('simultaneousWith', gesture);\n    }\n    return this;\n  }\n\n  /**\n   * Allows to delay activation of the handler until all handlers passed as arguments to this method fail (or don't begin at all).\n   * @param gestures\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#requireexternalgesturetofail\n   */\n  requireExternalGestureToFail(...gestures: Exclude<GestureRef, number>[]) {\n    for (const gesture of gestures) {\n      this.addDependency('requireToFail', gesture);\n    }\n    return this;\n  }\n\n  /**\n   * Works similarily to `requireExternalGestureToFail` but the direction of the relation is reversed - instead of being one-to-many relation, it's many-to-one.\n   * @param gestures\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#blocksexternalgesture\n   */\n  blocksExternalGesture(...gestures: Exclude<GestureRef, number>[]) {\n    for (const gesture of gestures) {\n      this.addDependency('blocksHandlers', gesture);\n    }\n    return this;\n  }\n\n  /**\n   * Sets a `testID` property for gesture object, allowing for querying for it in tests.\n   * @param id\n   */\n  withTestId(id: string) {\n    this.config.testId = id;\n    return this;\n  }\n\n  /**\n   * #### iOS only\n   * When `true`, the handler will cancel touches for native UI components (`UIButton`, `UISwitch`, etc) it's attached to when it becomes `ACTIVE`.\n   * Default value is `true`.\n   * @param value\n   */\n  cancelsTouchesInView(value: boolean) {\n    this.config.cancelsTouchesInView = value;\n    return this;\n  }\n  initialize() {\n    this.handlerTag = getNextHandlerTag();\n    this.handlers = {\n      ...this.handlers,\n      handlerTag: this.handlerTag\n    };\n    if (this.config.ref) {\n      this.config.ref.current = this as GestureType;\n    }\n  }\n  toGestureArray(): GestureType[] {\n    return [this as GestureType];\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  prepare() {}\n  get shouldUseReanimated(): boolean {\n    // Use Reanimated when runOnJS isn't set explicitly,\n    // all defined callbacks are worklets\n    // and remote debugging is disabled\n    return this.config.runOnJS !== true && !this.handlers.isWorklet.includes(false) && !isRemoteDebuggingEnabled();\n  }\n}\nexport abstract class ContinousBaseGesture<EventPayloadT extends Record<string, unknown>, EventChangePayloadT extends Record<string, unknown>> extends BaseGesture<EventPayloadT> {\n  /**\n   * Set the callback that is being called every time the gesture receives an update while it's active.\n   * @param callback\n   */\n  onUpdate(callback: (event: GestureUpdateEvent<EventPayloadT>) => void) {\n    this.handlers.onUpdate = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.UPDATE] = this.isWorklet(callback);\n    return this;\n  }\n\n  /**\n   * Set the callback that is being called every time the gesture receives an update while it's active.\n   * This callback will receive information about change in value in relation to the last received event.\n   * @param callback\n   */\n  onChange(callback: (event: GestureUpdateEvent<EventPayloadT & EventChangePayloadT>) => void) {\n    this.handlers.onChange = callback;\n    this.handlers.isWorklet[CALLBACK_TYPE.CHANGE] = this.isWorklet(callback);\n    return this;\n  }\n\n  /**\n   * When `true` the handler will not activate by itself even if its activation criteria are met.\n   * Instead you can manipulate its state using state manager.\n   * @param manualActivation\n   */\n  manualActivation(manualActivation: boolean) {\n    this.config.manualActivation = manualActivation;\n    return this;\n  }\n}","import { BaseGesture, Gesture, GestureRef, GestureType } from './gesture';\n\nfunction extendRelation(\n  currentRelation: GestureRef[] | undefined,\n  extendWith: GestureType[]\n) {\n  if (currentRelation === undefined) {\n    return [...extendWith];\n  } else {\n    return [...currentRelation, ...extendWith];\n  }\n}\n\nexport class ComposedGesture extends Gesture {\n  protected gestures: Gesture[] = [];\n  protected simultaneousGestures: GestureType[] = [];\n  protected requireGesturesToFail: GestureType[] = [];\n\n  constructor(...gestures: Gesture[]) {\n    super();\n    this.gestures = gestures;\n  }\n\n  protected prepareSingleGesture(\n    gesture: Gesture,\n    simultaneousGestures: GestureType[],\n    requireGesturesToFail: GestureType[]\n  ) {\n    if (gesture instanceof BaseGesture) {\n      const newConfig = { ...gesture.config };\n\n      // No need to extend `blocksHandlers` here, because it's not changed in composition.\n      // The same effect is achieved by reversing the order of 2 gestures in `Exclusive`\n      newConfig.simultaneousWith = extendRelation(\n        newConfig.simultaneousWith,\n        simultaneousGestures\n      );\n      newConfig.requireToFail = extendRelation(\n        newConfig.requireToFail,\n        requireGesturesToFail\n      );\n\n      gesture.config = newConfig;\n    } else if (gesture instanceof ComposedGesture) {\n      gesture.simultaneousGestures = simultaneousGestures;\n      gesture.requireGesturesToFail = requireGesturesToFail;\n      gesture.prepare();\n    }\n  }\n\n  prepare() {\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        this.simultaneousGestures,\n        this.requireGesturesToFail\n      );\n    }\n  }\n\n  initialize() {\n    for (const gesture of this.gestures) {\n      gesture.initialize();\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return this.gestures.flatMap((gesture) => gesture.toGestureArray());\n  }\n}\n\nexport class SimultaneousGesture extends ComposedGesture {\n  prepare() {\n    // This piece of magic works something like this:\n    // for every gesture in the array\n    const simultaneousArrays = this.gestures.map((gesture) =>\n      // we take the array it's in\n      this.gestures\n        // and make a copy without it\n        .filter((x) => x !== gesture)\n        // then we flatmap the result to get list of raw (not composed) gestures\n        // this way we don't make the gestures simultaneous with themselves, which is\n        // important when the gesture is `ExclusiveGesture` - we don't want to make\n        // exclusive gestures simultaneous\n        .flatMap((x) => x.toGestureArray())\n    );\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        simultaneousArrays[i],\n        this.requireGesturesToFail\n      );\n    }\n  }\n}\n\nexport class ExclusiveGesture extends ComposedGesture {\n  prepare() {\n    // Transforms the array of gestures into array of grouped raw (not composed) gestures\n    // i.e. [gesture1, gesture2, ComposedGesture(gesture3, gesture4)] -> [[gesture1], [gesture2], [gesture3, gesture4]]\n    const gestureArrays = this.gestures.map((gesture) =>\n      gesture.toGestureArray()\n    );\n\n    let requireToFail: GestureType[] = [];\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        this.simultaneousGestures,\n        this.requireGesturesToFail.concat(requireToFail)\n      );\n\n      // Every group gets to wait for all groups before it\n      requireToFail = requireToFail.concat(gestureArrays[i]);\n    }\n  }\n}\n\nexport type ComposedGestureType = InstanceType<typeof ComposedGesture>;\nexport type RaceGestureType = ComposedGestureType;\nexport type SimultaneousGestureType = InstanceType<typeof SimultaneousGesture>;\nexport type ExclusiveGestureType = InstanceType<typeof ExclusiveGesture>;\n","import { FlingGesture } from './flingGesture';\nimport { ForceTouchGesture } from './forceTouchGesture';\nimport { Gesture } from './gesture';\nimport {\n  ComposedGesture,\n  ExclusiveGesture,\n  SimultaneousGesture,\n} from './gestureComposition';\nimport { LongPressGesture } from './longPressGesture';\nimport { PanGesture } from './panGesture';\nimport { PinchGesture } from './pinchGesture';\nimport { RotationGesture } from './rotationGesture';\nimport { TapGesture } from './tapGesture';\nimport { NativeGesture } from './nativeGesture';\nimport { ManualGesture } from './manualGesture';\nimport { HoverGesture } from './hoverGesture';\n\n/**\n * `Gesture` is the object that allows you to create and compose gestures.\n *\n * ### Remarks\n * - Consider wrapping your gesture configurations with `useMemo`, as it will reduce the amount of work Gesture Handler has to do under the hood when updating gestures.\n *\n * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture\n */\nexport const GestureObjects = {\n  /**\n   * A discrete gesture that recognizes one or many taps.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture\n   */\n  Tap: () => {\n    return new TapGesture();\n  },\n\n  /**\n   * A continuous gesture that can recognize a panning (dragging) gesture and track its movement.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture\n   */\n  Pan: () => {\n    return new PanGesture();\n  },\n\n  /**\n   * A continuous gesture that recognizes pinch gesture. It allows for tracking the distance between two fingers and use that information to scale or zoom your content.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pinch-gesture\n   */\n  Pinch: () => {\n    return new PinchGesture();\n  },\n\n  /**\n   * A continuous gesture that can recognize rotation and track its movement.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/rotation-gesture\n   */\n  Rotation: () => {\n    return new RotationGesture();\n  },\n\n  /**\n   * A discrete gesture that activates when the movement is sufficiently fast.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/fling-gesture\n   */\n  Fling: () => {\n    return new FlingGesture();\n  },\n\n  /**\n   * A discrete gesture that activates when the corresponding view is pressed for a sufficiently long time.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/long-press-gesture\n   */\n  LongPress: () => {\n    return new LongPressGesture();\n  },\n\n  /**\n   * #### iOS only\n   * A continuous gesture that recognizes force of a touch. It allows for tracking pressure of touch on some iOS devices.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/force-touch-gesture\n   */\n  ForceTouch: () => {\n    return new ForceTouchGesture();\n  },\n\n  /**\n   * A gesture that allows other touch handling components to participate in RNGH's gesture system.\n   * When used, the other component should be the direct child of a `GestureDetector`.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/native-gesture\n   */\n  Native: () => {\n    return new NativeGesture();\n  },\n\n  /**\n   * A plain gesture that has no specific activation criteria nor event data set.\n   * Its state has to be controlled manually using a state manager.\n   * It will not fail when all the pointers are lifted from the screen.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/manual-gesture\n   */\n  Manual: () => {\n    return new ManualGesture();\n  },\n\n  /**\n   * A continuous gesture that can recognize hovering above the view it's attached to.\n   * The hover effect may be activated by moving a mouse or a stylus over the view.\n   *\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/hover-gesture\n   */\n  Hover: () => {\n    return new HoverGesture();\n  },\n\n  /**\n   * Builds a composed gesture consisting of gestures provided as parameters.\n   * The first one that becomes active cancels the rest of gestures.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#race\n   */\n  Race: (...gestures: Gesture[]) => {\n    return new ComposedGesture(...gestures);\n  },\n\n  /**\n   * Builds a composed gesture that allows all base gestures to run simultaneously.\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#simultaneous\n   */\n  Simultaneous(...gestures: Gesture[]) {\n    return new SimultaneousGesture(...gestures);\n  },\n\n  /**\n   * Builds a composed gesture where only one of the provided gestures can become active.\n   * Priority is decided through the order of gestures: the first one has higher priority\n   * than the second one, second one has higher priority than the third one, and so on.\n   * For example, to make a gesture that recognizes both single and double tap you need\n   * to call Exclusive(doubleTap, singleTap).\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/fundamentals/gesture-composition/#exclusive\n   */\n  Exclusive(...gestures: Gesture[]) {\n    return new ExclusiveGesture(...gestures);\n  },\n};\n","import { Reanimated } from './reanimatedWrapper';\nimport { State } from '../../State';\nimport { tagMessage } from '../../utils';\nexport interface GestureStateManagerType {\n  begin: () => void;\n  activate: () => void;\n  fail: () => void;\n  end: () => void;\n}\nconst warningMessage = tagMessage('react-native-reanimated is required in order to use synchronous state management');\n\n// Check if reanimated module is available, but look for useSharedValue as conditional\n// require of reanimated can sometimes return content of `utils.ts` file (?)\nconst REANIMATED_AVAILABLE = Reanimated?.useSharedValue !== undefined;\nconst setGestureState = Reanimated?.setGestureState;\nconst _worklet_17474649591271_init_data = {\n  code: \"function create_Pnpm_gestureStateManagerTs1(handlerTag){const{REANIMATED_AVAILABLE,setGestureState,State,warningMessage}=this.__closure;return{begin:function(){'worklet';if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.BEGAN);}else{console.warn(warningMessage);}},activate:function(){'worklet';if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.ACTIVE);}else{console.warn(warningMessage);}},fail:function(){'worklet';if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.FAILED);}else{console.warn(warningMessage);}},end:function(){'worklet';if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.END);}else{console.warn(warningMessage);}}};}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/gestureStateManager.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"create_Pnpm_gestureStateManagerTs1\\\",\\\"handlerTag\\\",\\\"REANIMATED_AVAILABLE\\\",\\\"setGestureState\\\",\\\"State\\\",\\\"warningMessage\\\",\\\"__closure\\\",\\\"begin\\\",\\\"BEGAN\\\",\\\"console\\\",\\\"warn\\\",\\\"activate\\\",\\\"ACTIVE\\\",\\\"fail\\\",\\\"FAILED\\\",\\\"end\\\",\\\"END\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/gestureStateManager.ts\\\"],\\\"mappings\\\":\\\"AAoBA,SAAAA,kCAA6DA,CAAAC,UAAA,QAAAC,oBAAA,CAAAC,eAAA,CAAAC,KAAA,CAAAC,cAAA,OAAAC,SAAA,CAE3D,MAAO,CACLC,KAAK,CAAE,QAAAA,CAAA,CAAM,CACX,SAAS,CACT,GAAIL,oBAAoB,CAAE,CAGxBC,eAAe,CAAEF,UAAU,CAAEG,KAAK,CAACI,KAAK,CAAC,CAC3C,CAAC,IAAM,CACLC,OAAO,CAACC,IAAI,CAACL,cAAc,CAAC,CAC9B,CACF,CAAC,CAEDM,QAAQ,CAAE,QAAAA,CAAA,CAAM,CACd,SAAS,CACT,GAAIT,oBAAoB,CAAE,CAGxBC,eAAe,CAAEF,UAAU,CAAEG,KAAK,CAACQ,MAAM,CAAC,CAC5C,CAAC,IAAM,CACLH,OAAO,CAACC,IAAI,CAACL,cAAc,CAAC,CAC9B,CACF,CAAC,CAEDQ,IAAI,CAAE,QAAAA,CAAA,CAAM,CACV,SAAS,CACT,GAAIX,oBAAoB,CAAE,CAGxBC,eAAe,CAAEF,UAAU,CAAEG,KAAK,CAACU,MAAM,CAAC,CAC5C,CAAC,IAAM,CACLL,OAAO,CAACC,IAAI,CAACL,cAAc,CAAC,CAC9B,CACF,CAAC,CAEDU,GAAG,CAAE,QAAAA,CAAA,CAAM,CACT,SAAS,CACT,GAAIb,oBAAoB,CAAE,CAGxBC,eAAe,CAAEF,UAAU,CAAEG,KAAK,CAACY,GAAG,CAAC,CACzC,CAAC,IAAM,CACLP,OAAO,CAACC,IAAI,CAACL,cAAc,CAAC,CAC9B,CACF,CACF,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst _worklet_4799367197403_init_data = {\n  code: \"function pnpm_gestureStateManagerTs2(){const{REANIMATED_AVAILABLE,setGestureState,handlerTag,State,warningMessage}=this.__closure;if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.BEGAN);}else{console.warn(warningMessage);}}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/gestureStateManager.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"pnpm_gestureStateManagerTs2\\\",\\\"REANIMATED_AVAILABLE\\\",\\\"setGestureState\\\",\\\"handlerTag\\\",\\\"State\\\",\\\"warningMessage\\\",\\\"__closure\\\",\\\"BEGAN\\\",\\\"console\\\",\\\"warn\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/gestureStateManager.ts\\\"],\\\"mappings\\\":\\\"AAuBW,SAAAA,2BAAMA,CAAA,QAAAC,oBAAA,CAAAC,eAAA,CAAAC,UAAA,CAAAC,KAAA,CAAAC,cAAA,OAAAC,SAAA,CAEX,GAAIL,oBAAoB,CAAE,CAGxBC,eAAe,CAAEC,UAAU,CAAEC,KAAK,CAACG,KAAK,CAAC,CAC3C,CAAC,IAAM,CACLC,OAAO,CAACC,IAAI,CAACJ,cAAc,CAAC,CAC9B,CACF\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst _worklet_7932903515929_init_data = {\n  code: \"function pnpm_gestureStateManagerTs3(){const{REANIMATED_AVAILABLE,setGestureState,handlerTag,State,warningMessage}=this.__closure;if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.ACTIVE);}else{console.warn(warningMessage);}}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/gestureStateManager.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"pnpm_gestureStateManagerTs3\\\",\\\"REANIMATED_AVAILABLE\\\",\\\"setGestureState\\\",\\\"handlerTag\\\",\\\"State\\\",\\\"warningMessage\\\",\\\"__closure\\\",\\\"ACTIVE\\\",\\\"console\\\",\\\"warn\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/gestureStateManager.ts\\\"],\\\"mappings\\\":\\\"AAkCc,SAAAA,2BAAMA,CAAA,QAAAC,oBAAA,CAAAC,eAAA,CAAAC,UAAA,CAAAC,KAAA,CAAAC,cAAA,OAAAC,SAAA,CAEd,GAAIL,oBAAoB,CAAE,CAGxBC,eAAe,CAAEC,UAAU,CAAEC,KAAK,CAACG,MAAM,CAAC,CAC5C,CAAC,IAAM,CACLC,OAAO,CAACC,IAAI,CAACJ,cAAc,CAAC,CAC9B,CACF\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst _worklet_6492077607729_init_data = {\n  code: \"function pnpm_gestureStateManagerTs4(){const{REANIMATED_AVAILABLE,setGestureState,handlerTag,State,warningMessage}=this.__closure;if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.FAILED);}else{console.warn(warningMessage);}}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/gestureStateManager.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"pnpm_gestureStateManagerTs4\\\",\\\"REANIMATED_AVAILABLE\\\",\\\"setGestureState\\\",\\\"handlerTag\\\",\\\"State\\\",\\\"warningMessage\\\",\\\"__closure\\\",\\\"FAILED\\\",\\\"console\\\",\\\"warn\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/gestureStateManager.ts\\\"],\\\"mappings\\\":\\\"AA6CU,SAAAA,2BAAMA,CAAA,QAAAC,oBAAA,CAAAC,eAAA,CAAAC,UAAA,CAAAC,KAAA,CAAAC,cAAA,OAAAC,SAAA,CAEV,GAAIL,oBAAoB,CAAE,CAGxBC,eAAe,CAAEC,UAAU,CAAEC,KAAK,CAACG,MAAM,CAAC,CAC5C,CAAC,IAAM,CACLC,OAAO,CAACC,IAAI,CAACJ,cAAc,CAAC,CAC9B,CACF\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst _worklet_2856860112444_init_data = {\n  code: \"function pnpm_gestureStateManagerTs5(){const{REANIMATED_AVAILABLE,setGestureState,handlerTag,State,warningMessage}=this.__closure;if(REANIMATED_AVAILABLE){setGestureState(handlerTag,State.END);}else{console.warn(warningMessage);}}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/gestureStateManager.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"pnpm_gestureStateManagerTs5\\\",\\\"REANIMATED_AVAILABLE\\\",\\\"setGestureState\\\",\\\"handlerTag\\\",\\\"State\\\",\\\"warningMessage\\\",\\\"__closure\\\",\\\"END\\\",\\\"console\\\",\\\"warn\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/gestureStateManager.ts\\\"],\\\"mappings\\\":\\\"AAwDS,SAAAA,2BAAMA,CAAA,QAAAC,oBAAA,CAAAC,eAAA,CAAAC,UAAA,CAAAC,KAAA,CAAAC,cAAA,OAAAC,SAAA,CAET,GAAIL,oBAAoB,CAAE,CAGxBC,eAAe,CAAEC,UAAU,CAAEC,KAAK,CAACG,GAAG,CAAC,CACzC,CAAC,IAAM,CACLC,OAAO,CAACC,IAAI,CAACJ,cAAc,CAAC,CAC9B,CACF\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst create = function () {\n  const _e = [new global.Error(), -5, -27];\n  const create = function (handlerTag: number) {\n    return {\n      begin: function () {\n        const _e = [new global.Error(), -6, -27];\n        const pnpm_gestureStateManagerTs2 = function () {\n          if (REANIMATED_AVAILABLE) {\n            // When Reanimated is available, setGestureState should be defined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            setGestureState!(handlerTag, State.BEGAN);\n          } else {\n            console.warn(warningMessage);\n          }\n        };\n        pnpm_gestureStateManagerTs2.__closure = {\n          REANIMATED_AVAILABLE,\n          setGestureState,\n          handlerTag,\n          State,\n          warningMessage\n        };\n        pnpm_gestureStateManagerTs2.__workletHash = 4799367197403;\n        pnpm_gestureStateManagerTs2.__initData = _worklet_4799367197403_init_data;\n        pnpm_gestureStateManagerTs2.__stackDetails = _e;\n        return pnpm_gestureStateManagerTs2;\n      }(),\n      activate: function () {\n        const _e = [new global.Error(), -6, -27];\n        const pnpm_gestureStateManagerTs3 = function () {\n          if (REANIMATED_AVAILABLE) {\n            // When Reanimated is available, setGestureState should be defined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            setGestureState!(handlerTag, State.ACTIVE);\n          } else {\n            console.warn(warningMessage);\n          }\n        };\n        pnpm_gestureStateManagerTs3.__closure = {\n          REANIMATED_AVAILABLE,\n          setGestureState,\n          handlerTag,\n          State,\n          warningMessage\n        };\n        pnpm_gestureStateManagerTs3.__workletHash = 7932903515929;\n        pnpm_gestureStateManagerTs3.__initData = _worklet_7932903515929_init_data;\n        pnpm_gestureStateManagerTs3.__stackDetails = _e;\n        return pnpm_gestureStateManagerTs3;\n      }(),\n      fail: function () {\n        const _e = [new global.Error(), -6, -27];\n        const pnpm_gestureStateManagerTs4 = function () {\n          if (REANIMATED_AVAILABLE) {\n            // When Reanimated is available, setGestureState should be defined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            setGestureState!(handlerTag, State.FAILED);\n          } else {\n            console.warn(warningMessage);\n          }\n        };\n        pnpm_gestureStateManagerTs4.__closure = {\n          REANIMATED_AVAILABLE,\n          setGestureState,\n          handlerTag,\n          State,\n          warningMessage\n        };\n        pnpm_gestureStateManagerTs4.__workletHash = 6492077607729;\n        pnpm_gestureStateManagerTs4.__initData = _worklet_6492077607729_init_data;\n        pnpm_gestureStateManagerTs4.__stackDetails = _e;\n        return pnpm_gestureStateManagerTs4;\n      }(),\n      end: function () {\n        const _e = [new global.Error(), -6, -27];\n        const pnpm_gestureStateManagerTs5 = function () {\n          if (REANIMATED_AVAILABLE) {\n            // When Reanimated is available, setGestureState should be defined\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            setGestureState!(handlerTag, State.END);\n          } else {\n            console.warn(warningMessage);\n          }\n        };\n        pnpm_gestureStateManagerTs5.__closure = {\n          REANIMATED_AVAILABLE,\n          setGestureState,\n          handlerTag,\n          State,\n          warningMessage\n        };\n        pnpm_gestureStateManagerTs5.__workletHash = 2856860112444;\n        pnpm_gestureStateManagerTs5.__initData = _worklet_2856860112444_init_data;\n        pnpm_gestureStateManagerTs5.__stackDetails = _e;\n        return pnpm_gestureStateManagerTs5;\n      }()\n    };\n  };\n  create.__closure = {\n    REANIMATED_AVAILABLE,\n    setGestureState,\n    State,\n    warningMessage\n  };\n  create.__workletHash = 17474649591271;\n  create.__initData = _worklet_17474649591271_init_data;\n  create.__stackDetails = _e;\n  return create;\n}();\nexport const GestureStateManager = {\n  create\n};","import { BaseGestureConfig, ContinousBaseGesture } from './gesture';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport type { HoverGestureHandlerEventPayload } from '../GestureHandlerEventPayload';\nexport type HoverGestureChangeEventPayload = {\n  changeX: number;\n  changeY: number;\n};\nexport enum HoverEffect {\n  NONE = 0,\n  LIFT = 1,\n  HIGHLIGHT = 2,\n}\nexport interface HoverGestureConfig {\n  hoverEffect?: HoverEffect;\n}\nexport const hoverGestureHandlerProps = ['hoverEffect'] as const;\nconst _worklet_2074844346342_init_data = {\n  code: \"function changeEventCalculator_Pnpm_hoverGestureTs1(current,previous){let changePayload;if(previous===undefined){changePayload={changeX:current.x,changeY:current.y};}else{changePayload={changeX:current.x-previous.x,changeY:current.y-previous.y};}return{...current,...changePayload};}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/hoverGesture.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator_Pnpm_hoverGestureTs1\\\",\\\"current\\\",\\\"previous\\\",\\\"changePayload\\\",\\\"undefined\\\",\\\"changeX\\\",\\\"x\\\",\\\"changeY\\\",\\\"y\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/hoverGesture.ts\\\"],\\\"mappings\\\":\\\"AAqBA,SAAAA,0CAGEA,CAAAC,OAAA,CAAAC,QAAA,EAEA,GAAI,CAAAC,aAA6C,CACjD,GAAID,QAAQ,GAAKE,SAAS,CAAE,CAC1BD,aAAa,CAAG,CACdE,OAAO,CAAEJ,OAAO,CAACK,CAAC,CAClBC,OAAO,CAAEN,OAAO,CAACO,CACnB,CAAC,CACH,CAAC,IAAM,CACLL,aAAa,CAAG,CACdE,OAAO,CAAEJ,OAAO,CAACK,CAAC,CAAGJ,QAAQ,CAACI,CAAC,CAC/BC,OAAO,CAAEN,OAAO,CAACO,CAAC,CAAGN,QAAQ,CAACM,CAChC,CAAC,CACH,CAEA,MAAO,CAAE,GAAGP,OAAO,CAAE,GAAGE,aAAc,CAAC,CACzC\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst changeEventCalculator = function () {\n  const _e = [new global.Error(), 1, -27];\n  const changeEventCalculator = function (current: GestureUpdateEvent<HoverGestureHandlerEventPayload>, previous?: GestureUpdateEvent<HoverGestureHandlerEventPayload>) {\n    let changePayload: HoverGestureChangeEventPayload;\n    if (previous === undefined) {\n      changePayload = {\n        changeX: current.x,\n        changeY: current.y\n      };\n    } else {\n      changePayload = {\n        changeX: current.x - previous.x,\n        changeY: current.y - previous.y\n      };\n    }\n    return {\n      ...current,\n      ...changePayload\n    };\n  };\n  changeEventCalculator.__closure = {};\n  changeEventCalculator.__workletHash = 2074844346342;\n  changeEventCalculator.__initData = _worklet_2074844346342_init_data;\n  changeEventCalculator.__stackDetails = _e;\n  return changeEventCalculator;\n}();\nexport class HoverGesture extends ContinousBaseGesture<HoverGestureHandlerEventPayload, HoverGestureChangeEventPayload> {\n  public config: BaseGestureConfig & HoverGestureConfig = {};\n  constructor() {\n    super();\n    this.handlerName = 'HoverGestureHandler';\n  }\n\n  /**\n   * #### iOS only\n   * Sets the visual hover effect.\n   */\n  effect(effect: HoverEffect) {\n    this.config.hoverEffect = effect;\n    return this;\n  }\n  onChange(callback: (event: GestureUpdateEvent<HoverGestureHandlerEventPayload & HoverGestureChangeEventPayload>) => void) {\n    // @ts-ignore TS being overprotective, HoverGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\nexport type HoverGestureType = InstanceType<typeof HoverGesture>;","import { BaseGesture, BaseGestureConfig } from './gesture';\nimport { LongPressGestureConfig } from '../LongPressGestureHandler';\nimport type { LongPressGestureHandlerEventPayload } from '../GestureHandlerEventPayload';\n\nexport class LongPressGesture extends BaseGesture<LongPressGestureHandlerEventPayload> {\n  public config: BaseGestureConfig & LongPressGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'LongPressGestureHandler';\n    this.shouldCancelWhenOutside(true);\n  }\n\n  /**\n   * Minimum time, expressed in milliseconds, that a finger must remain pressed on the corresponding view.\n   * The default value is 500.\n   * @param duration\n   */\n  minDuration(duration: number) {\n    this.config.minDurationMs = duration;\n    return this;\n  }\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is allowed to travel during a long press gesture.\n   * @param distance\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/long-press-gesture#maxdistancevalue-number\n   */\n  maxDistance(distance: number) {\n    this.config.maxDist = distance;\n    return this;\n  }\n\n  /**\n   * Determine exact number of points required to handle the long press gesture.\n   * @param pointers\n   */\n  numberOfPointers(pointers: number) {\n    this.config.numberOfPointers = pointers;\n    return this;\n  }\n}\n\nexport type LongPressGestureType = InstanceType<typeof LongPressGesture>;\n","import { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport { ContinousBaseGesture } from './gesture';\nconst _worklet_12945462865583_init_data = {\n  code: \"function changeEventCalculator_Pnpm_manualGestureTs1(current,_previous){return current;}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/manualGesture.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator_Pnpm_manualGestureTs1\\\",\\\"current\\\",\\\"_previous\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/manualGesture.ts\\\"],\\\"mappings\\\":\\\"AAGA,SAAAA,2CAGEA,CAAAC,OAAA,CAAAC,SAAA,EAEA,MAAO,CAAAD,OAAO,CAChB\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst changeEventCalculator = function () {\n  const _e = [new global.Error(), 1, -27];\n  const changeEventCalculator = function (current: GestureUpdateEvent<Record<string, never>>, _previous?: GestureUpdateEvent<Record<string, never>>) {\n    return current;\n  };\n  changeEventCalculator.__closure = {};\n  changeEventCalculator.__workletHash = 12945462865583;\n  changeEventCalculator.__initData = _worklet_12945462865583_init_data;\n  changeEventCalculator.__stackDetails = _e;\n  return changeEventCalculator;\n}();\nexport class ManualGesture extends ContinousBaseGesture<Record<string, never>, Record<string, never>> {\n  constructor() {\n    super();\n    this.handlerName = 'ManualGestureHandler';\n  }\n  onChange(callback: (event: GestureUpdateEvent<Record<string, never>>) => void) {\n    // @ts-ignore TS being overprotective, Record<string, never> is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\nexport type ManualGestureType = InstanceType<typeof ManualGesture>;","import { BaseGestureConfig, BaseGesture } from './gesture';\nimport { NativeViewGestureConfig } from '../NativeViewGestureHandler';\nimport type { NativeViewGestureHandlerPayload } from '../GestureHandlerEventPayload';\n\nexport class NativeGesture extends BaseGesture<NativeViewGestureHandlerPayload> {\n  public config: BaseGestureConfig & NativeViewGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'NativeViewGestureHandler';\n  }\n\n  /**\n   * When true, underlying handler will activate unconditionally when in `BEGAN` or `UNDETERMINED` state.\n   * @param value\n   */\n  shouldActivateOnStart(value: boolean) {\n    this.config.shouldActivateOnStart = value;\n    return this;\n  }\n\n  /**\n   * When true, cancels all other gesture handlers when this `NativeViewGestureHandler` receives an `ACTIVE` state event.\n   * @param value\n   */\n  disallowInterruption(value: boolean) {\n    this.config.disallowInterruption = value;\n    return this;\n  }\n}\n\nexport type NativeGestureType = InstanceType<typeof NativeGesture>;\n","import { BaseGestureConfig, ContinousBaseGesture } from './gesture';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport { PanGestureConfig } from '../PanGestureHandler';\nimport type { PanGestureHandlerEventPayload } from '../GestureHandlerEventPayload';\nexport type PanGestureChangeEventPayload = {\n  changeX: number;\n  changeY: number;\n};\nconst _worklet_1947784830943_init_data = {\n  code: \"function changeEventCalculator_Pnpm_panGestureTs1(current,previous){let changePayload;if(previous===undefined){changePayload={changeX:current.translationX,changeY:current.translationY};}else{changePayload={changeX:current.translationX-previous.translationX,changeY:current.translationY-previous.translationY};}return{...current,...changePayload};}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/panGesture.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator_Pnpm_panGestureTs1\\\",\\\"current\\\",\\\"previous\\\",\\\"changePayload\\\",\\\"undefined\\\",\\\"changeX\\\",\\\"translationX\\\",\\\"changeY\\\",\\\"translationY\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/panGesture.ts\\\"],\\\"mappings\\\":\\\"AAUA,SAAAA,wCAE8DA,CAAAC,OAC5D,CAAAC,QAAA,EAEA,GAAI,CAAAC,aAA2C,CAC/C,GAAID,QAAQ,GAAKE,SAAS,CAAE,CAC1BD,aAAa,CAAG,CACdE,OAAO,CAAEJ,OAAO,CAACK,YAAY,CAC7BC,OAAO,CAAEN,OAAO,CAACO,YACnB,CAAC,CACH,CAAC,IAAM,CACLL,aAAa,CAAG,CACdE,OAAO,CAAEJ,OAAO,CAACK,YAAY,CAAGJ,QAAQ,CAACI,YAAY,CACrDC,OAAO,CAAEN,OAAO,CAACO,YAAY,CAAGN,QAAQ,CAACM,YAC3C,CAAC,CACH,CAEA,MAAO,CAAE,GAAGP,OAAO,CAAE,GAAGE,aAAc,CAAC,CACzC\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst changeEventCalculator = function () {\n  const _e = [new global.Error(), 1, -27];\n  const changeEventCalculator = function (current: GestureUpdateEvent<PanGestureHandlerEventPayload>, previous?: GestureUpdateEvent<PanGestureHandlerEventPayload>) {\n    let changePayload: PanGestureChangeEventPayload;\n    if (previous === undefined) {\n      changePayload = {\n        changeX: current.translationX,\n        changeY: current.translationY\n      };\n    } else {\n      changePayload = {\n        changeX: current.translationX - previous.translationX,\n        changeY: current.translationY - previous.translationY\n      };\n    }\n    return {\n      ...current,\n      ...changePayload\n    };\n  };\n  changeEventCalculator.__closure = {};\n  changeEventCalculator.__workletHash = 1947784830943;\n  changeEventCalculator.__initData = _worklet_1947784830943_init_data;\n  changeEventCalculator.__stackDetails = _e;\n  return changeEventCalculator;\n}();\nexport class PanGesture extends ContinousBaseGesture<PanGestureHandlerEventPayload, PanGestureChangeEventPayload> {\n  public config: BaseGestureConfig & PanGestureConfig = {};\n  constructor() {\n    super();\n    this.handlerName = 'PanGestureHandler';\n  }\n\n  /**\n   * Range along Y axis (in points) where fingers travels without activation of gesture.\n   * @param offset\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetyvalue-number--number\n   */\n  activeOffsetY(offset: number | [activeOffsetYStart: number, activeOffsetYEnd: number]) {\n    if (Array.isArray(offset)) {\n      this.config.activeOffsetYStart = offset[0];\n      this.config.activeOffsetYEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.activeOffsetYStart = offset;\n    } else {\n      this.config.activeOffsetYEnd = offset;\n    }\n    return this;\n  }\n\n  /**\n   * Range along X axis (in points) where fingers travels without activation of gesture.\n   * @param offset\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#activeoffsetxvalue-number--number\n   */\n  activeOffsetX(offset: number | [activeOffsetXStart: number, activeOffsetXEnd: number]) {\n    if (Array.isArray(offset)) {\n      this.config.activeOffsetXStart = offset[0];\n      this.config.activeOffsetXEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.activeOffsetXStart = offset;\n    } else {\n      this.config.activeOffsetXEnd = offset;\n    }\n    return this;\n  }\n\n  /**\n   * When the finger moves outside this range (in points) along Y axis and gesture hasn't yet activated it will fail recognizing the gesture.\n   * @param offset\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetyvalue-number--number\n   */\n  failOffsetY(offset: number | [failOffsetYStart: number, failOffsetYEnd: number]) {\n    if (Array.isArray(offset)) {\n      this.config.failOffsetYStart = offset[0];\n      this.config.failOffsetYEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.failOffsetYStart = offset;\n    } else {\n      this.config.failOffsetYEnd = offset;\n    }\n    return this;\n  }\n\n  /**\n   * When the finger moves outside this range (in points) along X axis and gesture hasn't yet activated it will fail recognizing the gesture.\n   * @param offset\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture#failoffsetxvalue-number--number\n   */\n  failOffsetX(offset: number | [failOffsetXStart: number, failOffsetXEnd: number]) {\n    if (Array.isArray(offset)) {\n      this.config.failOffsetXStart = offset[0];\n      this.config.failOffsetXEnd = offset[1];\n    } else if (offset < 0) {\n      this.config.failOffsetXStart = offset;\n    } else {\n      this.config.failOffsetXEnd = offset;\n    }\n    return this;\n  }\n\n  /**\n   * A number of fingers that is required to be placed before gesture can activate. Should be a higher or equal to 0 integer.\n   * @param minPointers\n   */\n  minPointers(minPointers: number) {\n    this.config.minPointers = minPointers;\n    return this;\n  }\n\n  /**\n   * When the given number of fingers is placed on the screen and gesture hasn't yet activated it will fail recognizing the gesture.\n   * Should be a higher or equal to 0 integer.\n   * @param maxPointers\n   */\n  maxPointers(maxPointers: number) {\n    this.config.maxPointers = maxPointers;\n    return this;\n  }\n\n  /**\n   * Minimum distance the finger (or multiple finger) need to travel before the gesture activates.\n   * Expressed in points.\n   * @param distance\n   */\n  minDistance(distance: number) {\n    this.config.minDist = distance;\n    return this;\n  }\n\n  /**\n   * Minimum velocity the finger has to reach in order to activate handler.\n   * @param velocity\n   */\n  minVelocity(velocity: number) {\n    this.config.minVelocity = velocity;\n    return this;\n  }\n\n  /**\n   * Minimum velocity along X axis the finger has to reach in order to activate handler.\n   * @param velocity\n   */\n  minVelocityX(velocity: number) {\n    this.config.minVelocityX = velocity;\n    return this;\n  }\n\n  /**\n   * Minimum velocity along Y axis the finger has to reach in order to activate handler.\n   * @param velocity\n   */\n  minVelocityY(velocity: number) {\n    this.config.minVelocityY = velocity;\n    return this;\n  }\n\n  /**\n   * #### Android only\n   * Android, by default, will calculate translation values based on the position of the leading pointer (the first one that was placed on the screen).\n   * This modifier allows that behavior to be changed to the one that is default on iOS - the averaged position of all active pointers will be used to calculate the translation values.\n   * @param value\n   */\n  averageTouches(value: boolean) {\n    this.config.avgTouches = value;\n    return this;\n  }\n\n  /**\n   * #### iOS only\n   * Enables two-finger gestures on supported devices, for example iPads with trackpads.\n   * @param value\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#enabletrackpadtwofingergesturevalue-boolean-ios-only\n   */\n  enableTrackpadTwoFingerGesture(value: boolean) {\n    this.config.enableTrackpadTwoFingerGesture = value;\n    return this;\n  }\n\n  /**\n   * Duration in milliseconds of the LongPress gesture before Pan is allowed to activate.\n   * @param duration\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/pan-gesture/#activateafterlongpressduration-number\n   */\n  activateAfterLongPress(duration: number) {\n    this.config.activateAfterLongPress = duration;\n    return this;\n  }\n  onChange(callback: (event: GestureUpdateEvent<PanGestureHandlerEventPayload & PanGestureChangeEventPayload>) => void) {\n    // @ts-ignore TS being overprotective, PanGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\nexport type PanGestureType = InstanceType<typeof PanGesture>;","import { ContinousBaseGesture } from './gesture';\nimport type { PinchGestureHandlerEventPayload } from '../GestureHandlerEventPayload';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\nexport type PinchGestureChangeEventPayload = {\n  scaleChange: number;\n};\nconst _worklet_9876979738005_init_data = {\n  code: \"function changeEventCalculator_Pnpm_pinchGestureTs1(current,previous){let changePayload;if(previous===undefined){changePayload={scaleChange:current.scale};}else{changePayload={scaleChange:current.scale/previous.scale};}return{...current,...changePayload};}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/pinchGesture.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator_Pnpm_pinchGestureTs1\\\",\\\"current\\\",\\\"previous\\\",\\\"changePayload\\\",\\\"undefined\\\",\\\"scaleChange\\\",\\\"scale\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/pinchGesture.ts\\\"],\\\"mappings\\\":\\\"AAQA,SAAAA,0CAGEA,CAAAC,OAAA,CAAAC,QAAA,EAEA,GAAI,CAAAC,aAA6C,CACjD,GAAID,QAAQ,GAAKE,SAAS,CAAE,CAC1BD,aAAa,CAAG,CACdE,WAAW,CAAEJ,OAAO,CAACK,KACvB,CAAC,CACH,CAAC,IAAM,CACLH,aAAa,CAAG,CACdE,WAAW,CAAEJ,OAAO,CAACK,KAAK,CAAGJ,QAAQ,CAACI,KACxC,CAAC,CACH,CAEA,MAAO,CAAE,GAAGL,OAAO,CAAE,GAAGE,aAAc,CAAC,CACzC\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst changeEventCalculator = function () {\n  const _e = [new global.Error(), 1, -27];\n  const changeEventCalculator = function (current: GestureUpdateEvent<PinchGestureHandlerEventPayload>, previous?: GestureUpdateEvent<PinchGestureHandlerEventPayload>) {\n    let changePayload: PinchGestureChangeEventPayload;\n    if (previous === undefined) {\n      changePayload = {\n        scaleChange: current.scale\n      };\n    } else {\n      changePayload = {\n        scaleChange: current.scale / previous.scale\n      };\n    }\n    return {\n      ...current,\n      ...changePayload\n    };\n  };\n  changeEventCalculator.__closure = {};\n  changeEventCalculator.__workletHash = 9876979738005;\n  changeEventCalculator.__initData = _worklet_9876979738005_init_data;\n  changeEventCalculator.__stackDetails = _e;\n  return changeEventCalculator;\n}();\nexport class PinchGesture extends ContinousBaseGesture<PinchGestureHandlerEventPayload, PinchGestureChangeEventPayload> {\n  constructor() {\n    super();\n    this.handlerName = 'PinchGestureHandler';\n  }\n  onChange(callback: (event: GestureUpdateEvent<PinchGestureHandlerEventPayload & PinchGestureChangeEventPayload>) => void) {\n    // @ts-ignore TS being overprotective, PinchGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\nexport type PinchGestureType = InstanceType<typeof PinchGesture>;","import { ComponentClass } from 'react';\nimport { GestureUpdateEvent, GestureStateChangeEvent } from '../gestureHandlerCommon';\nimport { tagMessage } from '../../utils';\nexport interface SharedValue<T> {\n  value: T;\n}\nlet Reanimated: {\n  default: {\n    // Slightly modified definition copied from 'react-native-reanimated'\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    createAnimatedComponent<P extends object>(component: ComponentClass<P>, options?: unknown): ComponentClass<P>;\n  };\n  useEvent: (callback: (event: GestureUpdateEvent | GestureStateChangeEvent) => void, events: string[], rebuild: boolean) => unknown;\n  useSharedValue: <T>(value: T) => SharedValue<T>;\n  setGestureState: (handlerTag: number, newState: number) => void;\n} | undefined;\ntry {\n  Reanimated = require('react-native-reanimated');\n} catch (e) {\n  // When 'react-native-reanimated' is not available we want to quietly continue\n  // @ts-ignore TS demands the variable to be initialized\n  Reanimated = undefined;\n}\nif (!Reanimated?.useSharedValue) {\n  // @ts-ignore Make sure the loaded module is actually Reanimated, if it's not\n  // reset the module to undefined so we can fallback to the default implementation\n  Reanimated = undefined;\n}\nconst _worklet_12835327155090_init_data = {\n  code: \"function pnpm_reanimatedWrapperTs1(){const{tagMessage}=this.__closure;console.warn(tagMessage('Please use newer version of react-native-reanimated in order to control state of the gestures.'));}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/reanimatedWrapper.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"pnpm_reanimatedWrapperTs1\\\",\\\"tagMessage\\\",\\\"__closure\\\",\\\"console\\\",\\\"warn\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/reanimatedWrapper.ts\\\"],\\\"mappings\\\":\\\"AA+C+B,SAAAA,yBAAMA,CAAA,QAAAC,UAAA,OAAAC,SAAA,CAEjCC,OAAO,CAACC,IAAI,CACVH,UAAU,CACR,gGACF,CACF,CAAC,CACH\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nif (Reanimated !== undefined && !Reanimated.setGestureState) {\n  // The loaded module is Reanimated but it doesn't have the setGestureState defined\n  Reanimated.setGestureState = function () {\n    const _e = [new global.Error(), -2, -27];\n    const pnpm_reanimatedWrapperTs1 = function () {\n      console.warn(tagMessage('Please use newer version of react-native-reanimated in order to control state of the gestures.'));\n    };\n    pnpm_reanimatedWrapperTs1.__closure = {\n      tagMessage\n    };\n    pnpm_reanimatedWrapperTs1.__workletHash = 12835327155090;\n    pnpm_reanimatedWrapperTs1.__initData = _worklet_12835327155090_init_data;\n    pnpm_reanimatedWrapperTs1.__stackDetails = _e;\n    return pnpm_reanimatedWrapperTs1;\n  }();\n}\nexport { Reanimated };","import { ContinousBaseGesture } from './gesture';\nimport type { RotationGestureHandlerEventPayload } from '../GestureHandlerEventPayload';\nimport { GestureUpdateEvent } from '../gestureHandlerCommon';\ntype RotationGestureChangeEventPayload = {\n  rotationChange: number;\n};\nconst _worklet_11988645380499_init_data = {\n  code: \"function changeEventCalculator_Pnpm_rotationGestureTs1(current,previous){let changePayload;if(previous===undefined){changePayload={rotationChange:current.rotation};}else{changePayload={rotationChange:current.rotation-previous.rotation};}return{...current,...changePayload};}\",\n  location: \"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/rotationGesture.ts\",\n  sourceMap: \"{\\\"version\\\":3,\\\"names\\\":[\\\"changeEventCalculator_Pnpm_rotationGestureTs1\\\",\\\"current\\\",\\\"previous\\\",\\\"changePayload\\\",\\\"undefined\\\",\\\"rotationChange\\\",\\\"rotation\\\"],\\\"sources\\\":[\\\"/Users/antonio.benitez/Desktop/Callstack/CK/mrsasuu/AdoptaApp-Mini-app/node_modules/.pnpm/react-native-gesture-handler@2.25.0_react-native@0.78.2_@babel+core@7.27.1_@babel+preset-env@_c7bi4l62mja5f33ouxslvy6pkm/node_modules/react-native-gesture-handler/src/handlers/gestures/rotationGesture.ts\\\"],\\\"mappings\\\":\\\"AAQA,SAAAA,6CAGEA,CAAAC,OAAA,CAAAC,QAAA,EAEA,GAAI,CAAAC,aAAgD,CACpD,GAAID,QAAQ,GAAKE,SAAS,CAAE,CAC1BD,aAAa,CAAG,CACdE,cAAc,CAAEJ,OAAO,CAACK,QAC1B,CAAC,CACH,CAAC,IAAM,CACLH,aAAa,CAAG,CACdE,cAAc,CAAEJ,OAAO,CAACK,QAAQ,CAAGJ,QAAQ,CAACI,QAC9C,CAAC,CACH,CAEA,MAAO,CAAE,GAAGL,OAAO,CAAE,GAAGE,aAAc,CAAC,CACzC\\\",\\\"ignoreList\\\":[]}\",\n  version: \"3.17.5\"\n};\nconst changeEventCalculator = function () {\n  const _e = [new global.Error(), 1, -27];\n  const changeEventCalculator = function (current: GestureUpdateEvent<RotationGestureHandlerEventPayload>, previous?: GestureUpdateEvent<RotationGestureHandlerEventPayload>) {\n    let changePayload: RotationGestureChangeEventPayload;\n    if (previous === undefined) {\n      changePayload = {\n        rotationChange: current.rotation\n      };\n    } else {\n      changePayload = {\n        rotationChange: current.rotation - previous.rotation\n      };\n    }\n    return {\n      ...current,\n      ...changePayload\n    };\n  };\n  changeEventCalculator.__closure = {};\n  changeEventCalculator.__workletHash = 11988645380499;\n  changeEventCalculator.__initData = _worklet_11988645380499_init_data;\n  changeEventCalculator.__stackDetails = _e;\n  return changeEventCalculator;\n}();\nexport class RotationGesture extends ContinousBaseGesture<RotationGestureHandlerEventPayload, RotationGestureChangeEventPayload> {\n  constructor() {\n    super();\n    this.handlerName = 'RotationGestureHandler';\n  }\n  onChange(callback: (event: GestureUpdateEvent<RotationGestureHandlerEventPayload & RotationGestureChangeEventPayload>) => void) {\n    // @ts-ignore TS being overprotective, RotationGestureHandlerEventPayload is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\nexport type RotationGestureType = InstanceType<typeof RotationGesture>;","import { BaseGestureConfig, BaseGesture } from './gesture';\nimport { TapGestureConfig } from '../TapGestureHandler';\nimport type { TapGestureHandlerEventPayload } from '../GestureHandlerEventPayload';\n\nexport class TapGesture extends BaseGesture<TapGestureHandlerEventPayload> {\n  public config: BaseGestureConfig & TapGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'TapGestureHandler';\n    this.shouldCancelWhenOutside(true);\n  }\n\n  /**\n   * Minimum number of pointers (fingers) required to be placed before the gesture activates.\n   * Should be a positive integer. The default value is 1.\n   * @param minPointers\n   */\n  minPointers(minPointers: number) {\n    this.config.minPointers = minPointers;\n    return this;\n  }\n\n  /**\n   * Number of tap gestures required to activate the gesture.\n   * The default value is 1.\n   * @param count\n   */\n  numberOfTaps(count: number) {\n    this.config.numberOfTaps = count;\n    return this;\n  }\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is allowed to travel during a tap gesture.\n   * @param maxDist\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture#maxdistancevalue-number\n   */\n  maxDistance(maxDist: number) {\n    this.config.maxDist = maxDist;\n    return this;\n  }\n\n  /**\n   * Maximum time, expressed in milliseconds, that defines how fast a finger must be released after a touch.\n   * The default value is 500.\n   * @param duration\n   */\n  maxDuration(duration: number) {\n    this.config.maxDurationMs = duration;\n    return this;\n  }\n\n  /**\n   * Maximum time, expressed in milliseconds, that can pass before the next tap — if many taps are required.\n   * The default value is 500.\n   * @param delay\n   */\n  maxDelay(delay: number) {\n    this.config.maxDelayMs = delay;\n    return this;\n  }\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is allowed to travel along the X axis during a tap gesture.\n   * @param delta\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture#maxdeltaxvalue-number\n   */\n  maxDeltaX(delta: number) {\n    this.config.maxDeltaX = delta;\n    return this;\n  }\n\n  /**\n   * Maximum distance, expressed in points, that defines how far the finger is allowed to travel along the Y axis during a tap gesture.\n   * @param delta\n   * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/tap-gesture#maxdeltayvalue-number\n   */\n  maxDeltaY(delta: number) {\n    this.config.maxDeltaY = delta;\n    return this;\n  }\n}\n\nexport type TapGestureType = InstanceType<typeof TapGesture>;\n","let handlerTag = 1;\n\nexport function getNextHandlerTag(): number {\n  return handlerTag++;\n}\n","import { isTestEnv } from '../utils';\nimport { GestureType } from './gestures/gesture';\nimport { GestureEvent, HandlerStateChangeEvent } from './gestureHandlerCommon';\n\nexport const handlerIDToTag: Record<string, number> = {};\nconst gestures = new Map<number, GestureType>();\nconst oldHandlers = new Map<number, GestureHandlerCallbacks>();\nconst testIDs = new Map<string, number>();\n\nexport function registerHandler(\n  handlerTag: number,\n  handler: GestureType,\n  testID?: string\n) {\n  gestures.set(handlerTag, handler);\n  if (isTestEnv() && testID) {\n    testIDs.set(testID, handlerTag);\n  }\n}\n\nexport function registerOldGestureHandler(\n  handlerTag: number,\n  handler: GestureHandlerCallbacks\n) {\n  oldHandlers.set(handlerTag, handler);\n}\n\nexport function unregisterOldGestureHandler(handlerTag: number) {\n  oldHandlers.delete(handlerTag);\n}\n\nexport function unregisterHandler(handlerTag: number, testID?: string) {\n  gestures.delete(handlerTag);\n  if (isTestEnv() && testID) {\n    testIDs.delete(testID);\n  }\n}\n\nexport function findHandler(handlerTag: number) {\n  return gestures.get(handlerTag);\n}\n\nexport function findOldGestureHandler(handlerTag: number) {\n  return oldHandlers.get(handlerTag);\n}\n\nexport function findHandlerByTestID(testID: string) {\n  const handlerTag = testIDs.get(testID);\n  if (handlerTag !== undefined) {\n    return findHandler(handlerTag) ?? null;\n  }\n  return null;\n}\n\nexport interface GestureHandlerCallbacks {\n  onGestureEvent: (event: GestureEvent<any>) => void;\n  onGestureStateChange: (event: HandlerStateChangeEvent<any>) => void;\n}\n","import * as React from 'react';\nimport { Platform, findNodeHandle as findNodeHandleRN } from 'react-native';\nimport { handlerIDToTag } from './handlersRegistry';\nimport { toArray } from '../utils';\nimport RNGestureHandlerModule from '../RNGestureHandlerModule';\nimport { ghQueueMicrotask } from '../ghQueueMicrotask';\n\nfunction isConfigParam(param: unknown, name: string) {\n  // param !== Object(param) returns false if `param` is a function\n  // or an object and returns true if `param` is null\n  return (\n    param !== undefined &&\n    (param !== Object(param) ||\n      !('__isNative' in (param as Record<string, unknown>))) &&\n    name !== 'onHandlerStateChange' &&\n    name !== 'onGestureEvent'\n  );\n}\n\nexport function filterConfig(\n  props: Record<string, unknown>,\n  validProps: string[],\n  defaults: Record<string, unknown> = {}\n) {\n  const filteredConfig = { ...defaults };\n  for (const key of validProps) {\n    let value = props[key];\n    if (isConfigParam(value, key)) {\n      if (key === 'simultaneousHandlers' || key === 'waitFor') {\n        value = transformIntoHandlerTags(props[key]);\n      } else if (key === 'hitSlop' && typeof value !== 'object') {\n        value = { top: value, left: value, bottom: value, right: value };\n      }\n      filteredConfig[key] = value;\n    }\n  }\n  return filteredConfig;\n}\n\nexport function transformIntoHandlerTags(handlerIDs: any) {\n  handlerIDs = toArray(handlerIDs);\n\n  if (Platform.OS === 'web') {\n    return handlerIDs\n      .map(({ current }: { current: any }) => current)\n      .filter((handle: any) => handle);\n  }\n  // converts handler string IDs into their numeric tags\n  return handlerIDs\n    .map(\n      (handlerID: any) =>\n        handlerIDToTag[handlerID] || handlerID.current?.handlerTag || -1\n    )\n    .filter((handlerTag: number) => handlerTag > 0);\n}\n\nexport function findNodeHandle(\n  node: null | number | React.Component<any, any> | React.ComponentClass<any>\n): null | number | React.Component<any, any> | React.ComponentClass<any> {\n  if (Platform.OS === 'web') {\n    return node;\n  }\n  return findNodeHandleRN(node);\n}\nlet flushOperationsScheduled = false;\n\nexport function scheduleFlushOperations() {\n  if (!flushOperationsScheduled) {\n    flushOperationsScheduled = true;\n    ghQueueMicrotask(() => {\n      RNGestureHandlerModule.flushOperations();\n\n      flushOperationsScheduled = false;\n    });\n  }\n}\n","import { initialize } from './init';\n\nexport { Directions } from './Directions';\nexport { State } from './State';\nexport { PointerType } from './PointerType';\nexport { default as gestureHandlerRootHOC } from './components/gestureHandlerRootHOC';\nexport { default as GestureHandlerRootView } from './components/GestureHandlerRootView';\nexport type {\n  // Event types\n  GestureEvent,\n  HandlerStateChangeEvent,\n  // Event payloads types\n  GestureEventPayload,\n  HandlerStateChangeEventPayload,\n  // Pointer events\n  GestureTouchEvent,\n  TouchData,\n  // New api event types\n  GestureUpdateEvent,\n  GestureStateChangeEvent,\n} from './handlers/gestureHandlerCommon';\nexport { MouseButton } from './handlers/gestureHandlerCommon';\nexport type { GestureType } from './handlers/gestures/gesture';\nexport type {\n  TapGestureHandlerEventPayload,\n  ForceTouchGestureHandlerEventPayload,\n  LongPressGestureHandlerEventPayload,\n  PanGestureHandlerEventPayload,\n  PinchGestureHandlerEventPayload,\n  RotationGestureHandlerEventPayload,\n  NativeViewGestureHandlerPayload,\n  FlingGestureHandlerEventPayload,\n} from './handlers/GestureHandlerEventPayload';\nexport type { TapGestureHandlerProps } from './handlers/TapGestureHandler';\nexport type { ForceTouchGestureHandlerProps } from './handlers/ForceTouchGestureHandler';\nexport type { ForceTouchGestureChangeEventPayload } from './handlers/gestures/forceTouchGesture';\nexport type { LongPressGestureHandlerProps } from './handlers/LongPressGestureHandler';\nexport type { PanGestureHandlerProps } from './handlers/PanGestureHandler';\nexport type { PanGestureChangeEventPayload } from './handlers/gestures/panGesture';\nexport type { PinchGestureHandlerProps } from './handlers/PinchGestureHandler';\nexport type { PinchGestureChangeEventPayload } from './handlers/gestures/pinchGesture';\nexport type { RotationGestureHandlerProps } from './handlers/RotationGestureHandler';\nexport type { FlingGestureHandlerProps } from './handlers/FlingGestureHandler';\nexport { TapGestureHandler } from './handlers/TapGestureHandler';\nexport { ForceTouchGestureHandler } from './handlers/ForceTouchGestureHandler';\nexport { LongPressGestureHandler } from './handlers/LongPressGestureHandler';\nexport { PanGestureHandler } from './handlers/PanGestureHandler';\nexport { PinchGestureHandler } from './handlers/PinchGestureHandler';\nexport { RotationGestureHandler } from './handlers/RotationGestureHandler';\nexport { FlingGestureHandler } from './handlers/FlingGestureHandler';\nexport { default as createNativeWrapper } from './handlers/createNativeWrapper';\nexport type { NativeViewGestureHandlerProps } from './handlers/NativeViewGestureHandler';\nexport { GestureDetector } from './handlers/gestures/GestureDetector';\nexport { GestureObjects as Gesture } from './handlers/gestures/gestureObjects';\nexport type { TapGestureType as TapGesture } from './handlers/gestures/tapGesture';\nexport type { PanGestureType as PanGesture } from './handlers/gestures/panGesture';\nexport type { FlingGestureType as FlingGesture } from './handlers/gestures/flingGesture';\nexport type { LongPressGestureType as LongPressGesture } from './handlers/gestures/longPressGesture';\nexport type { PinchGestureType as PinchGesture } from './handlers/gestures/pinchGesture';\nexport type { RotationGestureType as RotationGesture } from './handlers/gestures/rotationGesture';\nexport type { ForceTouchGestureType as ForceTouchGesture } from './handlers/gestures/forceTouchGesture';\nexport type { NativeGestureType as NativeGesture } from './handlers/gestures/nativeGesture';\nexport type { ManualGestureType as ManualGesture } from './handlers/gestures/manualGesture';\nexport type { HoverGestureType as HoverGesture } from './handlers/gestures/hoverGesture';\nexport type {\n  ComposedGestureType as ComposedGesture,\n  RaceGestureType as RaceGesture,\n  SimultaneousGestureType as SimultaneousGesture,\n  ExclusiveGestureType as ExclusiveGesture,\n} from './handlers/gestures/gestureComposition';\nexport type { GestureStateManagerType as GestureStateManager } from './handlers/gestures/gestureStateManager';\nexport { NativeViewGestureHandler } from './handlers/NativeViewGestureHandler';\nexport type {\n  RawButtonProps,\n  BaseButtonProps,\n  RectButtonProps,\n  BorderlessButtonProps,\n} from './components/GestureButtonsProps';\nexport {\n  RawButton,\n  BaseButton,\n  RectButton,\n  BorderlessButton,\n  PureNativeButton,\n} from './components/GestureButtons';\nexport type {\n  TouchableHighlightProps,\n  TouchableOpacityProps,\n  TouchableWithoutFeedbackProps,\n} from './components/touchables';\nexport {\n  TouchableHighlight,\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n} from './components/touchables';\nexport {\n  ScrollView,\n  Switch,\n  TextInput,\n  DrawerLayoutAndroid,\n  FlatList,\n  RefreshControl,\n} from './components/GestureComponents';\nexport { Text } from './components/Text';\nexport { HoverEffect } from './handlers/gestures/hoverGesture';\nexport type {\n  // Events\n  GestureHandlerGestureEvent,\n  GestureHandlerStateChangeEvent,\n  // Event payloads\n  GestureHandlerGestureEventNativeEvent,\n  GestureHandlerStateChangeNativeEvent,\n  NativeViewGestureHandlerGestureEvent,\n  NativeViewGestureHandlerStateChangeEvent,\n  TapGestureHandlerGestureEvent,\n  TapGestureHandlerStateChangeEvent,\n  ForceTouchGestureHandlerGestureEvent,\n  ForceTouchGestureHandlerStateChangeEvent,\n  LongPressGestureHandlerGestureEvent,\n  LongPressGestureHandlerStateChangeEvent,\n  PanGestureHandlerGestureEvent,\n  PanGestureHandlerStateChangeEvent,\n  PinchGestureHandlerGestureEvent,\n  PinchGestureHandlerStateChangeEvent,\n  RotationGestureHandlerGestureEvent,\n  RotationGestureHandlerStateChangeEvent,\n  FlingGestureHandlerGestureEvent,\n  FlingGestureHandlerStateChangeEvent,\n  // Handlers props\n  NativeViewGestureHandlerProperties,\n  TapGestureHandlerProperties,\n  LongPressGestureHandlerProperties,\n  PanGestureHandlerProperties,\n  PinchGestureHandlerProperties,\n  RotationGestureHandlerProperties,\n  FlingGestureHandlerProperties,\n  ForceTouchGestureHandlerProperties,\n  // Buttons props\n  RawButtonProperties,\n  BaseButtonProperties,\n  RectButtonProperties,\n  BorderlessButtonProperties,\n} from './handlers/gestureHandlerTypesCompat';\n\nexport type { SwipeableProps } from './components/Swipeable';\nexport { default as Swipeable } from './components/Swipeable';\nexport type {\n  PressableProps,\n  PressableStateCallbackType,\n} from './components/Pressable';\nexport { default as Pressable } from './components/Pressable';\n\nexport type {\n  DrawerLayoutProps,\n  DrawerPosition,\n  DrawerState,\n  DrawerType,\n  DrawerLockMode,\n  DrawerKeyboardDismissMode,\n} from './components/DrawerLayout';\nexport { default as DrawerLayout } from './components/DrawerLayout';\n\nexport {\n  enableExperimentalWebImplementation,\n  enableLegacyWebImplementation,\n} from './EnableNewWebImplementation';\n\ninitialize();\n","import { startListening } from './handlers/gestures/eventReceiver';\nimport RNGestureHandlerModule from './RNGestureHandlerModule';\nimport { isFabric } from './utils';\n\nlet fabricInitialized = false;\n\nexport function initialize() {\n  startListening();\n}\n\n// Since isFabric() may give wrong results before the first render, we call this\n// method during render of GestureHandlerRootView\nexport function maybeInitializeFabric() {\n  if (isFabric() && !fabricInitialized) {\n    RNGestureHandlerModule.install();\n    fabricInitialized = true;\n  }\n}\n","import { GestureType } from './handlers/gestures/gesture';\n\ninterface ReactComponentWithHandlerTag extends React.Component {\n  handlerTag: number;\n}\n\nexport type GestureMountListener = (\n  gesture: GestureType | ReactComponentWithHandlerTag\n) => void;\n\n// eslint-disable-next-line @typescript-eslint/no-extraneous-class\nexport class MountRegistry {\n  private static mountListeners = new Set<GestureMountListener>();\n  private static unmountListeners = new Set<GestureMountListener>();\n\n  static addMountListener(listener: GestureMountListener): () => void {\n    this.mountListeners.add(listener);\n\n    return () => {\n      this.mountListeners.delete(listener);\n    };\n  }\n\n  static addUnmountListener(listener: GestureMountListener): () => void {\n    this.unmountListeners.add(listener);\n\n    return () => {\n      this.unmountListeners.delete(listener);\n    };\n  }\n\n  static gestureHandlerWillMount(handler: React.Component) {\n    this.mountListeners.forEach((listener) =>\n      listener(handler as ReactComponentWithHandlerTag)\n    );\n  }\n\n  static gestureHandlerWillUnmount(handler: React.Component) {\n    this.unmountListeners.forEach((listener) =>\n      listener(handler as ReactComponentWithHandlerTag)\n    );\n  }\n\n  static gestureWillMount(gesture: GestureType) {\n    this.mountListeners.forEach((listener) => listener(gesture));\n  }\n\n  static gestureWillUnmount(gesture: GestureType) {\n    this.unmountListeners.forEach((listener) => listener(gesture));\n  }\n}\n","import React from 'react';\n\nexport function toArray<T>(object: T | T[]): T[] {\n  if (!Array.isArray(object)) {\n    return [object];\n  }\n\n  return object;\n}\n\nexport type withPrevAndCurrentMapFn<T, Transformed> = (\n  previous: Transformed | null,\n  current: T\n) => Transformed;\nexport function withPrevAndCurrent<T, Transformed>(\n  array: T[],\n  mapFn: withPrevAndCurrentMapFn<T, Transformed>\n): Transformed[] {\n  const previousArr: (null | Transformed)[] = [null];\n  const currentArr = [...array];\n  const transformedArr: Transformed[] = [];\n  currentArr.forEach((current, i) => {\n    // This type cast is fine and solves problem mentioned in https://github.com/software-mansion/react-native-gesture-handler/pull/2867 (namely that `previous` can be undefined).\n    // Unfortunately, linter on our CI does not allow this type of casting as it is unnecessary. To bypass that we use eslint-disable.\n    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n    const previous = previousArr[i] as Transformed | null;\n    const transformed = mapFn(previous, current);\n    previousArr.push(transformed);\n    transformedArr.push(transformed);\n  });\n  return transformedArr;\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function hasProperty(object: object, key: string) {\n  return Object.prototype.hasOwnProperty.call(object, key);\n}\n\nexport function isTestEnv(): boolean {\n  // @ts-ignore Do not use `@types/node` because it will prioritise Node types over RN types which breaks the types (ex. setTimeout) in React Native projects.\n  return hasProperty(global, 'process') && process.env.NODE_ENV === 'test';\n}\n\nexport function tagMessage(msg: string) {\n  return `[react-native-gesture-handler] ${msg}`;\n}\n\n// Helper method to check whether Fabric is enabled, however global.nativeFabricUIManager\n// may not be initialized before the first render\nexport function isFabric(): boolean {\n  // @ts-expect-error nativeFabricUIManager is not yet included in the RN types\n  return !!global?.nativeFabricUIManager;\n}\n\nexport function isReact19() {\n  return React.version.startsWith('19.');\n}\n\nexport function isRemoteDebuggingEnabled(): boolean {\n  // react-native-reanimated checks if in remote debugging in the same way\n  // @ts-ignore global is available but node types are not included\n  const localGlobal = global as any;\n  return (\n    (!localGlobal.nativeCallSyncHook || !!localGlobal.__REMOTEDEV__) &&\n    !localGlobal.RN$Bridgeless\n  );\n}\n\n/**\n * Recursively compares two objects for deep equality.\n *\n * **Note:** This function does not support cyclic references.\n *\n * @param obj1 - The first object to compare.\n * @param obj2 - The second object to compare.\n * @returns `true` if the objects are deeply equal, `false` otherwise.\n */\nexport function deepEqual(obj1: any, obj2: any) {\n  if (obj1 === obj2) {\n    return true;\n  }\n\n  if (\n    typeof obj1 !== 'object' ||\n    typeof obj2 !== 'object' ||\n    obj1 === null ||\n    obj2 === null\n  ) {\n    return false;\n  }\n\n  const keys1 = Object.keys(obj1);\n  const keys2 = Object.keys(obj2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    if (!keys2.includes(key) || !deepEqual(obj1[key], obj2[key])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport const INT32_MAX = 2 ** 31 - 1;\n","// This component is based on RN's DrawerLayoutAndroid API\n//\n// It perhaps deserves to be put in a separate repo, but since it relies on\n// react-native-gesture-handler library which isn't very popular at the moment I\n// decided to keep it here for the time being. It will allow us to move faster\n// and fix issues that may arise in gesture handler library that could be found\n// when using the drawer component\n\nimport * as React from 'react';\nimport { Component } from 'react';\nimport invariant from 'invariant';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  Keyboard,\n  StatusBar,\n  I18nManager,\n  StatusBarAnimation,\n  StyleProp,\n  ViewStyle,\n  LayoutChangeEvent,\n  NativeSyntheticEvent,\n} from 'react-native';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n  UserSelect,\n  ActiveCursor,\n  MouseButton,\n} from '../handlers/gestureHandlerCommon';\nimport { PanGestureHandler } from '../handlers/PanGestureHandler';\nimport type {\n  PanGestureHandlerEventPayload,\n  TapGestureHandlerEventPayload,\n} from '../handlers/GestureHandlerEventPayload';\nimport { TapGestureHandler } from '../handlers/TapGestureHandler';\nimport { State } from '../State';\n\nconst DRAG_TOSS = 0.05;\n\nconst IDLE: DrawerState = 'Idle';\nconst DRAGGING: DrawerState = 'Dragging';\nconst SETTLING: DrawerState = 'Settling';\n\n/**\n * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n */\nexport type DrawerPosition = 'left' | 'right';\n\n/**\n * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n */\nexport type DrawerState = 'Idle' | 'Dragging' | 'Settling';\n\n/**\n * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n */\nexport type DrawerType = 'front' | 'back' | 'slide';\n\n/**\n * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n */\nexport type DrawerLockMode = 'unlocked' | 'locked-closed' | 'locked-open';\n\n/**\n * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n */\nexport type DrawerKeyboardDismissMode = 'none' | 'on-drag';\n\n// Animated.AnimatedInterpolation has been converted to a generic type\n// in @types/react-native 0.70. This way we can maintain compatibility\n// with all versions of @types/react-native`\ntype AnimatedInterpolation = ReturnType<Animated.Value['interpolate']>;\n\n/**\n * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n */\nexport interface DrawerLayoutProps {\n  /**\n   * This attribute is present in the standard implementation already and is one\n   * of the required params. Gesture handler version of DrawerLayout make it\n   * possible for the function passed as `renderNavigationView` to take an\n   * Animated value as a parameter that indicates the progress of drawer\n   * opening/closing animation (progress value is 0 when closed and 1 when\n   * opened). This can be used by the drawer component to animated its children\n   * while the drawer is opening or closing.\n   */\n  renderNavigationView: (\n    progressAnimatedValue: Animated.Value\n  ) => React.ReactNode;\n\n  drawerPosition?: DrawerPosition;\n\n  drawerWidth?: number;\n\n  drawerBackgroundColor?: string;\n\n  drawerLockMode?: DrawerLockMode;\n\n  keyboardDismissMode?: DrawerKeyboardDismissMode;\n\n  /**\n   * Called when the drawer is closed.\n   */\n  onDrawerClose?: () => void;\n\n  /**\n   * Called when the drawer is opened.\n   */\n  onDrawerOpen?: () => void;\n\n  /**\n   * Called when the status of the drawer changes.\n   */\n  onDrawerStateChanged?: (\n    newState: DrawerState,\n    drawerWillShow: boolean\n  ) => void;\n  useNativeAnimations?: boolean;\n\n  drawerType?: DrawerType;\n\n  /**\n   * Defines how far from the edge of the content view the gesture should\n   * activate.\n   */\n  edgeWidth?: number;\n\n  minSwipeDistance?: number;\n\n  /**\n   * When set to true Drawer component will use\n   * {@link https://reactnative.dev/docs/statusbar StatusBar} API to hide the OS\n   * status bar whenever the drawer is pulled or when its in an \"open\" state.\n   */\n  hideStatusBar?: boolean;\n\n  /**\n   * @default 'slide'\n   *\n   * Can be used when hideStatusBar is set to true and will select the animation\n   * used for hiding/showing the status bar. See\n   * {@link https://reactnative.dev/docs/statusbar StatusBar} documentation for\n   * more details\n   */\n  statusBarAnimation?: StatusBarAnimation;\n\n  /**\n   * @default black\n   *\n   * Color of a semi-transparent overlay to be displayed on top of the content\n   * view when drawer gets open. A solid color should be used as the opacity is\n   * added by the Drawer itself and the opacity of the overlay is animated (from\n   * 0% to 70%).\n   */\n  overlayColor?: string;\n\n  contentContainerStyle?: StyleProp<ViewStyle>;\n\n  drawerContainerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * Enables two-finger gestures on supported devices, for example iPads with\n   * trackpads. If not enabled the gesture will require click + drag, with\n   * `enableTrackpadTwoFingerGesture` swiping with two fingers will also trigger\n   * the gesture.\n   */\n  enableTrackpadTwoFingerGesture?: boolean;\n\n  onDrawerSlide?: (position: number) => void;\n\n  onGestureRef?: (ref: PanGestureHandler) => void;\n\n  // Implicit `children` prop has been removed in @types/react^18.0.0\n  children?:\n    | React.ReactNode\n    | ((openValue?: AnimatedInterpolation) => React.ReactNode);\n\n  /**\n   * @default 'none'\n   * Defines which userSelect property should be used.\n   * Values: 'none'|'text'|'auto'\n   */\n  userSelect?: UserSelect;\n\n  /**\n   * @default 'auto'\n   * Defines which cursor property should be used when gesture activates.\n   * Values: see CSS cursor values\n   */\n  activeCursor?: ActiveCursor;\n\n  /**\n   * @default 'MouseButton.LEFT'\n   * Allows to choose which mouse button should underlying pan handler react to.\n   */\n  mouseButton?: MouseButton;\n\n  /**\n   * @default 'false if MouseButton.RIGHT is specified'\n   * Allows to enable/disable context menu.\n   */\n  enableContextMenu?: boolean;\n}\n\n/**\n * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n */\nexport type DrawerLayoutState = {\n  dragX: Animated.Value;\n  touchX: Animated.Value;\n  drawerTranslation: Animated.Value;\n  containerWidth: number;\n  drawerState: DrawerState;\n  drawerOpened: boolean;\n};\n\n/**\n * @deprecated DrawerLayout is deprecated. Use Reanimated version of DrawerLayout instead.\n */\nexport type DrawerMovementOption = {\n  velocity?: number;\n  speed?: number;\n};\n\n/**\n * @deprecated use Reanimated version of DrawerLayout instead\n */\nexport default class DrawerLayout extends Component<\n  DrawerLayoutProps,\n  DrawerLayoutState\n> {\n  static defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked',\n    enableTrackpadTwoFingerGesture: false,\n  };\n\n  constructor(props: DrawerLayoutProps) {\n    super(props);\n\n    const dragX = new Animated.Value(0);\n    const touchX = new Animated.Value(0);\n    const drawerTranslation = new Animated.Value(0);\n\n    this.state = {\n      dragX,\n      touchX,\n      drawerTranslation,\n      containerWidth: 0,\n      drawerState: IDLE,\n      drawerOpened: false,\n    };\n\n    this.updateAnimatedEvent(props, this.state);\n  }\n\n  shouldComponentUpdate(props: DrawerLayoutProps, state: DrawerLayoutState) {\n    if (\n      this.props.drawerPosition !== props.drawerPosition ||\n      this.props.drawerWidth !== props.drawerWidth ||\n      this.props.drawerType !== props.drawerType ||\n      this.state.containerWidth !== state.containerWidth\n    ) {\n      this.updateAnimatedEvent(props, state);\n    }\n\n    return true;\n  }\n\n  private openValue?: AnimatedInterpolation;\n  private onGestureEvent?: (\n    event: GestureEvent<PanGestureHandlerEventPayload>\n  ) => void;\n  private accessibilityIsModalView = React.createRef<View>();\n  private pointerEventsView = React.createRef<View>();\n  private panGestureHandler = React.createRef<PanGestureHandler | null>();\n  private drawerShown = false;\n\n  static positions = {\n    Left: 'left',\n    Right: 'right',\n  };\n\n  private updateAnimatedEvent = (\n    props: DrawerLayoutProps,\n    state: DrawerLayoutState\n  ) => {\n    // Event definition is based on\n    const { drawerPosition, drawerWidth, drawerType } = props;\n    const {\n      dragX: dragXValue,\n      touchX: touchXValue,\n      drawerTranslation,\n      containerWidth,\n    } = state;\n\n    let dragX = dragXValue;\n    let touchX = touchXValue;\n\n    if (drawerPosition !== 'left') {\n      // Most of the code is written in a way to handle left-side drawer. In\n      // order to handle right-side drawer the only thing we need to do is to\n      // reverse events coming from gesture handler in a way they emulate\n      // left-side drawer gestures. E.g. dragX is simply -dragX, and touchX is\n      // calulcated by subtracing real touchX from the width of the container\n      // (such that when touch happens at the right edge the value is simply 0)\n      dragX = Animated.multiply(\n        new Animated.Value(-1),\n        dragXValue\n      ) as Animated.Value; // TODO(TS): (for all \"as\" in this file) make sure we can map this\n      touchX = Animated.add(\n        new Animated.Value(containerWidth),\n        Animated.multiply(new Animated.Value(-1), touchXValue)\n      ) as Animated.Value; // TODO(TS): make sure we can map this;\n      touchXValue.setValue(containerWidth);\n    } else {\n      touchXValue.setValue(0);\n    }\n\n    // While closing the drawer when user starts gesture outside of its area (in greyed\n    // out part of the window), we want the drawer to follow only once finger reaches the\n    // edge of the drawer.\n    // E.g. on the diagram below drawer is illustrate by X signs and the greyed out area by\n    // dots. The touch gesture starts at '*' and moves left, touch path is indicated by\n    // an arrow pointing left\n    // 1) +---------------+ 2) +---------------+ 3) +---------------+ 4) +---------------+\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|.<-*..|    |XXXXXXXX|<--*..|    |XXXXX|<-----*..|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXXXXX|......|    |XXXXX|.........|\n    //    +---------------+    +---------------+    +---------------+    +---------------+\n    //\n    // For the above to work properly we define animated value that will keep\n    // start position of the gesture. Then we use that value to calculate how\n    // much we need to subtract from the dragX. If the gesture started on the\n    // greyed out area we take the distance from the edge of the drawer to the\n    // start position. Otherwise we don't subtract at all and the drawer be\n    // pulled back as soon as you start the pan.\n    //\n    // This is used only when drawerType is \"front\"\n    //\n    let translationX = dragX;\n    if (drawerType === 'front') {\n      const startPositionX = Animated.add(\n        touchX,\n        Animated.multiply(new Animated.Value(-1), dragX)\n      );\n\n      const dragOffsetFromOnStartPosition = startPositionX.interpolate({\n        inputRange: [drawerWidth! - 1, drawerWidth!, drawerWidth! + 1],\n        outputRange: [0, 0, 1],\n      });\n      translationX = Animated.add(\n        dragX,\n        dragOffsetFromOnStartPosition\n      ) as Animated.Value; // TODO: as above\n    }\n\n    this.openValue = Animated.add(translationX, drawerTranslation).interpolate({\n      inputRange: [0, drawerWidth!],\n      outputRange: [0, 1],\n      extrapolate: 'clamp',\n    });\n\n    const gestureOptions: {\n      useNativeDriver: boolean;\n      // TODO: make sure it is correct\n      listener?: (\n        ev: NativeSyntheticEvent<PanGestureHandlerEventPayload>\n      ) => void;\n    } = {\n      useNativeDriver: props.useNativeAnimations!,\n    };\n\n    if (this.props.onDrawerSlide) {\n      gestureOptions.listener = (ev) => {\n        const translationX = Math.floor(Math.abs(ev.nativeEvent.translationX));\n        const position = translationX / this.state.containerWidth;\n\n        this.props.onDrawerSlide?.(position);\n      };\n    }\n\n    this.onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragXValue, x: touchXValue } }],\n      gestureOptions\n    );\n  };\n\n  private handleContainerLayout = ({ nativeEvent }: LayoutChangeEvent) => {\n    this.setState({ containerWidth: nativeEvent.layout.width });\n  };\n\n  private emitStateChanged = (\n    newState: DrawerState,\n    drawerWillShow: boolean\n  ) => {\n    this.props.onDrawerStateChanged?.(newState, drawerWillShow);\n  };\n\n  private openingHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<PanGestureHandlerEventPayload>) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this.handleRelease({ nativeEvent });\n    } else if (nativeEvent.state === State.ACTIVE) {\n      this.emitStateChanged(DRAGGING, false);\n      this.setState({ drawerState: DRAGGING });\n      if (this.props.keyboardDismissMode === 'on-drag') {\n        Keyboard.dismiss();\n      }\n      if (this.props.hideStatusBar) {\n        StatusBar.setHidden(true, this.props.statusBarAnimation || 'slide');\n      }\n    }\n  };\n\n  private onTapHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<TapGestureHandlerEventPayload>) => {\n    if (\n      this.drawerShown &&\n      nativeEvent.oldState === State.ACTIVE &&\n      this.props.drawerLockMode !== 'locked-open'\n    ) {\n      this.closeDrawer();\n    }\n  };\n\n  private handleRelease = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<PanGestureHandlerEventPayload>) => {\n    const { drawerWidth, drawerPosition, drawerType } = this.props;\n    const { containerWidth } = this.state;\n    let { translationX: dragX, velocityX, x: touchX } = nativeEvent;\n\n    if (drawerPosition !== 'left') {\n      // See description in _updateAnimatedEvent about why events are flipped\n      // for right-side drawer\n      dragX = -dragX;\n      touchX = containerWidth - touchX;\n      velocityX = -velocityX;\n    }\n\n    const gestureStartX = touchX - dragX;\n    let dragOffsetBasedOnStart = 0;\n\n    if (drawerType === 'front') {\n      dragOffsetBasedOnStart =\n        gestureStartX > drawerWidth! ? gestureStartX - drawerWidth! : 0;\n    }\n\n    const startOffsetX =\n      dragX + dragOffsetBasedOnStart + (this.drawerShown ? drawerWidth! : 0);\n    const projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n\n    const shouldOpen = projOffsetX > drawerWidth! / 2;\n\n    if (shouldOpen) {\n      this.animateDrawer(startOffsetX, drawerWidth!, velocityX);\n    } else {\n      this.animateDrawer(startOffsetX, 0, velocityX);\n    }\n  };\n\n  private updateShowing = (showing: boolean) => {\n    this.drawerShown = showing;\n    this.accessibilityIsModalView.current?.setNativeProps({\n      accessibilityViewIsModal: showing,\n    });\n    this.pointerEventsView.current?.setNativeProps({\n      pointerEvents: showing ? 'auto' : 'none',\n    });\n    const { drawerPosition, minSwipeDistance, edgeWidth } = this.props;\n    const fromLeft = drawerPosition === 'left';\n    // gestureOrientation is 1 if the expected gesture is from left to right and\n    // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n    // to right gesture, thus orientation will be 1.\n    const gestureOrientation =\n      (fromLeft ? 1 : -1) * (this.drawerShown ? -1 : 1);\n    // When drawer is closed we want the hitSlop to be horizontally shorter than\n    // the container size by the value of SLOP. This will make it only activate\n    // when gesture happens not further than SLOP away from the edge\n    const hitSlop = fromLeft\n      ? { left: 0, width: showing ? undefined : edgeWidth }\n      : { right: 0, width: showing ? undefined : edgeWidth };\n    // @ts-ignore internal API, maybe could be fixed in handler types\n    this.panGestureHandler.current?.setNativeProps({\n      hitSlop,\n      activeOffsetX: gestureOrientation * minSwipeDistance!,\n    });\n  };\n\n  private animateDrawer = (\n    fromValue: number | null | undefined,\n    toValue: number,\n    velocity: number,\n    speed?: number\n  ) => {\n    this.state.dragX.setValue(0);\n    this.state.touchX.setValue(\n      this.props.drawerPosition === 'left' ? 0 : this.state.containerWidth\n    );\n\n    if (fromValue != null) {\n      let nextFramePosition = fromValue;\n      if (this.props.useNativeAnimations) {\n        // When using native driver, we predict the next position of the\n        // animation because it takes one frame of a roundtrip to pass RELEASE\n        // event from native driver to JS before we can start animating. Without\n        // it, it is more noticable that the frame is dropped.\n        if (fromValue < toValue && velocity > 0) {\n          nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n        } else if (fromValue > toValue && velocity < 0) {\n          nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n        }\n      }\n      this.state.drawerTranslation.setValue(nextFramePosition);\n    }\n\n    const willShow = toValue !== 0;\n    this.updateShowing(willShow);\n    this.emitStateChanged(SETTLING, willShow);\n    this.setState({ drawerState: SETTLING });\n    if (this.props.hideStatusBar) {\n      StatusBar.setHidden(willShow, this.props.statusBarAnimation || 'slide');\n    }\n    Animated.spring(this.state.drawerTranslation, {\n      velocity,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations!,\n      speed: speed ?? undefined,\n    }).start(({ finished }) => {\n      if (finished) {\n        this.emitStateChanged(IDLE, willShow);\n        this.setState({ drawerOpened: willShow });\n        if (this.state.drawerState !== DRAGGING) {\n          // It's possilbe that user started drag while the drawer\n          // was settling, don't override state in this case\n          this.setState({ drawerState: IDLE });\n        }\n        if (willShow) {\n          this.props.onDrawerOpen?.();\n        } else {\n          this.props.onDrawerClose?.();\n        }\n      }\n    });\n  };\n\n  openDrawer = (options: DrawerMovementOption = {}) => {\n    this.animateDrawer(\n      // TODO: decide if it should be null or undefined is the proper value\n      undefined,\n      this.props.drawerWidth!,\n      options.velocity ? options.velocity : 0,\n      options.speed\n    );\n\n    // We need to force the update, otherwise the overlay is not rerendered and\n    // it would not be clickable\n    this.forceUpdate();\n  };\n\n  closeDrawer = (options: DrawerMovementOption = {}) => {\n    // TODO: decide if it should be null or undefined is the proper value\n    this.animateDrawer(\n      undefined,\n      0,\n      options.velocity ? options.velocity : 0,\n      options.speed\n    );\n\n    // We need to force the update, otherwise the overlay is not rerendered and\n    // it would be still clickable\n    this.forceUpdate();\n  };\n\n  private renderOverlay = () => {\n    /* Overlay styles */\n    invariant(this.openValue, 'should be set');\n    let overlayOpacity;\n\n    if (this.state.drawerState !== IDLE) {\n      overlayOpacity = this.openValue;\n    } else {\n      overlayOpacity = this.state.drawerOpened ? 1 : 0;\n    }\n\n    const dynamicOverlayStyles = {\n      opacity: overlayOpacity,\n      backgroundColor: this.props.overlayColor,\n    };\n\n    return (\n      <TapGestureHandler onHandlerStateChange={this.onTapHandlerStateChange}>\n        <Animated.View\n          pointerEvents={this.drawerShown ? 'auto' : 'none'}\n          ref={this.pointerEventsView}\n          style={[styles.overlay, dynamicOverlayStyles]}\n        />\n      </TapGestureHandler>\n    );\n  };\n\n  private renderDrawer = () => {\n    const {\n      drawerBackgroundColor,\n      drawerWidth,\n      drawerPosition,\n      drawerType,\n      drawerContainerStyle,\n      contentContainerStyle,\n    } = this.props;\n\n    const fromLeft = drawerPosition === 'left';\n    const drawerSlide = drawerType !== 'back';\n    const containerSlide = drawerType !== 'front';\n\n    // We rely on row and row-reverse flex directions to position the drawer\n    // properly. Apparently for RTL these are flipped which requires us to use\n    // the opposite setting for the drawer to appear from left or right\n    // according to the drawerPosition prop\n    const reverseContentDirection = I18nManager.isRTL ? fromLeft : !fromLeft;\n\n    const dynamicDrawerStyles = {\n      backgroundColor: drawerBackgroundColor,\n      width: drawerWidth,\n    };\n    const openValue = this.openValue;\n    invariant(openValue, 'should be set');\n\n    let containerStyles;\n    if (containerSlide) {\n      const containerTranslateX = openValue.interpolate({\n        inputRange: [0, 1],\n        outputRange: fromLeft ? [0, drawerWidth!] : [0, -drawerWidth!],\n        extrapolate: 'clamp',\n      });\n      containerStyles = {\n        transform: [{ translateX: containerTranslateX }],\n      };\n    }\n\n    let drawerTranslateX: number | AnimatedInterpolation = 0;\n    if (drawerSlide) {\n      const closedDrawerOffset = fromLeft ? -drawerWidth! : drawerWidth!;\n      if (this.state.drawerState !== IDLE) {\n        drawerTranslateX = openValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [closedDrawerOffset, 0],\n          extrapolate: 'clamp',\n        });\n      } else {\n        drawerTranslateX = this.state.drawerOpened ? 0 : closedDrawerOffset;\n      }\n    }\n    const drawerStyles: {\n      transform: { translateX: number | AnimatedInterpolation }[];\n      flexDirection: 'row-reverse' | 'row';\n    } = {\n      transform: [{ translateX: drawerTranslateX }],\n      flexDirection: reverseContentDirection ? 'row-reverse' : 'row',\n    };\n\n    return (\n      <Animated.View style={styles.main} onLayout={this.handleContainerLayout}>\n        <Animated.View\n          style={[\n            drawerType === 'front'\n              ? styles.containerOnBack\n              : styles.containerInFront,\n            containerStyles,\n            contentContainerStyle,\n          ]}\n          importantForAccessibility={\n            this.drawerShown ? 'no-hide-descendants' : 'yes'\n          }>\n          {typeof this.props.children === 'function'\n            ? this.props.children(this.openValue)\n            : this.props.children}\n          {this.renderOverlay()}\n        </Animated.View>\n        <Animated.View\n          pointerEvents=\"box-none\"\n          ref={this.accessibilityIsModalView}\n          accessibilityViewIsModal={this.drawerShown}\n          style={[styles.drawerContainer, drawerStyles, drawerContainerStyle]}>\n          <View style={dynamicDrawerStyles}>\n            {this.props.renderNavigationView(this.openValue as Animated.Value)}\n          </View>\n        </Animated.View>\n      </Animated.View>\n    );\n  };\n\n  private setPanGestureRef = (ref: PanGestureHandler) => {\n    // TODO(TS): make sure it is OK taken from\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31065#issuecomment-596081842\n    (\n      this.panGestureHandler as React.MutableRefObject<PanGestureHandler>\n    ).current = ref;\n    this.props.onGestureRef?.(ref);\n  };\n\n  render() {\n    const { drawerPosition, drawerLockMode, edgeWidth, minSwipeDistance } =\n      this.props;\n\n    const fromLeft = drawerPosition === 'left';\n\n    // gestureOrientation is 1 if the expected gesture is from left to right and\n    // -1 otherwise e.g. when drawer is on the left and is closed we expect left\n    // to right gesture, thus orientation will be 1.\n    const gestureOrientation =\n      (fromLeft ? 1 : -1) * (this.drawerShown ? -1 : 1);\n\n    // When drawer is closed we want the hitSlop to be horizontally shorter than\n    // the container size by the value of SLOP. This will make it only activate\n    // when gesture happens not further than SLOP away from the edge\n    const hitSlop = fromLeft\n      ? { left: 0, width: this.drawerShown ? undefined : edgeWidth }\n      : { right: 0, width: this.drawerShown ? undefined : edgeWidth };\n\n    return (\n      <PanGestureHandler\n        // @ts-ignore could be fixed in handler types\n        userSelect={this.props.userSelect}\n        activeCursor={this.props.activeCursor}\n        mouseButton={this.props.mouseButton}\n        enableContextMenu={this.props.enableContextMenu}\n        ref={this.setPanGestureRef}\n        hitSlop={hitSlop}\n        activeOffsetX={gestureOrientation * minSwipeDistance!}\n        failOffsetY={[-15, 15]}\n        onGestureEvent={this.onGestureEvent}\n        onHandlerStateChange={this.openingHandlerStateChange}\n        enableTrackpadTwoFingerGesture={\n          this.props.enableTrackpadTwoFingerGesture\n        }\n        enabled={\n          drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open'\n        }>\n        {this.renderDrawer()}\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  drawerContainer: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 1001,\n    flexDirection: 'row',\n  },\n  containerInFront: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 1002,\n  },\n  containerOnBack: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  main: {\n    flex: 1,\n    zIndex: 0,\n    overflow: 'hidden',\n  },\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 1000,\n  },\n});\n","import * as React from 'react';\nimport { Animated, Platform, processColor, StyleSheet } from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\nimport GestureHandlerButton from './GestureHandlerButton';\nimport { State } from '../State';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../handlers/gestureHandlerCommon';\nimport type { NativeViewGestureHandlerPayload } from '../handlers/GestureHandlerEventPayload';\nimport type {\n  BaseButtonWithRefProps,\n  BaseButtonProps,\n  RectButtonWithRefProps,\n  RectButtonProps,\n  BorderlessButtonWithRefProps,\n  BorderlessButtonProps,\n} from './GestureButtonsProps';\nimport { isFabric } from '../utils';\n\nexport const RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false,\n});\n\nlet IS_FABRIC: null | boolean = null;\n\nclass InnerBaseButton extends React.Component<BaseButtonWithRefProps> {\n  static defaultProps = {\n    delayLongPress: 600,\n  };\n\n  private lastActive: boolean;\n  private longPressTimeout: ReturnType<typeof setTimeout> | undefined;\n  private longPressDetected: boolean;\n\n  constructor(props: BaseButtonWithRefProps) {\n    super(props);\n    this.lastActive = false;\n    this.longPressDetected = false;\n  }\n\n  private handleEvent = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this.lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      !this.longPressDetected &&\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this.lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(pointerInside);\n    }\n\n    if (\n      !this.lastActive &&\n      // NativeViewGestureHandler sends different events based on platform\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      pointerInside\n    ) {\n      this.longPressDetected = false;\n      if (this.props.onLongPress) {\n        this.longPressTimeout = setTimeout(\n          this.onLongPress,\n          this.props.delayLongPress\n        );\n      }\n    } else if (\n      // Cancel longpress timeout if it's set and the finger moved out of the view\n      state === State.ACTIVE &&\n      !pointerInside &&\n      this.longPressTimeout !== undefined\n    ) {\n      clearTimeout(this.longPressTimeout);\n      this.longPressTimeout = undefined;\n    } else if (\n      // Cancel longpress timeout if it's set and the gesture has finished\n      this.longPressTimeout !== undefined &&\n      (state === State.END ||\n        state === State.CANCELLED ||\n        state === State.FAILED)\n    ) {\n      clearTimeout(this.longPressTimeout);\n      this.longPressTimeout = undefined;\n    }\n\n    this.lastActive = active;\n  };\n\n  private onLongPress = () => {\n    this.longPressDetected = true;\n    this.props.onLongPress?.();\n  };\n\n  // Normally, the parent would execute it's handler first, then forward the\n  // event to listeners. However, here our handler is virtually only forwarding\n  // events to listeners, so we reverse the order to keep the proper order of\n  // the callbacks (from \"raw\" ones to \"processed\").\n  private onHandlerStateChange = (\n    e: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>\n  ) => {\n    this.props.onHandlerStateChange?.(e);\n    this.handleEvent(e);\n  };\n\n  private onGestureEvent = (\n    e: GestureEvent<NativeViewGestureHandlerPayload>\n  ) => {\n    this.props.onGestureEvent?.(e);\n    this.handleEvent(\n      e as HandlerStateChangeEvent<NativeViewGestureHandlerPayload>\n    ); // TODO: maybe it is not correct\n  };\n\n  render() {\n    const { rippleColor: unprocessedRippleColor, style, ...rest } = this.props;\n\n    if (IS_FABRIC === null) {\n      IS_FABRIC = isFabric();\n    }\n\n    const rippleColor = IS_FABRIC\n      ? unprocessedRippleColor\n      : processColor(unprocessedRippleColor ?? undefined);\n\n    return (\n      <RawButton\n        ref={this.props.innerRef}\n        rippleColor={rippleColor}\n        style={[style, Platform.OS === 'ios' && { cursor: undefined }]}\n        {...rest}\n        onGestureEvent={this.onGestureEvent}\n        onHandlerStateChange={this.onHandlerStateChange}\n      />\n    );\n  }\n}\n\nconst AnimatedInnerBaseButton =\n  Animated.createAnimatedComponent<typeof InnerBaseButton>(InnerBaseButton);\n\nexport const BaseButton = React.forwardRef<\n  React.ComponentType,\n  Omit<BaseButtonProps, 'innerRef'>\n>((props, ref) => <InnerBaseButton innerRef={ref} {...props} />);\n\nconst AnimatedBaseButton = React.forwardRef<\n  React.ComponentType,\n  BaseButtonWithRefProps\n>((props, ref) => <AnimatedInnerBaseButton innerRef={ref} {...props} />);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nclass InnerRectButton extends React.Component<RectButtonWithRefProps> {\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  private opacity: Animated.Value;\n\n  constructor(props: RectButtonWithRefProps) {\n    super(props);\n    this.opacity = new Animated.Value(0);\n  }\n\n  private onActiveStateChange = (active: boolean) => {\n    if (Platform.OS !== 'android') {\n      this.opacity.setValue(active ? this.props.activeOpacity! : 0);\n    }\n\n    this.props.onActiveStateChange?.(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    const resolvedStyle = StyleSheet.flatten(style ?? {});\n\n    return (\n      <BaseButton\n        {...rest}\n        ref={this.props.innerRef}\n        style={resolvedStyle}\n        onActiveStateChange={this.onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            {\n              opacity: this.opacity,\n              backgroundColor: this.props.underlayColor,\n              borderRadius: resolvedStyle.borderRadius,\n              borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n              borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n              borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n              borderBottomRightRadius: resolvedStyle.borderBottomRightRadius,\n            },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nexport const RectButton = React.forwardRef<\n  React.ComponentType,\n  Omit<RectButtonProps, 'innerRef'>\n>((props, ref) => <InnerRectButton innerRef={ref} {...props} />);\n\nclass InnerBorderlessButton extends React.Component<BorderlessButtonWithRefProps> {\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  private opacity: Animated.Value;\n\n  constructor(props: BorderlessButtonWithRefProps) {\n    super(props);\n    this.opacity = new Animated.Value(1);\n  }\n\n  private onActiveStateChange = (active: boolean) => {\n    if (Platform.OS !== 'android') {\n      this.opacity.setValue(active ? this.props.activeOpacity! : 1);\n    }\n\n    this.props.onActiveStateChange?.(active);\n  };\n\n  render() {\n    const { children, style, innerRef, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        innerRef={innerRef}\n        onActiveStateChange={this.onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this.opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\nexport const BorderlessButton = React.forwardRef<\n  React.ComponentType,\n  Omit<BorderlessButtonProps, 'innerRef'>\n>((props, ref) => <InnerBorderlessButton innerRef={ref} {...props} />);\n\nexport { default as PureNativeButton } from './GestureHandlerButton';\n","import * as React from 'react';\nimport {\n  PropsWithChildren,\n  ForwardedRef,\n  RefAttributes,\n  ReactElement,\n} from 'react';\nimport {\n  ScrollView as RNScrollView,\n  ScrollViewProps as RNScrollViewProps,\n  Switch as RNSwitch,\n  SwitchProps as RNSwitchProps,\n  TextInput as RNTextInput,\n  TextInputProps as RNTextInputProps,\n  DrawerLayoutAndroid as RNDrawerLayoutAndroid,\n  DrawerLayoutAndroidProps as RNDrawerLayoutAndroidProps,\n  FlatList as RNFlatList,\n  FlatListProps as RNFlatListProps,\n  RefreshControl as RNRefreshControl,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\n\nimport {\n  NativeViewGestureHandlerProps,\n  nativeViewProps,\n} from '../handlers/NativeViewGestureHandler';\n\nimport { toArray } from '../utils';\n\nexport const RefreshControl = createNativeWrapper(RNRefreshControl, {\n  disallowInterruption: true,\n  shouldCancelWhenOutside: false,\n});\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type RefreshControl = typeof RefreshControl & RNRefreshControl;\n\nconst GHScrollView = createNativeWrapper<PropsWithChildren<RNScrollViewProps>>(\n  RNScrollView,\n  {\n    disallowInterruption: true,\n    shouldCancelWhenOutside: false,\n  }\n);\nexport const ScrollView = React.forwardRef<\n  RNScrollView,\n  RNScrollViewProps & NativeViewGestureHandlerProps\n>((props, ref) => {\n  const refreshControlGestureRef = React.useRef<RefreshControl>(null);\n  const { refreshControl, waitFor, ...rest } = props;\n\n  return (\n    <GHScrollView\n      {...rest}\n      // @ts-ignore `ref` exists on `GHScrollView`\n      ref={ref}\n      waitFor={[...toArray(waitFor ?? []), refreshControlGestureRef]}\n      // @ts-ignore we don't pass `refreshing` prop as we only want to override the ref\n      refreshControl={\n        refreshControl\n          ? React.cloneElement(refreshControl, {\n              // @ts-ignore for reasons unknown to me, `ref` doesn't exist on the type inferred by TS\n              ref: refreshControlGestureRef,\n            })\n          : undefined\n      }\n    />\n  );\n});\n// Backward type compatibility with https://github.com/software-mansion/react-native-gesture-handler/blob/db78d3ca7d48e8ba57482d3fe9b0a15aa79d9932/react-native-gesture-handler.d.ts#L440-L457\n// include methods of wrapped components by creating an intersection type with the RN component instead of duplicating them.\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type ScrollView = typeof GHScrollView & RNScrollView;\n\nexport const Switch = createNativeWrapper<RNSwitchProps>(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type Switch = typeof Switch & RNSwitch;\n\nexport const TextInput = createNativeWrapper<RNTextInputProps>(RNTextInput);\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type TextInput = typeof TextInput & RNTextInput;\n\nexport const DrawerLayoutAndroid = createNativeWrapper<\n  PropsWithChildren<RNDrawerLayoutAndroidProps>\n>(RNDrawerLayoutAndroid, { disallowInterruption: true });\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type DrawerLayoutAndroid = typeof DrawerLayoutAndroid &\n  RNDrawerLayoutAndroid;\n\nexport const FlatList = React.forwardRef((props, ref) => {\n  const refreshControlGestureRef = React.useRef<RefreshControl>(null);\n\n  const { waitFor, refreshControl, ...rest } = props;\n\n  const flatListProps = {};\n  const scrollViewProps = {};\n  for (const [propName, value] of Object.entries(rest)) {\n    // https://github.com/microsoft/TypeScript/issues/26255\n    if ((nativeViewProps as readonly string[]).includes(propName)) {\n      // @ts-ignore - this function cannot have generic type so we have to ignore this error\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      scrollViewProps[propName] = value;\n    } else {\n      // @ts-ignore - this function cannot have generic type so we have to ignore this error\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      flatListProps[propName] = value;\n    }\n  }\n\n  return (\n    // @ts-ignore - this function cannot have generic type so we have to ignore this error\n    <RNFlatList\n      ref={ref}\n      {...flatListProps}\n      renderScrollComponent={(scrollProps) => (\n        <ScrollView\n          {...{\n            ...scrollProps,\n            ...scrollViewProps,\n            waitFor: [...toArray(waitFor ?? []), refreshControlGestureRef],\n          }}\n        />\n      )}\n      // @ts-ignore we don't pass `refreshing` prop as we only want to override the ref\n      refreshControl={\n        refreshControl\n          ? React.cloneElement(refreshControl, {\n              // @ts-ignore for reasons unknown to me, `ref` doesn't exist on the type inferred by TS\n              ref: refreshControlGestureRef,\n            })\n          : undefined\n      }\n    />\n  );\n}) as <ItemT = any>(\n  props: PropsWithChildren<\n    Omit<RNFlatListProps<ItemT>, 'renderScrollComponent'> &\n      RefAttributes<FlatList<ItemT>> &\n      NativeViewGestureHandlerProps\n  >,\n  ref?: ForwardedRef<FlatList<ItemT>>\n) => ReactElement | null;\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type FlatList<ItemT = any> = typeof FlatList & RNFlatList<ItemT>;\n","import { HostComponent } from 'react-native';\nimport type { RawButtonProps } from './GestureButtonsProps';\nimport RNGestureHandlerButtonNativeComponent from '../specs/RNGestureHandlerButtonNativeComponent';\n\nexport default RNGestureHandlerButtonNativeComponent as HostComponent<RawButtonProps>;\n","import * as React from 'react';\nimport { PropsWithChildren } from 'react';\nimport { View, ViewProps, StyleSheet } from 'react-native';\nimport { maybeInitializeFabric } from '../init';\nimport GestureHandlerRootViewContext from '../GestureHandlerRootViewContext';\n\nexport interface GestureHandlerRootViewProps\n  extends PropsWithChildren<ViewProps> {}\n\nexport default function GestureHandlerRootView({\n  style,\n  ...rest\n}: GestureHandlerRootViewProps) {\n  // Try initialize fabric on the first render, at this point we can\n  // reliably check if fabric is enabled (the function contains a flag\n  // to make sure it's called only once)\n  maybeInitializeFabric();\n\n  return (\n    <GestureHandlerRootViewContext.Provider value>\n      <View style={style ?? styles.container} {...rest} />\n    </GestureHandlerRootViewContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1 },\n});\n","import React, {\n  ForwardedRef,\n  forwardRef,\n  RefObject,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { GestureObjects as Gesture } from '../../handlers/gestures/gestureObjects';\nimport { GestureDetector } from '../../handlers/gestures/GestureDetector';\nimport { PressableEvent, PressableProps } from './PressableProps';\nimport {\n  Insets,\n  Platform,\n  StyleProp,\n  View,\n  ViewStyle,\n  processColor,\n} from 'react-native';\nimport NativeButton from '../GestureHandlerButton';\nimport {\n  numberAsInset,\n  gestureToPressableEvent,\n  isTouchWithinInset,\n  gestureTouchToPressableEvent,\n  addInsets,\n} from './utils';\nimport { PressabilityDebugView } from '../../handlers/PressabilityDebugView';\nimport { GestureTouchEvent } from '../../handlers/gestureHandlerCommon';\nimport { INT32_MAX, isFabric, isTestEnv } from '../../utils';\n\nconst DEFAULT_LONG_PRESS_DURATION = 500;\nconst IS_TEST_ENV = isTestEnv();\n\nlet IS_FABRIC: null | boolean = null;\n\nconst Pressable = forwardRef(\n  (props: PressableProps, pressableRef: ForwardedRef<View>) => {\n    const {\n      testOnly_pressed,\n      hitSlop,\n      pressRetentionOffset,\n      delayHoverIn,\n      onHoverIn,\n      delayHoverOut,\n      onHoverOut,\n      delayLongPress,\n      unstable_pressDelay,\n      onPress,\n      onPressIn,\n      onPressOut,\n      onLongPress,\n      style,\n      children,\n      android_disableSound,\n      android_ripple,\n      disabled,\n      accessible,\n      ...remainingProps\n    } = props;\n\n    const [pressedState, setPressedState] = useState(testOnly_pressed ?? false);\n\n    // Disabled when onLongPress has been called\n    const isPressCallbackEnabled = useRef<boolean>(true);\n    const hasPassedBoundsChecks = useRef<boolean>(false);\n    const shouldPreventNativeEffects = useRef<boolean>(false);\n\n    const normalizedHitSlop: Insets = useMemo(\n      () =>\n        typeof hitSlop === 'number' ? numberAsInset(hitSlop) : (hitSlop ?? {}),\n      [hitSlop]\n    );\n\n    const normalizedPressRetentionOffset: Insets = useMemo(\n      () =>\n        typeof pressRetentionOffset === 'number'\n          ? numberAsInset(pressRetentionOffset)\n          : (pressRetentionOffset ?? {}),\n      [pressRetentionOffset]\n    );\n\n    const hoverInTimeout = useRef<number | null>(null);\n    const hoverOutTimeout = useRef<number | null>(null);\n\n    const hoverGesture = useMemo(\n      () =>\n        Gesture.Hover()\n          .manualActivation(true) // Stops Hover from blocking Native gesture activation on web\n          .cancelsTouchesInView(false)\n          .onBegin((event) => {\n            if (hoverOutTimeout.current) {\n              clearTimeout(hoverOutTimeout.current);\n            }\n            if (delayHoverIn) {\n              hoverInTimeout.current = setTimeout(\n                () => onHoverIn?.(gestureToPressableEvent(event)),\n                delayHoverIn\n              );\n              return;\n            }\n            onHoverIn?.(gestureToPressableEvent(event));\n          })\n          .onFinalize((event) => {\n            if (hoverInTimeout.current) {\n              clearTimeout(hoverInTimeout.current);\n            }\n            if (delayHoverOut) {\n              hoverOutTimeout.current = setTimeout(\n                () => onHoverOut?.(gestureToPressableEvent(event)),\n                delayHoverOut\n              );\n              return;\n            }\n            onHoverOut?.(gestureToPressableEvent(event));\n          }),\n      [delayHoverIn, delayHoverOut, onHoverIn, onHoverOut]\n    );\n\n    const pressDelayTimeoutRef = useRef<number | null>(null);\n    const isTouchPropagationAllowed = useRef<boolean>(false);\n\n    // iOS only: due to varying flow of gestures, events sometimes have to be saved for later use\n    const deferredEventPayload = useRef<PressableEvent | null>(null);\n\n    const pressInHandler = useCallback(\n      (event: PressableEvent) => {\n        if (handlingOnTouchesDown.current) {\n          deferredEventPayload.current = event;\n        }\n\n        if (!isTouchPropagationAllowed.current) {\n          return;\n        }\n\n        deferredEventPayload.current = null;\n\n        onPressIn?.(event);\n        isPressCallbackEnabled.current = true;\n        pressDelayTimeoutRef.current = null;\n        setPressedState(true);\n      },\n      [onPressIn]\n    );\n\n    const pressOutHandler = useCallback(\n      (event: PressableEvent) => {\n        if (!isTouchPropagationAllowed.current) {\n          hasPassedBoundsChecks.current = false;\n          isPressCallbackEnabled.current = true;\n          deferredEventPayload.current = null;\n\n          if (longPressTimeoutRef.current) {\n            clearTimeout(longPressTimeoutRef.current);\n            longPressTimeoutRef.current = null;\n          }\n\n          if (pressDelayTimeoutRef.current) {\n            clearTimeout(pressDelayTimeoutRef.current);\n            pressDelayTimeoutRef.current = null;\n          }\n\n          return;\n        }\n\n        if (\n          !hasPassedBoundsChecks.current ||\n          event.nativeEvent.touches.length >\n            event.nativeEvent.changedTouches.length\n        ) {\n          return;\n        }\n\n        if (unstable_pressDelay && pressDelayTimeoutRef.current !== null) {\n          // When delay is preemptively finished by lifting touches,\n          // we want to immediately activate it's effects - pressInHandler,\n          // even though we are located at the pressOutHandler\n          clearTimeout(pressDelayTimeoutRef.current);\n          pressInHandler(event);\n        }\n\n        if (deferredEventPayload.current) {\n          onPressIn?.(deferredEventPayload.current);\n          deferredEventPayload.current = null;\n        }\n\n        onPressOut?.(event);\n\n        if (isPressCallbackEnabled.current) {\n          onPress?.(event);\n        }\n\n        if (longPressTimeoutRef.current) {\n          clearTimeout(longPressTimeoutRef.current);\n          longPressTimeoutRef.current = null;\n        }\n\n        isTouchPropagationAllowed.current = false;\n        hasPassedBoundsChecks.current = false;\n        isPressCallbackEnabled.current = true;\n        setPressedState(false);\n      },\n      [onPress, onPressIn, onPressOut, pressInHandler, unstable_pressDelay]\n    );\n\n    const handlingOnTouchesDown = useRef<boolean>(false);\n    const onEndHandlingTouchesDown = useRef<(() => void) | null>(null);\n    const cancelledMidPress = useRef<boolean>(false);\n\n    const activateLongPress = useCallback(\n      (event: GestureTouchEvent) => {\n        if (!isTouchPropagationAllowed.current) {\n          return;\n        }\n\n        if (hasPassedBoundsChecks.current) {\n          onLongPress?.(gestureTouchToPressableEvent(event));\n          isPressCallbackEnabled.current = false;\n        }\n\n        if (longPressTimeoutRef.current) {\n          clearTimeout(longPressTimeoutRef.current);\n          longPressTimeoutRef.current = null;\n        }\n      },\n      [onLongPress]\n    );\n\n    const longPressTimeoutRef = useRef<number | null>(null);\n    const longPressMinDuration =\n      (delayLongPress ?? DEFAULT_LONG_PRESS_DURATION) +\n      (unstable_pressDelay ?? 0);\n\n    const innerPressableRef = useRef<View>(null);\n\n    const measureCallback = useCallback(\n      (width: number, height: number, event: GestureTouchEvent) => {\n        if (\n          !isTouchWithinInset(\n            {\n              width,\n              height,\n            },\n            normalizedHitSlop,\n            event.changedTouches.at(-1)\n          ) ||\n          hasPassedBoundsChecks.current ||\n          cancelledMidPress.current\n        ) {\n          cancelledMidPress.current = false;\n          onEndHandlingTouchesDown.current = null;\n          handlingOnTouchesDown.current = false;\n          return;\n        }\n\n        hasPassedBoundsChecks.current = true;\n\n        // In case of multiple touches, the first one starts long press gesture\n        if (longPressTimeoutRef.current === null) {\n          // Start long press gesture timer\n          longPressTimeoutRef.current = setTimeout(\n            () => activateLongPress(event),\n            longPressMinDuration\n          );\n        }\n\n        if (unstable_pressDelay) {\n          pressDelayTimeoutRef.current = setTimeout(() => {\n            pressInHandler(gestureTouchToPressableEvent(event));\n          }, unstable_pressDelay);\n        } else {\n          pressInHandler(gestureTouchToPressableEvent(event));\n        }\n\n        onEndHandlingTouchesDown.current?.();\n        onEndHandlingTouchesDown.current = null;\n        handlingOnTouchesDown.current = false;\n      },\n      [\n        activateLongPress,\n        longPressMinDuration,\n        normalizedHitSlop,\n        pressInHandler,\n        unstable_pressDelay,\n      ]\n    );\n\n    const pressAndTouchGesture = useMemo(\n      () =>\n        Gesture.LongPress()\n          .minDuration(INT32_MAX) // Stops long press from blocking native gesture\n          .maxDistance(INT32_MAX) // Stops long press from cancelling after set distance\n          .cancelsTouchesInView(false)\n          .onTouchesDown((event) => {\n            handlingOnTouchesDown.current = true;\n            if (pressableRef) {\n              (pressableRef as RefObject<View>).current?.measure(\n                (_x, _y, width, height) => {\n                  measureCallback(width, height, event);\n                }\n              );\n            } else {\n              innerPressableRef.current?.measure((_x, _y, width, height) => {\n                measureCallback(width, height, event);\n              });\n            }\n          })\n          .onTouchesUp((event) => {\n            if (handlingOnTouchesDown.current) {\n              onEndHandlingTouchesDown.current = () =>\n                pressOutHandler(gestureTouchToPressableEvent(event));\n              return;\n            }\n            // On iOS, short taps will make LongPress gesture call onTouchesUp before Native gesture calls onStart\n            // This variable ensures that onStart isn't detected as the first gesture since Pressable is pressed.\n            if (deferredEventPayload.current !== null) {\n              shouldPreventNativeEffects.current = true;\n            }\n            pressOutHandler(gestureTouchToPressableEvent(event));\n          })\n          .onTouchesCancelled((event) => {\n            isPressCallbackEnabled.current = false;\n\n            if (handlingOnTouchesDown.current) {\n              cancelledMidPress.current = true;\n              onEndHandlingTouchesDown.current = () =>\n                pressOutHandler(gestureTouchToPressableEvent(event));\n              return;\n            }\n\n            if (\n              !hasPassedBoundsChecks.current ||\n              event.allTouches.length > event.changedTouches.length\n            ) {\n              return;\n            }\n\n            pressOutHandler(gestureTouchToPressableEvent(event));\n          }),\n      [pressableRef, measureCallback, pressOutHandler]\n    );\n\n    // RNButton is placed inside ButtonGesture to enable Android's ripple and to capture non-propagating events\n    const buttonGesture = useMemo(\n      () =>\n        Gesture.Native()\n          .onBegin(() => {\n            // Android sets BEGAN state on press down\n            if (Platform.OS === 'android' || Platform.OS === 'macos') {\n              isTouchPropagationAllowed.current = true;\n            }\n          })\n          .onStart(() => {\n            if (Platform.OS === 'web') {\n              isTouchPropagationAllowed.current = true;\n            }\n\n            // iOS sets ACTIVE state on press down\n            if (Platform.OS !== 'ios') {\n              return;\n            }\n\n            if (deferredEventPayload.current) {\n              isTouchPropagationAllowed.current = true;\n\n              if (hasPassedBoundsChecks.current) {\n                pressInHandler(deferredEventPayload.current);\n                deferredEventPayload.current = null;\n              } else {\n                pressOutHandler(deferredEventPayload.current);\n                isTouchPropagationAllowed.current = false;\n              }\n\n              return;\n            }\n\n            if (hasPassedBoundsChecks.current) {\n              isTouchPropagationAllowed.current = true;\n              return;\n            }\n\n            if (shouldPreventNativeEffects.current) {\n              shouldPreventNativeEffects.current = false;\n              if (!handlingOnTouchesDown.current) {\n                return;\n              }\n            }\n\n            isTouchPropagationAllowed.current = true;\n          }),\n      [pressInHandler, pressOutHandler]\n    );\n\n    const appliedHitSlop = addInsets(\n      normalizedHitSlop,\n      normalizedPressRetentionOffset\n    );\n\n    const isPressableEnabled = disabled !== true;\n\n    const gestures = [buttonGesture, pressAndTouchGesture, hoverGesture];\n\n    for (const gesture of gestures) {\n      gesture.enabled(isPressableEnabled);\n      gesture.runOnJS(true);\n      gesture.hitSlop(appliedHitSlop);\n      gesture.shouldCancelWhenOutside(Platform.OS === 'web' ? false : true);\n    }\n\n    // Uses different hitSlop, to activate on hitSlop area instead of pressRetentionOffset area\n    buttonGesture.hitSlop(normalizedHitSlop);\n\n    const gesture = Gesture.Simultaneous(...gestures);\n\n    // `cursor: 'pointer'` on `RNButton` crashes iOS\n    const pointerStyle: StyleProp<ViewStyle> =\n      Platform.OS === 'web' ? { cursor: 'pointer' } : {};\n\n    const styleProp =\n      typeof style === 'function' ? style({ pressed: pressedState }) : style;\n\n    const childrenProp =\n      typeof children === 'function'\n        ? children({ pressed: pressedState })\n        : children;\n\n    const rippleColor = useMemo(() => {\n      if (IS_FABRIC === null) {\n        IS_FABRIC = isFabric();\n      }\n\n      const defaultRippleColor = android_ripple ? undefined : 'transparent';\n      const unprocessedRippleColor =\n        android_ripple?.color ?? defaultRippleColor;\n      return IS_FABRIC\n        ? unprocessedRippleColor\n        : processColor(unprocessedRippleColor);\n    }, [android_ripple]);\n\n    return (\n      <GestureDetector gesture={gesture}>\n        <NativeButton\n          {...remainingProps}\n          ref={pressableRef ?? innerPressableRef}\n          accessible={accessible !== false}\n          hitSlop={appliedHitSlop}\n          enabled={isPressableEnabled}\n          touchSoundDisabled={android_disableSound ?? undefined}\n          rippleColor={rippleColor}\n          rippleRadius={android_ripple?.radius ?? undefined}\n          style={[pointerStyle, styleProp]}\n          testOnly_onPress={IS_TEST_ENV ? onPress : undefined}\n          testOnly_onPressIn={IS_TEST_ENV ? onPressIn : undefined}\n          testOnly_onPressOut={IS_TEST_ENV ? onPressOut : undefined}\n          testOnly_onLongPress={IS_TEST_ENV ? onLongPress : undefined}>\n          {childrenProp}\n          {__DEV__ ? (\n            <PressabilityDebugView color=\"red\" hitSlop={normalizedHitSlop} />\n          ) : null}\n        </NativeButton>\n      </GestureDetector>\n    );\n  }\n);\n\nexport default Pressable;\n","// Similarily to the DrawerLayout component this deserves to be put in a\n// separate repo. Although, keeping it here for the time being will allow us to\n// move faster and fix possible issues quicker\n\nimport * as React from 'react';\nimport { Component } from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  I18nManager,\n  LayoutChangeEvent,\n  StyleProp,\n  ViewStyle,\n} from 'react-native';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../handlers/gestureHandlerCommon';\nimport {\n  PanGestureHandler,\n  PanGestureHandlerProps,\n} from '../handlers/PanGestureHandler';\nimport {\n  PanGestureHandlerEventPayload,\n  TapGestureHandlerEventPayload,\n} from '../handlers/GestureHandlerEventPayload';\nimport { TapGestureHandler } from '../handlers/TapGestureHandler';\nimport { State } from '../State';\n\nconst DRAG_TOSS = 0.05;\n\ntype SwipeableExcludes = Exclude<\n  keyof PanGestureHandlerProps,\n  'onGestureEvent' | 'onHandlerStateChange'\n>;\n\n// Animated.AnimatedInterpolation has been converted to a generic type\n// in @types/react-native 0.70. This way we can maintain compatibility\n// with all versions of @types/react-native\ntype AnimatedInterpolation = ReturnType<Animated.Value['interpolate']>;\n\nexport interface SwipeableProps\n  extends Pick<PanGestureHandlerProps, SwipeableExcludes> {\n  /**\n   * Enables two-finger gestures on supported devices, for example iPads with\n   * trackpads. If not enabled the gesture will require click + drag, with\n   * `enableTrackpadTwoFingerGesture` swiping with two fingers will also trigger\n   * the gesture.\n   */\n  enableTrackpadTwoFingerGesture?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance. e.g. value of 1 will indicate that the swipeable panel\n   * should exactly follow the gesture, 2 means it is going to be two times\n   * \"slower\".\n   */\n  friction?: number;\n\n  /**\n   * Distance from the left edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  leftThreshold?: number;\n\n  /**\n   * Distance from the right edge at which released panel will animate to the\n   * open state (or the open panel will animate into the closed state). By\n   * default it's a half of the panel's width.\n   */\n  rightThreshold?: number;\n\n  /**\n   * Distance that the panel must be dragged from the left edge to be considered\n   * a swipe. The default value is 10.\n   */\n  dragOffsetFromLeftEdge?: number;\n\n  /**\n   * Distance that the panel must be dragged from the right edge to be considered\n   * a swipe. The default value is 10.\n   */\n  dragOffsetFromRightEdge?: number;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the left\n   * actions panel's width. It is set to true by default as long as the left\n   * panel render method is present.\n   */\n  overshootLeft?: boolean;\n\n  /**\n   * Value indicating if the swipeable panel can be pulled further than the\n   * right actions panel's width. It is set to true by default as long as the\n   * right panel render method is present.\n   */\n  overshootRight?: boolean;\n\n  /**\n   * Specifies how much the visual interaction will be delayed compared to the\n   * gesture distance at overshoot. Default value is 1, it mean no friction, for\n   * a native feel, try 8 or above.\n   */\n  overshootFriction?: number;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableOpen()\n   *\n   * Called when left action panel gets open.\n   */\n  onSwipeableLeftOpen?: () => void;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableOpen()\n   *\n   * Called when right action panel gets open.\n   */\n  onSwipeableRightOpen?: () => void;\n\n  /**\n   * Called when action panel gets open (either right or left).\n   */\n  onSwipeableOpen?: (direction: 'left' | 'right', swipeable: Swipeable) => void;\n\n  /**\n   * Called when action panel is closed.\n   */\n  onSwipeableClose?: (\n    direction: 'left' | 'right',\n    swipeable: Swipeable\n  ) => void;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableWillOpen()\n   *\n   * Called when left action panel starts animating on open.\n   */\n  onSwipeableLeftWillOpen?: () => void;\n\n  /**\n   * @deprecated Use `direction` argument of onSwipeableWillOpen()\n   *\n   * Called when right action panel starts animating on open.\n   */\n  onSwipeableRightWillOpen?: () => void;\n\n  /**\n   * Called when action panel starts animating on open (either right or left).\n   */\n  onSwipeableWillOpen?: (direction: 'left' | 'right') => void;\n\n  /**\n   * Called when action panel starts animating on close.\n   */\n  onSwipeableWillClose?: (direction: 'left' | 'right') => void;\n\n  /**\n   * Called when action panel starts being shown on dragging to open.\n   */\n  onSwipeableOpenStartDrag?: (direction: 'left' | 'right') => void;\n\n  /**\n   * Called when action panel starts being shown on dragging to close.\n   */\n  onSwipeableCloseStartDrag?: (direction: 'left' | 'right') => void;\n\n  /**\n   *\n   * This map describes the values to use as inputRange for extra interpolation:\n   * AnimatedValue: [startValue, endValue]\n   *\n   * progressAnimatedValue: [0, 1] dragAnimatedValue: [0, +]\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderLeftActions?: (\n    progressAnimatedValue: AnimatedInterpolation,\n    dragAnimatedValue: AnimatedInterpolation,\n    swipeable: Swipeable\n  ) => React.ReactNode;\n  /**\n   *\n   * This map describes the values to use as inputRange for extra interpolation:\n   * AnimatedValue: [startValue, endValue]\n   *\n   * progressAnimatedValue: [0, 1] dragAnimatedValue: [0, -]\n   *\n   * To support `rtl` flexbox layouts use `flexDirection` styling.\n   * */\n  renderRightActions?: (\n    progressAnimatedValue: AnimatedInterpolation,\n    dragAnimatedValue: AnimatedInterpolation,\n    swipeable: Swipeable\n  ) => React.ReactNode;\n\n  useNativeAnimations?: boolean;\n\n  animationOptions?: Record<string, unknown>;\n\n  /**\n   * Style object for the container (`Animated.View`), for example to override\n   * `overflow: 'hidden'`.\n   */\n  containerStyle?: StyleProp<ViewStyle>;\n\n  /**\n   * Style object for the children container (`Animated.View`), for example to\n   * apply `flex: 1`\n   */\n  childrenContainerStyle?: StyleProp<ViewStyle>;\n}\n\ntype SwipeableState = {\n  dragX: Animated.Value;\n  rowTranslation: Animated.Value;\n  rowState: number;\n  leftWidth?: number;\n  rightOffset?: number;\n  rowWidth?: number;\n};\n\n/**\n * @deprecated use Reanimated version of Swipeable instead\n *\n * This component allows for implementing swipeable rows or similar interaction.\n */\n\nexport default class Swipeable extends Component<\n  SwipeableProps,\n  SwipeableState\n> {\n  static defaultProps = {\n    friction: 1,\n    overshootFriction: 1,\n    useNativeAnimations: true,\n  };\n\n  constructor(props: SwipeableProps) {\n    super(props);\n    const dragX = new Animated.Value(0);\n    this.state = {\n      dragX,\n      rowTranslation: new Animated.Value(0),\n      rowState: 0,\n      leftWidth: undefined,\n      rightOffset: undefined,\n      rowWidth: undefined,\n    };\n    this.updateAnimatedEvent(props, this.state);\n\n    this.onGestureEvent = Animated.event(\n      [{ nativeEvent: { translationX: dragX } }],\n      { useNativeDriver: props.useNativeAnimations! }\n    );\n  }\n\n  shouldComponentUpdate(props: SwipeableProps, state: SwipeableState) {\n    if (\n      this.props.friction !== props.friction ||\n      this.props.overshootLeft !== props.overshootLeft ||\n      this.props.overshootRight !== props.overshootRight ||\n      this.props.overshootFriction !== props.overshootFriction ||\n      this.state.leftWidth !== state.leftWidth ||\n      this.state.rightOffset !== state.rightOffset ||\n      this.state.rowWidth !== state.rowWidth\n    ) {\n      this.updateAnimatedEvent(props, state);\n    }\n\n    return true;\n  }\n\n  private onGestureEvent?: (\n    event: GestureEvent<PanGestureHandlerEventPayload>\n  ) => void;\n  private transX?: AnimatedInterpolation;\n  private showLeftAction?: AnimatedInterpolation | Animated.Value;\n  private leftActionTranslate?: AnimatedInterpolation;\n  private showRightAction?: AnimatedInterpolation | Animated.Value;\n  private rightActionTranslate?: AnimatedInterpolation;\n\n  private updateAnimatedEvent = (\n    props: SwipeableProps,\n    state: SwipeableState\n  ) => {\n    const { friction, overshootFriction } = props;\n    const { dragX, rowTranslation, leftWidth = 0, rowWidth = 0 } = state;\n    const { rightOffset = rowWidth } = state;\n    const rightWidth = Math.max(0, rowWidth - rightOffset);\n\n    const { overshootLeft = leftWidth > 0, overshootRight = rightWidth > 0 } =\n      props;\n\n    const transX = Animated.add(\n      rowTranslation,\n      dragX.interpolate({\n        inputRange: [0, friction!],\n        outputRange: [0, 1],\n      })\n    ).interpolate({\n      inputRange: [-rightWidth - 1, -rightWidth, leftWidth, leftWidth + 1],\n      outputRange: [\n        -rightWidth - (overshootRight ? 1 / overshootFriction! : 0),\n        -rightWidth,\n        leftWidth,\n        leftWidth + (overshootLeft ? 1 / overshootFriction! : 0),\n      ],\n    });\n    this.transX = transX;\n    this.showLeftAction =\n      leftWidth > 0\n        ? transX.interpolate({\n            inputRange: [-1, 0, leftWidth],\n            outputRange: [0, 0, 1],\n          })\n        : new Animated.Value(0);\n    this.leftActionTranslate = this.showLeftAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n    this.showRightAction =\n      rightWidth > 0\n        ? transX.interpolate({\n            inputRange: [-rightWidth, 0, 1],\n            outputRange: [1, 0, 0],\n          })\n        : new Animated.Value(0);\n    this.rightActionTranslate = this.showRightAction.interpolate({\n      inputRange: [0, Number.MIN_VALUE],\n      outputRange: [-10000, 0],\n      extrapolate: 'clamp',\n    });\n  };\n\n  private onTapHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<TapGestureHandlerEventPayload>) => {\n    if (nativeEvent.oldState === State.ACTIVE) {\n      this.close();\n    }\n  };\n\n  private onHandlerStateChange = (\n    ev: HandlerStateChangeEvent<PanGestureHandlerEventPayload>\n  ) => {\n    if (ev.nativeEvent.oldState === State.ACTIVE) {\n      this.handleRelease(ev);\n    }\n\n    if (ev.nativeEvent.state === State.ACTIVE) {\n      const { velocityX, translationX: dragX } = ev.nativeEvent;\n      const { rowState } = this.state;\n      const { friction } = this.props;\n\n      const translationX = (dragX + DRAG_TOSS * velocityX) / friction!;\n\n      const direction =\n        rowState === -1\n          ? 'right'\n          : rowState === 1\n            ? 'left'\n            : translationX > 0\n              ? 'left'\n              : 'right';\n\n      if (rowState === 0) {\n        this.props.onSwipeableOpenStartDrag?.(direction);\n      } else {\n        this.props.onSwipeableCloseStartDrag?.(direction);\n      }\n    }\n  };\n\n  private handleRelease = (\n    ev: HandlerStateChangeEvent<PanGestureHandlerEventPayload>\n  ) => {\n    const { velocityX, translationX: dragX } = ev.nativeEvent;\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    const {\n      friction,\n      leftThreshold = leftWidth / 2,\n      rightThreshold = rightWidth / 2,\n    } = this.props;\n\n    const startOffsetX = this.currentOffset() + dragX / friction!;\n    const translationX = (dragX + DRAG_TOSS * velocityX) / friction!;\n\n    let toValue = 0;\n    if (rowState === 0) {\n      if (translationX > leftThreshold) {\n        toValue = leftWidth;\n      } else if (translationX < -rightThreshold) {\n        toValue = -rightWidth;\n      }\n    } else if (rowState === 1) {\n      // Swiped to left\n      if (translationX > -leftThreshold) {\n        toValue = leftWidth;\n      }\n    } else {\n      // Swiped to right\n      if (translationX < rightThreshold) {\n        toValue = -rightWidth;\n      }\n    }\n\n    this.animateRow(startOffsetX, toValue, velocityX / friction!);\n  };\n\n  private animateRow = (\n    fromValue: number,\n    toValue: number,\n    velocityX?:\n      | number\n      | {\n          x: number;\n          y: number;\n        }\n  ) => {\n    const { dragX, rowTranslation } = this.state;\n    dragX.setValue(0);\n    rowTranslation.setValue(fromValue);\n\n    this.setState({ rowState: Math.sign(toValue) });\n    Animated.spring(rowTranslation, {\n      restSpeedThreshold: 1.7,\n      restDisplacementThreshold: 0.4,\n      velocity: velocityX,\n      bounciness: 0,\n      toValue,\n      useNativeDriver: this.props.useNativeAnimations!,\n      ...this.props.animationOptions,\n    }).start(({ finished }) => {\n      if (finished) {\n        if (toValue > 0) {\n          this.props.onSwipeableLeftOpen?.();\n          this.props.onSwipeableOpen?.('left', this);\n        } else if (toValue < 0) {\n          this.props.onSwipeableRightOpen?.();\n          this.props.onSwipeableOpen?.('right', this);\n        } else {\n          const closingDirection = fromValue > 0 ? 'left' : 'right';\n          this.props.onSwipeableClose?.(closingDirection, this);\n        }\n      }\n    });\n    if (toValue > 0) {\n      this.props.onSwipeableLeftWillOpen?.();\n      this.props.onSwipeableWillOpen?.('left');\n    } else if (toValue < 0) {\n      this.props.onSwipeableRightWillOpen?.();\n      this.props.onSwipeableWillOpen?.('right');\n    } else {\n      const closingDirection = fromValue > 0 ? 'left' : 'right';\n      this.props.onSwipeableWillClose?.(closingDirection);\n    }\n  };\n\n  private onRowLayout = ({ nativeEvent }: LayoutChangeEvent) => {\n    this.setState({ rowWidth: nativeEvent.layout.width });\n  };\n\n  private currentOffset = () => {\n    const { leftWidth = 0, rowWidth = 0, rowState } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    if (rowState === 1) {\n      return leftWidth;\n    } else if (rowState === -1) {\n      return -rightWidth;\n    }\n    return 0;\n  };\n\n  close = () => {\n    this.animateRow(this.currentOffset(), 0);\n  };\n\n  openLeft = () => {\n    const { leftWidth = 0 } = this.state;\n    this.animateRow(this.currentOffset(), leftWidth);\n  };\n\n  openRight = () => {\n    const { rowWidth = 0 } = this.state;\n    const { rightOffset = rowWidth } = this.state;\n    const rightWidth = rowWidth - rightOffset;\n    this.animateRow(this.currentOffset(), -rightWidth);\n  };\n\n  reset = () => {\n    const { dragX, rowTranslation } = this.state;\n    dragX.setValue(0);\n    rowTranslation.setValue(0);\n    this.setState({ rowState: 0 });\n  };\n\n  render() {\n    const { rowState } = this.state;\n    const {\n      children,\n      renderLeftActions,\n      renderRightActions,\n      dragOffsetFromLeftEdge = 10,\n      dragOffsetFromRightEdge = 10,\n    } = this.props;\n\n    const left = renderLeftActions && (\n      <Animated.View\n        style={[\n          styles.leftActions,\n          // All those and below parameters can have ! since they are all\n          // asigned in constructor in `updateAnimatedEvent` but TS cannot spot\n          // it for some reason\n          { transform: [{ translateX: this.leftActionTranslate! }] },\n        ]}>\n        {renderLeftActions(this.showLeftAction!, this.transX!, this)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ leftWidth: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    const right = renderRightActions && (\n      <Animated.View\n        style={[\n          styles.rightActions,\n          { transform: [{ translateX: this.rightActionTranslate! }] },\n        ]}>\n        {renderRightActions(this.showRightAction!, this.transX!, this)}\n        <View\n          onLayout={({ nativeEvent }) =>\n            this.setState({ rightOffset: nativeEvent.layout.x })\n          }\n        />\n      </Animated.View>\n    );\n\n    return (\n      <PanGestureHandler\n        activeOffsetX={[-dragOffsetFromRightEdge, dragOffsetFromLeftEdge]}\n        touchAction=\"pan-y\"\n        {...this.props}\n        onGestureEvent={this.onGestureEvent}\n        onHandlerStateChange={this.onHandlerStateChange}>\n        <Animated.View\n          onLayout={this.onRowLayout}\n          style={[styles.container, this.props.containerStyle]}>\n          {left}\n          {right}\n          <TapGestureHandler\n            enabled={rowState !== 0}\n            touchAction=\"pan-y\"\n            onHandlerStateChange={this.onTapHandlerStateChange}>\n            <Animated.View\n              pointerEvents={rowState === 0 ? 'auto' : 'box-only'}\n              style={[\n                {\n                  transform: [{ translateX: this.transX! }],\n                },\n                this.props.childrenContainerStyle,\n              ]}>\n              {children}\n            </Animated.View>\n          </TapGestureHandler>\n        </Animated.View>\n      </PanGestureHandler>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  leftActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row-reverse' : 'row',\n  },\n  rightActions: {\n    ...StyleSheet.absoluteFillObject,\n    flexDirection: I18nManager.isRTL ? 'row' : 'row-reverse',\n  },\n});\n","import React, {\n  ForwardedRef,\n  forwardRef,\n  RefObject,\n  useEffect,\n  useRef,\n} from 'react';\nimport {\n  Platform,\n  Text as RNText,\n  TextProps as RNTextProps,\n} from 'react-native';\n\nimport { GestureObjects as Gesture } from '../handlers/gestures/gestureObjects';\nimport { GestureDetector } from '../handlers/gestures/GestureDetector';\n\nexport const Text = forwardRef(\n  (props: RNTextProps, ref: ForwardedRef<RNText>) => {\n    const { onPress, onLongPress, ...rest } = props;\n\n    const textRef = useRef<RNText | null>(null);\n    const native = Gesture.Native().runOnJS(true);\n\n    const refHandler = (node: any) => {\n      textRef.current = node;\n\n      if (ref === null) {\n        return;\n      }\n\n      if (typeof ref === 'function') {\n        ref(node);\n      } else {\n        ref.current = node;\n      }\n    };\n\n    // This is a special case for `Text` component. After https://github.com/software-mansion/react-native-gesture-handler/pull/3379 we check for\n    // `displayName` field. However, `Text` from RN has this field set to `Text`, but is also present in `RNSVGElements` set.\n    // We don't want to treat our `Text` as the one from `SVG`, therefore we add special field to ref.\n    refHandler.rngh = true;\n\n    useEffect(() => {\n      if (Platform.OS !== 'web') {\n        return;\n      }\n\n      const textElement = ref\n        ? (ref as RefObject<RNText>).current\n        : textRef.current;\n\n      // At this point we are sure that textElement is div in HTML tree\n      (textElement as unknown as HTMLDivElement)?.setAttribute(\n        'rnghtext',\n        'true'\n      );\n    }, []);\n\n    return onPress || onLongPress ? (\n      <GestureDetector gesture={native}>\n        <RNText\n          onPress={onPress}\n          onLongPress={onLongPress}\n          ref={refHandler}\n          {...rest}\n        />\n      </GestureDetector>\n    ) : (\n      <RNText ref={ref} {...rest} />\n    );\n  }\n);\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport type Text = typeof Text & RNText;\n","import * as React from 'react';\nimport { StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport GestureHandlerRootView from './GestureHandlerRootView';\n\nexport default function gestureHandlerRootHOC<P extends object>(\n  Component: React.ComponentType<P>,\n  containerStyles?: StyleProp<ViewStyle>\n): React.ComponentType<P> {\n  function Wrapper(props: P) {\n    return (\n      <GestureHandlerRootView style={[styles.container, containerStyles]}>\n        <Component {...props} />\n      </GestureHandlerRootView>\n    );\n  }\n\n  Wrapper.displayName = `gestureHandlerRootHOC(${\n    Component.displayName || Component.name\n  })`;\n\n  // @ts-ignore - hoistNonReactStatics uses old version of @types/react\n  hoistNonReactStatics(Wrapper, Component);\n\n  return Wrapper;\n}\n\nconst styles = StyleSheet.create({\n  container: { flex: 1 },\n});\n","import * as React from 'react';\nimport { Component } from 'react';\nimport { Animated, Platform } from 'react-native';\n\nimport { State } from '../../State';\nimport { BaseButton } from '../GestureButtons';\n\nimport {\n  GestureEvent,\n  HandlerStateChangeEvent,\n} from '../../handlers/gestureHandlerCommon';\nimport type { NativeViewGestureHandlerPayload } from '../../handlers/GestureHandlerEventPayload';\nimport type { GenericTouchableProps } from './GenericTouchableProps';\n\n/**\n * Each touchable is a states' machine which preforms transitions.\n * On very beginning (and on the very end or recognition) touchable is\n * UNDETERMINED. Then it moves to BEGAN. If touchable recognizes that finger\n * travel outside it transits to special MOVED_OUTSIDE state. Gesture recognition\n * finishes in UNDETERMINED state.\n */\nexport const TOUCHABLE_STATE = {\n  UNDETERMINED: 0,\n  BEGAN: 1,\n  MOVED_OUTSIDE: 2,\n} as const;\n\ntype TouchableState = (typeof TOUCHABLE_STATE)[keyof typeof TOUCHABLE_STATE];\n\ninterface InternalProps {\n  onStateChange?: (oldState: TouchableState, newState: TouchableState) => void;\n}\n\n// TODO: maybe can be better\n// TODO: all clearTimeout have ! added, maybe they shouldn't ?\ntype Timeout = ReturnType<typeof setTimeout> | null | undefined;\n\n/**\n * GenericTouchable is not intented to be used as it is.\n * Should be treated as a source for the rest of touchables\n */\n\nexport default class GenericTouchable extends Component<\n  GenericTouchableProps & InternalProps\n> {\n  static defaultProps = {\n    delayLongPress: 600,\n    extraButtonProps: {\n      rippleColor: 'transparent',\n      exclusive: true,\n    },\n  };\n\n  // Timeout handlers\n  pressInTimeout: Timeout;\n  pressOutTimeout: Timeout;\n  longPressTimeout: Timeout;\n\n  // This flag is required since recognition of longPress implies not-invoking onPress\n  longPressDetected = false;\n\n  pointerInside = true;\n\n  // State of touchable\n  STATE: TouchableState = TOUCHABLE_STATE.UNDETERMINED;\n\n  // handlePressIn in called on first touch on traveling inside component.\n  // Handles state transition with delay.\n  handlePressIn() {\n    if (this.props.delayPressIn) {\n      this.pressInTimeout = setTimeout(() => {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n        this.pressInTimeout = null;\n      }, this.props.delayPressIn);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n    if (this.props.onLongPress) {\n      const time =\n        (this.props.delayPressIn || 0) + (this.props.delayLongPress || 0);\n      this.longPressTimeout = setTimeout(this.onLongPressDetected, time);\n    }\n  }\n  // handleMoveOutside in called on traveling outside component.\n  // Handles state transition with delay.\n  handleMoveOutside() {\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout =\n        this.pressOutTimeout ||\n        setTimeout(() => {\n          this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n          this.pressOutTimeout = null;\n        }, this.props.delayPressOut);\n    } else {\n      this.moveToState(TOUCHABLE_STATE.MOVED_OUTSIDE);\n    }\n  }\n\n  // handleGoToUndetermined transits to UNDETERMINED state with proper delay\n  handleGoToUndetermined() {\n    clearTimeout(this.pressOutTimeout!); // TODO: maybe it can be undefined\n    if (this.props.delayPressOut) {\n      this.pressOutTimeout = setTimeout(() => {\n        if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n          this.moveToState(TOUCHABLE_STATE.BEGAN);\n        }\n        this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n        this.pressOutTimeout = null;\n      }, this.props.delayPressOut);\n    } else {\n      if (this.STATE === TOUCHABLE_STATE.UNDETERMINED) {\n        this.moveToState(TOUCHABLE_STATE.BEGAN);\n      }\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    }\n  }\n\n  componentDidMount() {\n    this.reset();\n  }\n  // Reset timeout to prevent memory leaks.\n  reset() {\n    this.longPressDetected = false;\n    this.pointerInside = true;\n    clearTimeout(this.pressInTimeout!);\n    clearTimeout(this.pressOutTimeout!);\n    clearTimeout(this.longPressTimeout!);\n    this.pressOutTimeout = null;\n    this.longPressTimeout = null;\n    this.pressInTimeout = null;\n  }\n\n  // All states' transitions are defined here.\n  moveToState(newState: TouchableState) {\n    if (newState === this.STATE) {\n      // Ignore dummy transitions\n      return;\n    }\n    if (newState === TOUCHABLE_STATE.BEGAN) {\n      // First touch and moving inside\n      this.props.onPressIn?.();\n    } else if (newState === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // Moving outside\n      this.props.onPressOut?.();\n    } else if (newState === TOUCHABLE_STATE.UNDETERMINED) {\n      // Need to reset each time on transition to UNDETERMINED\n      this.reset();\n      if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n        // ... and if it happens inside button.\n        this.props.onPressOut?.();\n      }\n    }\n    // Finally call lister (used by subclasses)\n    this.props.onStateChange?.(this.STATE, newState);\n    // ... and make transition.\n    this.STATE = newState;\n  }\n\n  onGestureEvent = ({\n    nativeEvent: { pointerInside },\n  }: GestureEvent<NativeViewGestureHandlerPayload>) => {\n    if (this.pointerInside !== pointerInside) {\n      if (pointerInside) {\n        this.onMoveIn();\n      } else {\n        this.onMoveOut();\n      }\n    }\n    this.pointerInside = pointerInside;\n  };\n\n  onHandlerStateChange = ({\n    nativeEvent,\n  }: HandlerStateChangeEvent<NativeViewGestureHandlerPayload>) => {\n    const { state } = nativeEvent;\n    if (state === State.CANCELLED || state === State.FAILED) {\n      // Need to handle case with external cancellation (e.g. by ScrollView)\n      this.moveToState(TOUCHABLE_STATE.UNDETERMINED);\n    } else if (\n      // This platform check is an implication of slightly different behavior of handlers on different platform.\n      // And Android \"Active\" state is achieving on first move of a finger, not on press in.\n      // On iOS event on \"Began\" is not delivered.\n      state === (Platform.OS !== 'android' ? State.ACTIVE : State.BEGAN) &&\n      this.STATE === TOUCHABLE_STATE.UNDETERMINED\n    ) {\n      // Moving inside requires\n      this.handlePressIn();\n    } else if (state === State.END) {\n      const shouldCallOnPress =\n        !this.longPressDetected &&\n        this.STATE !== TOUCHABLE_STATE.MOVED_OUTSIDE &&\n        this.pressOutTimeout === null;\n      this.handleGoToUndetermined();\n      if (shouldCallOnPress) {\n        // Calls only inside component whether no long press was called previously\n        this.props.onPress?.();\n      }\n    }\n  };\n\n  onLongPressDetected = () => {\n    this.longPressDetected = true;\n    // Checked for in the caller of `onLongPressDetected`, but better to check twice\n    this.props.onLongPress?.();\n  };\n\n  componentWillUnmount() {\n    // To prevent memory leaks\n    this.reset();\n  }\n\n  onMoveIn() {\n    if (this.STATE === TOUCHABLE_STATE.MOVED_OUTSIDE) {\n      // This call is not throttled with delays (like in RN's implementation).\n      this.moveToState(TOUCHABLE_STATE.BEGAN);\n    }\n  }\n\n  onMoveOut() {\n    // Long press should no longer be detected\n    clearTimeout(this.longPressTimeout!);\n    this.longPressTimeout = null;\n    if (this.STATE === TOUCHABLE_STATE.BEGAN) {\n      this.handleMoveOutside();\n    }\n  }\n\n  render() {\n    const hitSlop =\n      (typeof this.props.hitSlop === 'number'\n        ? {\n            top: this.props.hitSlop,\n            left: this.props.hitSlop,\n            bottom: this.props.hitSlop,\n            right: this.props.hitSlop,\n          }\n        : this.props.hitSlop) ?? undefined;\n\n    const coreProps = {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityRole: this.props.accessibilityRole,\n      // TODO: check if changed to no 's' correctly, also removed 2 props that are no longer available: `accessibilityComponentType` and `accessibilityTraits`,\n      // would be good to check if it is ok for sure, see: https://github.com/facebook/react-native/issues/24016\n      accessibilityState: this.props.accessibilityState,\n      accessibilityActions: this.props.accessibilityActions,\n      onAccessibilityAction: this.props.onAccessibilityAction,\n      nativeID: this.props.nativeID,\n      onLayout: this.props.onLayout,\n    };\n\n    return (\n      <BaseButton\n        style={this.props.containerStyle}\n        onHandlerStateChange={\n          // TODO: not sure if it can be undefined instead of null\n          this.props.disabled ? undefined : this.onHandlerStateChange\n        }\n        onGestureEvent={this.onGestureEvent}\n        hitSlop={hitSlop}\n        userSelect={this.props.userSelect}\n        shouldActivateOnStart={this.props.shouldActivateOnStart}\n        disallowInterruption={this.props.disallowInterruption}\n        testID={this.props.testID}\n        touchSoundDisabled={this.props.touchSoundDisabled ?? false}\n        enabled={!this.props.disabled}\n        {...this.props.extraButtonProps}>\n        <Animated.View {...coreProps} style={this.props.style}>\n          {this.props.children}\n        </Animated.View>\n      </BaseButton>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Component } from 'react';\nimport GenericTouchable, { TOUCHABLE_STATE } from './GenericTouchable';\nimport type { GenericTouchableProps } from './GenericTouchableProps';\nimport {\n  StyleSheet,\n  View,\n  TouchableHighlightProps as RNTouchableHighlightProps,\n  ColorValue,\n  ViewProps,\n} from 'react-native';\n\ninterface State {\n  extraChildStyle: null | {\n    opacity?: number;\n  };\n  extraUnderlayStyle: null | {\n    backgroundColor?: ColorValue;\n  };\n}\n\n/**\n * @deprecated TouchableHighlight will be removed in the future version of Gesture Handler. Use Pressable instead.\n */\nexport type TouchableHighlightProps = RNTouchableHighlightProps &\n  GenericTouchableProps;\n\n/**\n * @deprecated TouchableHighlight will be removed in the future version of Gesture Handler. Use Pressable instead.\n *\n * TouchableHighlight follows RN's implementation\n */\nexport default class TouchableHighlight extends Component<\n  TouchableHighlightProps,\n  State\n> {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.85,\n    delayPressOut: 100,\n    underlayColor: 'black',\n  };\n\n  constructor(props: TouchableHighlightProps) {\n    super(props);\n    this.state = {\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    };\n  }\n\n  // Copied from RN\n  showUnderlay = () => {\n    if (!this.hasPressHandler()) {\n      return;\n    }\n    this.setState({\n      extraChildStyle: {\n        opacity: this.props.activeOpacity,\n      },\n      extraUnderlayStyle: {\n        backgroundColor: this.props.underlayColor,\n      },\n    });\n    this.props.onShowUnderlay?.();\n  };\n\n  hasPressHandler = () =>\n    this.props.onPress ||\n    this.props.onPressIn ||\n    this.props.onPressOut ||\n    this.props.onLongPress;\n\n  hideUnderlay = () => {\n    this.setState({\n      extraChildStyle: null,\n      extraUnderlayStyle: null,\n    });\n    this.props.onHideUnderlay?.();\n  };\n\n  renderChildren() {\n    if (!this.props.children) {\n      return <View />;\n    }\n\n    const child = React.Children.only(\n      this.props.children\n    ) as React.ReactElement<ViewProps>; // TODO: not sure if OK but fixes error\n    return React.cloneElement(child, {\n      style: StyleSheet.compose(child.props.style, this.state.extraChildStyle),\n    });\n  }\n\n  onStateChange = (_from: number, to: number) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.showUnderlay();\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.hideUnderlay();\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    const { extraUnderlayStyle } = this.state;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[style, extraUnderlayStyle]}\n        onStateChange={this.onStateChange}>\n        {this.renderChildren()}\n      </GenericTouchable>\n    );\n  }\n}\n","import { TouchableNativeFeedback as RNTouchableNativeFeedback } from 'react-native';\n\n/**\n * @deprecated TouchableNativeFeedback will be removed in the future version of Gesture Handler. Use Pressable instead.\n */\nconst TouchableNativeFeedback = RNTouchableNativeFeedback;\n\nexport default TouchableNativeFeedback;\n","import {\n  Animated,\n  Easing,\n  StyleSheet,\n  View,\n  TouchableOpacityProps as RNTouchableOpacityProps,\n} from 'react-native';\nimport GenericTouchable, { TOUCHABLE_STATE } from './GenericTouchable';\nimport type { GenericTouchableProps } from './GenericTouchableProps';\nimport * as React from 'react';\nimport { Component } from 'react';\n\n/**\n * @deprecated TouchableOpacity will be removed in the future version of Gesture Handler. Use Pressable instead.\n */\nexport type TouchableOpacityProps = RNTouchableOpacityProps &\n  GenericTouchableProps & {\n    useNativeAnimations?: boolean;\n  };\n\n/**\n * @deprecated TouchableOpacity will be removed in the future version of Gesture Handler. Use Pressable instead.\n *\n * TouchableOpacity bases on timing animation which has been used in RN's core\n */\nexport default class TouchableOpacity extends Component<TouchableOpacityProps> {\n  static defaultProps = {\n    ...GenericTouchable.defaultProps,\n    activeOpacity: 0.2,\n  };\n\n  // Opacity is 1 one by default but could be overwritten\n  getChildStyleOpacityWithDefault = () => {\n    const childStyle = StyleSheet.flatten(this.props.style) || {};\n    return childStyle.opacity == null\n      ? 1\n      : (childStyle.opacity.valueOf() as number);\n  };\n\n  opacity = new Animated.Value(this.getChildStyleOpacityWithDefault());\n\n  setOpacityTo = (value: number, duration: number) => {\n    Animated.timing(this.opacity, {\n      toValue: value,\n      duration: duration,\n      easing: Easing.inOut(Easing.quad),\n      useNativeDriver: this.props.useNativeAnimations ?? true,\n    }).start();\n  };\n\n  onStateChange = (_from: number, to: number) => {\n    if (to === TOUCHABLE_STATE.BEGAN) {\n      this.setOpacityTo(this.props.activeOpacity!, 0);\n    } else if (\n      to === TOUCHABLE_STATE.UNDETERMINED ||\n      to === TOUCHABLE_STATE.MOVED_OUTSIDE\n    ) {\n      this.setOpacityTo(this.getChildStyleOpacityWithDefault(), 150);\n    }\n  };\n\n  render() {\n    const { style = {}, ...rest } = this.props;\n    return (\n      <GenericTouchable\n        {...rest}\n        style={[\n          style,\n          {\n            opacity: this.opacity as unknown as number, // TODO: fix this\n          },\n        ]}\n        onStateChange={this.onStateChange}>\n        {this.props.children ? this.props.children : <View />}\n      </GenericTouchable>\n    );\n  }\n}\n","import * as React from 'react';\nimport { PropsWithChildren } from 'react';\nimport GenericTouchable from './GenericTouchable';\nimport type { GenericTouchableProps } from './GenericTouchableProps';\n\n/**\n * @deprecated TouchableWithoutFeedback will be removed in the future version of Gesture Handler. Use Pressable instead.\n */\nexport type TouchableWithoutFeedbackProps = GenericTouchableProps;\n\n/**\n * @deprecated TouchableWithoutFeedback will be removed in the future version of Gesture Handler. Use Pressable instead.\n */\nconst TouchableWithoutFeedback = React.forwardRef<\n  GenericTouchable,\n  PropsWithChildren<TouchableWithoutFeedbackProps>\n>(\n  (\n    {\n      delayLongPress = 600,\n      extraButtonProps = {\n        rippleColor: 'transparent',\n        exclusive: true,\n      },\n      ...rest\n    },\n\n    ref\n  ) => (\n    <GenericTouchable\n      ref={ref}\n      delayLongPress={delayLongPress}\n      extraButtonProps={extraButtonProps}\n      {...rest}\n    />\n  )\n);\n\nexport default TouchableWithoutFeedback;\n","// @ts-ignore it's not exported so we need to import it from path\nexport { PressabilityDebugView } from 'react-native/Libraries/Pressability/PressabilityDebug';\n","import * as React from 'react';\nimport { Platform, UIManager, DeviceEventEmitter, EmitterSubscription } from 'react-native';\nimport { customDirectEventTypes } from './customDirectEventTypes';\nimport RNGestureHandlerModule from '../RNGestureHandlerModule';\nimport { State } from '../State';\nimport { handlerIDToTag, registerOldGestureHandler, unregisterOldGestureHandler } from './handlersRegistry';\nimport { getNextHandlerTag } from './getNextHandlerTag';\nimport { BaseGestureHandlerProps, GestureEvent, HandlerStateChangeEvent } from './gestureHandlerCommon';\nimport { filterConfig, scheduleFlushOperations } from './utils';\nimport findNodeHandle from '../findNodeHandle';\nimport { ValueOf } from '../typeUtils';\nimport { deepEqual, isFabric, isReact19, isTestEnv, tagMessage } from '../utils';\nimport { ActionType } from '../ActionType';\nimport { PressabilityDebugView } from './PressabilityDebugView';\nimport GestureHandlerRootViewContext from '../GestureHandlerRootViewContext';\nimport { ghQueueMicrotask } from '../ghQueueMicrotask';\nimport { MountRegistry } from '../mountRegistry';\nimport { ReactElement } from 'react';\nconst UIManagerAny = UIManager as any;\ncustomDirectEventTypes.topGestureHandlerEvent = {\n  registrationName: 'onGestureHandlerEvent'\n};\nconst customGHEventsConfigFabricAndroid = {\n  topOnGestureHandlerEvent: {\n    registrationName: 'onGestureHandlerEvent'\n  },\n  topOnGestureHandlerStateChange: {\n    registrationName: 'onGestureHandlerStateChange'\n  }\n};\nconst customGHEventsConfig = {\n  onGestureHandlerEvent: {\n    registrationName: 'onGestureHandlerEvent'\n  },\n  onGestureHandlerStateChange: {\n    registrationName: 'onGestureHandlerStateChange'\n  },\n  // When using React Native Gesture Handler for Animated.event with useNativeDriver: true\n  // on Android with Fabric enabled, the native part still sends the native events to JS\n  // but prefixed with \"top\". We cannot simply rename the events above so they are prefixed\n  // with \"top\" instead of \"on\" because in such case Animated.events would not be registered.\n  // That's why we need to register another pair of event names.\n  // The incoming events will be queued but never handled.\n  // Without this piece of code below, you'll get the following JS error:\n  // Unsupported top level event type \"topOnGestureHandlerEvent\" dispatched\n  ...(isFabric() && Platform.OS === 'android' && customGHEventsConfigFabricAndroid)\n};\n\n// Add gesture specific events to genericDirectEventTypes object exported from UIManager\n// native module.\n// Once new event types are registered with react it is possible to dispatch these\n// events to all kind of native views.\nUIManagerAny.genericDirectEventTypes = {\n  ...UIManagerAny.genericDirectEventTypes,\n  ...customGHEventsConfig\n};\nconst UIManagerConstants = UIManagerAny.getViewManagerConfig?.('getConstants');\nif (UIManagerConstants) {\n  UIManagerConstants.genericDirectEventTypes = {\n    ...UIManagerConstants.genericDirectEventTypes,\n    ...customGHEventsConfig\n  };\n}\n\n// Wrap JS responder calls and notify gesture handler manager\nconst {\n  setJSResponder: oldSetJSResponder = () => {\n    // no-op\n  },\n  clearJSResponder: oldClearJSResponder = () => {\n    // no-op\n  }\n} = UIManagerAny;\nUIManagerAny.setJSResponder = (tag: number, blockNativeResponder: boolean) => {\n  RNGestureHandlerModule.handleSetJSResponder(tag, blockNativeResponder);\n  oldSetJSResponder(tag, blockNativeResponder);\n};\nUIManagerAny.clearJSResponder = () => {\n  RNGestureHandlerModule.handleClearJSResponder();\n  oldClearJSResponder();\n};\nlet allowTouches = true;\nconst DEV_ON_ANDROID = __DEV__ && Platform.OS === 'android';\n// Toggled inspector blocks touch events in order to allow inspecting on Android\n// This needs to be a global variable in order to set initial state for `allowTouches` property in Handler component\nif (DEV_ON_ANDROID) {\n  DeviceEventEmitter.addListener('toggleElementInspector', () => {\n    allowTouches = !allowTouches;\n  });\n}\ntype HandlerProps<T extends Record<string, unknown>> = Readonly<React.PropsWithChildren<BaseGestureHandlerProps<T>>>;\nfunction hasUnresolvedRefs<T extends Record<string, unknown>>(props: HandlerProps<T>) {\n  // TODO(TS) - add type for extract arg\n  const extract = (refs: any | any[]) => {\n    if (!Array.isArray(refs)) {\n      return refs && refs.current === null;\n    }\n    return refs.some(r => r && r.current === null);\n  };\n  return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n}\nconst stateToPropMappings = {\n  [State.UNDETERMINED]: undefined,\n  [State.BEGAN]: 'onBegan',\n  [State.FAILED]: 'onFailed',\n  [State.CANCELLED]: 'onCancelled',\n  [State.ACTIVE]: 'onActivated',\n  [State.END]: 'onEnded'\n} as const;\ntype CreateHandlerArgs<HandlerPropsT extends Record<string, unknown>> = Readonly<{\n  name: string;\n  allowedProps: Readonly<Extract<keyof HandlerPropsT, string>[]>;\n  config: Readonly<Record<string, unknown>>;\n  transformProps?: (props: HandlerPropsT) => HandlerPropsT;\n  customNativeProps?: Readonly<string[]>;\n}>;\n\n// TODO(TS) fix event types\ntype InternalEventHandlers = {\n  onGestureHandlerEvent?: (event: any) => void;\n  onGestureHandlerStateChange?: (event: any) => void;\n};\ntype AttachGestureHandlerWeb = (handlerTag: number,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nnewView: any, _actionType: ActionType, propsRef: React.RefObject<unknown>) => void;\nconst UNRESOLVED_REFS_RETRY_LIMIT = 1;\n\n// TODO(TS) - make sure that BaseGestureHandlerProps doesn't need other generic parameter to work with custom properties.\nexport default function createHandler<T extends BaseGestureHandlerProps<U>, U extends Record<string, unknown>>({\n  name,\n  allowedProps = [],\n  config = {},\n  transformProps,\n  customNativeProps = []\n}: CreateHandlerArgs<T>): React.ComponentType<T & React.RefAttributes<any>> {\n  interface HandlerState {\n    allowTouches: boolean;\n  }\n  class Handler extends React.Component<T & InternalEventHandlers, HandlerState> {\n    static displayName = name;\n    static contextType = GestureHandlerRootViewContext;\n    private handlerTag = -1;\n    private config: Record<string, unknown>;\n    private propsRef: React.MutableRefObject<unknown>;\n    private isMountedRef: React.MutableRefObject<boolean | null>;\n    private viewNode: any;\n    private viewTag?: number;\n    private inspectorToggleListener?: EmitterSubscription;\n    constructor(props: T & InternalEventHandlers) {\n      super(props);\n      this.config = {};\n      this.propsRef = React.createRef();\n      this.isMountedRef = React.createRef();\n      this.state = {\n        allowTouches\n      };\n      if (props.id) {\n        if (handlerIDToTag[props.id] !== undefined) {\n          throw new Error(`Handler with ID \"${props.id}\" already registered`);\n        }\n        handlerIDToTag[props.id] = this.handlerTag;\n      }\n    }\n    componentDidMount() {\n      const props: HandlerProps<U> = this.props;\n      this.isMountedRef.current = true;\n      if (DEV_ON_ANDROID) {\n        this.inspectorToggleListener = DeviceEventEmitter.addListener('toggleElementInspector', () => {\n          this.setState(_ => ({\n            allowTouches\n          }));\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        });\n      }\n      if (hasUnresolvedRefs(props)) {\n        // If there are unresolved refs (e.g. \".current\" has not yet been set)\n        // passed as `simultaneousHandlers` or `waitFor`, we enqueue a call to\n        // _update method that will try to update native handler props using\n        // queueMicrotask. This makes it so update() function gets called after all\n        // react components are mounted and we expect the missing ref object to\n        // be resolved by then.\n        ghQueueMicrotask(() => {\n          this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n        });\n      }\n      this.createGestureHandler(filterConfig(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config));\n      if (!this.viewNode) {\n        throw new Error(`[Gesture Handler] Failed to obtain view for ${Handler.displayName}. Note that old API doesn't support functional components.`);\n      }\n      this.attachGestureHandler(findNodeHandle(this.viewNode) as number); // TODO(TS) - check if this can be null\n    }\n    componentDidUpdate() {\n      const viewTag = findNodeHandle(this.viewNode);\n      if (this.viewTag !== viewTag) {\n        this.attachGestureHandler(viewTag as number); // TODO(TS) - check interaction between _viewTag & findNodeHandle\n      }\n      this.update(UNRESOLVED_REFS_RETRY_LIMIT);\n    }\n    componentWillUnmount() {\n      this.inspectorToggleListener?.remove();\n      this.isMountedRef.current = false;\n      if (Platform.OS !== 'web') {\n        unregisterOldGestureHandler(this.handlerTag);\n      }\n      RNGestureHandlerModule.dropGestureHandler(this.handlerTag);\n      scheduleFlushOperations();\n      // We can't use this.props.id directly due to TS generic type narrowing bug, see https://github.com/microsoft/TypeScript/issues/13995 for more context\n      const handlerID: string | undefined = this.props.id;\n      if (handlerID) {\n        // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n        delete handlerIDToTag[handlerID];\n      }\n      MountRegistry.gestureHandlerWillUnmount(this);\n    }\n    private onGestureHandlerEvent = (event: GestureEvent<U>) => {\n      if (event.nativeEvent.handlerTag === this.handlerTag) {\n        if (typeof this.props.onGestureEvent === 'function') {\n          this.props.onGestureEvent?.(event);\n        }\n      } else {\n        this.props.onGestureHandlerEvent?.(event);\n      }\n    };\n\n    // TODO(TS) - make sure this is right type for event\n    private onGestureHandlerStateChange = (event: HandlerStateChangeEvent<U>) => {\n      if (event.nativeEvent.handlerTag === this.handlerTag) {\n        if (typeof this.props.onHandlerStateChange === 'function') {\n          this.props.onHandlerStateChange?.(event);\n        }\n        const state: ValueOf<typeof State> = event.nativeEvent.state;\n        const stateEventName = stateToPropMappings[state];\n        const eventHandler = stateEventName && this.props[stateEventName];\n        if (eventHandler && typeof eventHandler === 'function') {\n          eventHandler(event);\n        }\n      } else {\n        this.props.onGestureHandlerStateChange?.(event);\n      }\n    };\n    private refHandler = (node: any) => {\n      this.viewNode = node;\n      const child = React.Children.only(this.props.children);\n      // @ts-ignore Since React 19 ref is accessible as standard prop\n      // https://react.dev/blog/2024/04/25/react-19-upgrade-guide#deprecated-element-ref\n      const ref = isReact19() ? (child as ReactElement).props?.ref : child?.ref;\n      if (!ref) {\n        return;\n      }\n      if (typeof ref === 'function') {\n        ref(node);\n      } else {\n        ref.current = node;\n      }\n    };\n    private createGestureHandler = (newConfig: Readonly<Record<string, unknown>>) => {\n      this.handlerTag = getNextHandlerTag();\n      this.config = newConfig;\n      RNGestureHandlerModule.createGestureHandler(name, this.handlerTag, newConfig);\n    };\n    private attachGestureHandler = (newViewTag: number) => {\n      this.viewTag = newViewTag;\n      if (Platform.OS === 'web') {\n        // Typecast due to dynamic resolution, attachGestureHandler should have web version signature in this branch\n        (RNGestureHandlerModule.attachGestureHandler as AttachGestureHandlerWeb)(this.handlerTag, newViewTag, ActionType.JS_FUNCTION_OLD_API,\n        // ignored on web\n        this.propsRef);\n      } else {\n        registerOldGestureHandler(this.handlerTag, {\n          onGestureEvent: this.onGestureHandlerEvent,\n          onGestureStateChange: this.onGestureHandlerStateChange\n        });\n        const actionType = (() => {\n          const onGestureEvent = this.props?.onGestureEvent;\n          const isGestureHandlerWorklet = onGestureEvent && ('current' in onGestureEvent || 'workletEventHandler' in onGestureEvent);\n          const onHandlerStateChange = this.props?.onHandlerStateChange;\n          const isStateChangeHandlerWorklet = onHandlerStateChange && ('current' in onHandlerStateChange || 'workletEventHandler' in onHandlerStateChange);\n          const isReanimatedHandler = isGestureHandlerWorklet || isStateChangeHandlerWorklet;\n          if (isReanimatedHandler) {\n            // Reanimated worklet\n            return ActionType.REANIMATED_WORKLET;\n          } else if (onGestureEvent && '__isNative' in onGestureEvent) {\n            // Animated.event with useNativeDriver: true\n            return ActionType.NATIVE_ANIMATED_EVENT;\n          } else {\n            // JS callback or Animated.event with useNativeDriver: false\n            return ActionType.JS_FUNCTION_OLD_API;\n          }\n        })();\n        RNGestureHandlerModule.attachGestureHandler(this.handlerTag, newViewTag, actionType);\n      }\n      scheduleFlushOperations();\n      ghQueueMicrotask(() => {\n        MountRegistry.gestureHandlerWillMount(this);\n      });\n    };\n    private updateGestureHandler = (newConfig: Readonly<Record<string, unknown>>) => {\n      this.config = newConfig;\n      RNGestureHandlerModule.updateGestureHandler(this.handlerTag, newConfig);\n      scheduleFlushOperations();\n    };\n    private update(remainingTries: number) {\n      if (!this.isMountedRef.current) {\n        return;\n      }\n      const props: HandlerProps<U> = this.props;\n\n      // When ref is set via a function i.e. `ref={(r) => refObject.current = r}` instead of\n      // `ref={refObject}` it's possible that it won't be resolved in time. Seems like trying\n      // again is easy enough fix.\n      if (hasUnresolvedRefs(props) && remainingTries > 0) {\n        ghQueueMicrotask(() => {\n          this.update(remainingTries - 1);\n        });\n      } else {\n        const newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, [...allowedProps, ...customNativeProps], config);\n        if (!deepEqual(this.config, newConfig)) {\n          this.updateGestureHandler(newConfig);\n        }\n      }\n    }\n    setNativeProps(updates: any) {\n      const mergedProps = {\n        ...this.props,\n        ...updates\n      };\n      const newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, [...allowedProps, ...customNativeProps], config);\n      this.updateGestureHandler(newConfig);\n    }\n    render() {\n      if (__DEV__ && !this.context && !isTestEnv() && Platform.OS !== 'web') {\n        throw new Error(name + ' must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.');\n      }\n      let gestureEventHandler = this.onGestureHandlerEvent;\n      // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n      type OnGestureEventHandlers = {\n        onGestureEvent?: BaseGestureHandlerProps<U>['onGestureEvent'];\n        onGestureHandlerEvent?: InternalEventHandlers['onGestureHandlerEvent'];\n      };\n      const {\n        onGestureEvent,\n        onGestureHandlerEvent\n      }: OnGestureEventHandlers = this.props;\n      if (onGestureEvent && typeof onGestureEvent !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerEvent) {\n          throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n        }\n        gestureEventHandler = onGestureEvent;\n      } else {\n        if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n          throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n        }\n      }\n      let gestureStateEventHandler = this.onGestureHandlerStateChange;\n      // Another instance of https://github.com/microsoft/TypeScript/issues/13995\n      type OnGestureStateChangeHandlers = {\n        onHandlerStateChange?: BaseGestureHandlerProps<U>['onHandlerStateChange'];\n        onGestureHandlerStateChange?: InternalEventHandlers['onGestureHandlerStateChange'];\n      };\n      const {\n        onHandlerStateChange,\n        onGestureHandlerStateChange\n      }: OnGestureStateChangeHandlers = this.props;\n      if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n        // If it's not a method it should be an native Animated.event\n        // object. We set it directly as the handler for the view\n        // In this case nested handlers are not going to be supported\n        if (onGestureHandlerStateChange) {\n          throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n        }\n        gestureStateEventHandler = onHandlerStateChange;\n      } else {\n        if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n          throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n        }\n      }\n      const events = {\n        onGestureHandlerEvent: this.state.allowTouches ? gestureEventHandler : undefined,\n        onGestureHandlerStateChange: this.state.allowTouches ? gestureStateEventHandler : undefined\n      };\n      this.propsRef.current = events;\n      let child: any = null;\n      try {\n        child = React.Children.only(this.props.children);\n      } catch (e) {\n        throw new Error(tagMessage(`${name} got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`));\n      }\n      let grandChildren = child.props.children;\n      if (__DEV__ && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n        grandChildren = React.Children.toArray(grandChildren);\n        grandChildren.push(<PressabilityDebugView key=\"pressabilityDebugView\" color=\"mediumspringgreen\" hitSlop={child.props.hitSlop} />);\n      }\n      return React.cloneElement(child, {\n        ref: this.refHandler,\n        collapsable: false,\n        ...(isTestEnv() ? {\n          handlerType: name,\n          handlerTag: this.handlerTag,\n          enabled: this.props.enabled\n        } : {}),\n        testID: this.props.testID ?? child.props.testID,\n        ...events\n      }, grandChildren);\n    }\n  }\n  return Handler;\n}","import * as React from 'react';\nimport { useImperativeHandle, useRef } from 'react';\n\nimport {\n  NativeViewGestureHandler,\n  NativeViewGestureHandlerProps,\n  nativeViewProps,\n} from './NativeViewGestureHandler';\n\n/*\n * This array should consist of:\n *   - All keys in propTypes from NativeGestureHandler\n *     (and all keys in GestureHandlerPropTypes)\n *   - 'onGestureHandlerEvent'\n *   - 'onGestureHandlerStateChange'\n */\nconst NATIVE_WRAPPER_PROPS_FILTER = [\n  ...nativeViewProps,\n  'onGestureHandlerEvent',\n  'onGestureHandlerStateChange',\n] as const;\n\nexport default function createNativeWrapper<P>(\n  Component: React.ComponentType<P>,\n  config: Readonly<NativeViewGestureHandlerProps> = {}\n) {\n  const ComponentWrapper = React.forwardRef<\n    React.ComponentType<any>,\n    P & NativeViewGestureHandlerProps\n  >((props, ref) => {\n    // Filter out props that should be passed to gesture handler wrapper\n    const { gestureHandlerProps, childProps } = Object.keys(props).reduce(\n      (res, key) => {\n        // TS being overly protective with it's types, see https://github.com/microsoft/TypeScript/issues/26255#issuecomment-458013731 for more info\n        const allowedKeys: readonly string[] = NATIVE_WRAPPER_PROPS_FILTER;\n        if (allowedKeys.includes(key)) {\n          // @ts-ignore FIXME(TS)\n          res.gestureHandlerProps[key] = props[key];\n        } else {\n          // @ts-ignore FIXME(TS)\n          res.childProps[key] = props[key];\n        }\n        return res;\n      },\n      {\n        gestureHandlerProps: { ...config }, // Watch out not to modify config\n        childProps: {\n          enabled: props.enabled,\n          hitSlop: props.hitSlop,\n          testID: props.testID,\n        } as P,\n      }\n    );\n    const _ref = useRef<React.ComponentType<P>>(null);\n    const _gestureHandlerRef = useRef<React.ComponentType<P>>(null);\n    useImperativeHandle(\n      ref,\n      // @ts-ignore TODO(TS) decide how nulls work in this context\n      () => {\n        const node = _gestureHandlerRef.current;\n        // Add handlerTag for relations config\n        if (_ref.current && node) {\n          // @ts-ignore FIXME(TS) think about createHandler return type\n          _ref.current.handlerTag = node.handlerTag;\n          return _ref.current;\n        }\n        return null;\n      },\n      [_ref, _gestureHandlerRef]\n    );\n    return (\n      <NativeViewGestureHandler\n        {...gestureHandlerProps}\n        // @ts-ignore TODO(TS)\n        ref={_gestureHandlerRef}>\n        <Component {...childProps} ref={_ref} />\n      </NativeViewGestureHandler>\n    );\n  });\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  ComponentWrapper.displayName =\n    Component?.displayName ||\n    // @ts-ignore if render doesn't exist it will return undefined and go further\n    Component?.render?.name ||\n    (typeof Component === 'string' && Component) ||\n    'ComponentWrapper';\n\n  return ComponentWrapper;\n}\n","import React from 'react';\nimport { Reanimated } from '../reanimatedWrapper';\nimport { tagMessage } from '../../../utils';\n\nexport class Wrap extends React.Component<{\n  onGestureHandlerEvent?: unknown;\n  // Implicit `children` prop has been removed in @types/react^18.0.0\n  children?: React.ReactNode;\n}> {\n  render() {\n    try {\n      // I don't think that fighting with types over such a simple function is worth it\n      // The only thing it does is add 'collapsable: false' to the child component\n      // to make sure it is in the native view hierarchy so the detector can find\n      // correct viewTag to attach to.\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const child: any = React.Children.only(this.props.children);\n      return React.cloneElement(\n        child,\n        { collapsable: false },\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n        child.props.children\n      );\n    } catch (e) {\n      throw new Error(\n        tagMessage(\n          `GestureDetector got more than one view as a child. If you want the gesture to work on multiple views, wrap them with a common parent and attach the gesture to that view.`\n        )\n      );\n    }\n  }\n}\n\nexport const AnimatedWrap =\n  Reanimated?.default?.createAnimatedComponent(Wrap) ?? Wrap;\n","/* eslint-disable react/no-unused-prop-types */\nimport React, {\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n} from 'react';\nimport { Platform } from 'react-native';\nimport findNodeHandle from '../../../findNodeHandle';\nimport { GestureType } from '../gesture';\nimport { UserSelect, TouchAction } from '../../gestureHandlerCommon';\nimport { ComposedGesture } from '../gestureComposition';\nimport { isTestEnv } from '../../../utils';\n\nimport GestureHandlerRootViewContext from '../../../GestureHandlerRootViewContext';\nimport { AttachedGestureState, GestureDetectorState } from './types';\nimport { useAnimatedGesture } from './useAnimatedGesture';\nimport { attachHandlers } from './attachHandlers';\nimport { needsToReattach } from './needsToReattach';\nimport { dropHandlers } from './dropHandlers';\nimport { useWebEventHandlers } from './utils';\nimport { Wrap, AnimatedWrap } from './Wrap';\nimport { useDetectorUpdater } from './useDetectorUpdater';\nimport { useViewRefHandler } from './useViewRefHandler';\nimport { useMountReactions } from './useMountReactions';\n\nfunction propagateDetectorConfig(\n  props: GestureDetectorProps,\n  gesture: ComposedGesture | GestureType\n) {\n  const keysToPropagate: (keyof GestureDetectorProps)[] = [\n    'userSelect',\n    'enableContextMenu',\n    'touchAction',\n  ];\n\n  for (const key of keysToPropagate) {\n    const value = props[key];\n    if (value === undefined) {\n      continue;\n    }\n\n    for (const g of gesture.toGestureArray()) {\n      const config = g.config as { [key: string]: unknown };\n      config[key] = value;\n    }\n  }\n}\n\ninterface GestureDetectorProps {\n  children?: React.ReactNode;\n  /**\n   * A gesture object containing the configuration and callbacks.\n   * Can be any of:\n   * - base gestures (`Tap`, `Pan`, ...)\n   * - `ComposedGesture` (`Race`, `Simultaneous`, `Exclusive`)\n   */\n  gesture: ComposedGesture | GestureType;\n  /**\n   * #### Web only\n   * This parameter allows to specify which `userSelect` property should be applied to underlying view.\n   * Possible values are `\"none\" | \"auto\" | \"text\"`. Default value is set to `\"none\"`.\n   */\n  userSelect?: UserSelect;\n  /**\n   * #### Web only\n   * Specifies whether context menu should be enabled after clicking on underlying view with right mouse button.\n   * Default value is set to `false`.\n   */\n  enableContextMenu?: boolean;\n  /**\n   * #### Web only\n   * This parameter allows to specify which `touchAction` property should be applied to underlying view.\n   * Supports all CSS touch-action values (e.g. `\"none\"`, `\"pan-y\"`). Default value is set to `\"none\"`.\n   */\n  touchAction?: TouchAction;\n}\n\n/**\n * `GestureDetector` is responsible for creating and updating native gesture handlers based on the config of provided gesture.\n *\n * ### Props\n * - `gesture`\n * - `userSelect` (**Web only**)\n * - `enableContextMenu` (**Web only**)\n * - `touchAction` (**Web only**)\n *\n * ### Remarks\n * - Gesture Detector will use first native view in its subtree to recognize gestures, however if this view is used only to group its children it may get automatically collapsed.\n * - Using the same instance of a gesture across multiple Gesture Detectors is not possible.\n *\n * @see https://docs.swmansion.com/react-native-gesture-handler/docs/gestures/gesture-detector\n */\nexport const GestureDetector = (props: GestureDetectorProps) => {\n  const rootViewContext = useContext(GestureHandlerRootViewContext);\n  if (__DEV__ && !rootViewContext && !isTestEnv() && Platform.OS !== 'web') {\n    throw new Error(\n      'GestureDetector must be used as a descendant of GestureHandlerRootView. Otherwise the gestures will not be recognized. See https://docs.swmansion.com/react-native-gesture-handler/docs/installation for more details.'\n    );\n  }\n\n  // Gesture config should be wrapped with useMemo to prevent unnecessary re-renders\n  const gestureConfig = props.gesture;\n  propagateDetectorConfig(props, gestureConfig);\n\n  const gesturesToAttach = useMemo(\n    () => gestureConfig.toGestureArray(),\n    [gestureConfig]\n  );\n  const shouldUseReanimated = gesturesToAttach.some(\n    (g) => g.shouldUseReanimated\n  );\n\n  const webEventHandlersRef = useWebEventHandlers();\n  // Store state in ref to prevent unnecessary renders\n  const state = useRef<GestureDetectorState>({\n    firstRender: true,\n    viewRef: null,\n    previousViewTag: -1,\n    forceRebuildReanimatedEvent: false,\n  }).current;\n\n  const preparedGesture = React.useRef<AttachedGestureState>({\n    attachedGestures: [],\n    animatedEventHandler: null,\n    animatedHandlers: null,\n    shouldUseReanimated: shouldUseReanimated,\n    isMounted: false,\n  }).current;\n\n  const updateAttachedGestures = useDetectorUpdater(\n    state,\n    preparedGesture,\n    gesturesToAttach,\n    gestureConfig,\n    webEventHandlersRef\n  );\n\n  const refHandler = useViewRefHandler(state, updateAttachedGestures);\n\n  // Reanimated event should be rebuilt only when gestures are reattached, otherwise\n  // config update will be enough as all necessary items are stored in shared values anyway\n  const needsToRebuildReanimatedEvent =\n    state.firstRender ||\n    state.forceRebuildReanimatedEvent ||\n    needsToReattach(preparedGesture, gesturesToAttach);\n  state.forceRebuildReanimatedEvent = false;\n\n  useAnimatedGesture(preparedGesture, needsToRebuildReanimatedEvent);\n\n  useLayoutEffect(() => {\n    const viewTag = findNodeHandle(state.viewRef) as number;\n    preparedGesture.isMounted = true;\n\n    attachHandlers({\n      preparedGesture,\n      gestureConfig,\n      gesturesToAttach,\n      webEventHandlersRef,\n      viewTag,\n    });\n\n    return () => {\n      preparedGesture.isMounted = false;\n      dropHandlers(preparedGesture);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (state.firstRender) {\n      state.firstRender = false;\n    } else {\n      updateAttachedGestures();\n    }\n  }, [props]);\n\n  useMountReactions(updateAttachedGestures, preparedGesture);\n\n  if (shouldUseReanimated) {\n    return (\n      <AnimatedWrap\n        ref={refHandler}\n        onGestureHandlerEvent={preparedGesture.animatedEventHandler}>\n        {props.children}\n      </AnimatedWrap>\n    );\n  } else {\n    return <Wrap ref={refHandler}>{props.children}</Wrap>;\n  }\n};\n"],"names":["_is_native_reflect_construct","require","_set_prototype_of","_construct","Parent","args","Class","exports","Reflect","construct","a","Constructor","Function","instance","arguments","_super_prop_base","_get","target","property","receiver","get","base","desc","Object","_get_prototype_of","object","reactIs","REACT_STATICS","KNOWN_STATICS","FORWARD_REF_STATICS","MEMO_STATICS","TYPE_STATICS","getStatics","component","defineProperty","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","targetStatics","sourceStatics","i","key","descriptor","e","module","invariant","condition","format","b","c","d","f","process","undefined","Error","error","argIndex","hasSymbol","Symbol","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_ASYNC_MODE_TYPE","REACT_CONCURRENT_MODE_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","REACT_FUNDAMENTAL_TYPE","REACT_RESPONDER_TYPE","REACT_SCOPE_TYPE","isValidElementType","type","typeOf","$$typeof","$$typeofType","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","hasWarnedAboutDeprecatedIsAsyncMode","isAsyncMode","console","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","NativeViewGestureHandlerPayload","createHandler","BaseGestureHandlerProps","baseGestureHandlerProps","nativeViewGestureHandlerProps","const","NativeViewGestureConfig","shouldActivateOnStart","disallowInterruption","NativeViewGestureHandlerProps","nativeViewProps","nativeViewHandlerName","NativeViewGestureHandler","name","allowedProps","config","TurboModuleRegistry","TurboModule","Double","Spec","handleSetJSResponder","tag","blockNativeResponder","handleClearJSResponder","createGestureHandler","handlerName","handlerTag","attachGestureHandler","newView","actionType","updateGestureHandler","newConfig","dropGestureHandler","install","flushOperations","getEnforcing","codegenNativeComponent","Int32","WithDefault","Float","ViewProps","ColorValue","NativeProps","exclusive","foreground","borderless","enabled","rippleColor","rippleRadius","touchSoundDisabled","borderWidth","borderColor","borderStyle","NativeComponentRegistry","nativeComponentName","__INTERNAL_VIEW_CONFIG","uiViewClassName","validAttributes","default","ActionType","DiagonalDirections","Directions","RIGHT","LEFT","UP","DOWN","enableExperimentalWebImplementation","enableLegacyWebImplementation","isNewWebImplementationEnabled","useNewWebImplementation","getWasCalled","ref","_utils","_reactnative","shouldUseLegacyImplementation","_default","_react","PointerType","_NativeRNGestureHandlerModule","_ReactNative","State","TouchEventType","_Pressable","addInsets","gestureToPressableEvent","gestureTouchToPressableEvent","isTouchWithinInset","numberAsInset","value","touchDataToPressEvent","data","timestamp","targetId","gestureToPressEvent","event","dimensions","inset","touch","Date","pressEvent","_event_allTouches_at","_event_allTouches_at1","_event_allTouches_at2","_event_allTouches_at3","touchesList","changedTouchesList","_TouchableHighlight","_TouchableNativeFeedback","_TouchableOpacity","_TouchableWithoutFeedback","getShadowNodeFromRef","findHostInstance_DEPRECATED","getInternalInstanceHandleFromPublicInstance","_ReactFabric_default","ReactFabric","_ref","ghQueueMicrotask","setImmediate","requestAnimationFrame","queueMicrotask","FlingGestureHandler","flingGestureHandlerProps","flingHandlerName","_createHandler","_gestureHandlerCommon","ForceTouchGestureHandler","forceTouchGestureHandlerProps","forceTouchHandlerName","ForceTouchFallback","componentDidMount","render","_PlatformConstants","LongPressGestureHandler","longPressGestureHandlerProps","longPressHandlerName","PanGestureHandler","managePanProps","panGestureHandlerCustomNativeProps","panGestureHandlerProps","panHandlerName","validatePanGestureHandlerProps","props","Array","transformPanGestureHandlerProps","res","__DEV__","PinchGestureHandler","pinchHandlerName","RotationGestureHandler","rotationHandlerName","TapGestureHandler","tapGestureHandlerProps","tapHandlerName","_ReactNativeViewConfigRegistry","MouseButton","baseGestureHandlerWithDetectorProps","commonProps","componentInteractionProps","attachHandlers","preparedGesture","gestureConfig","gesturesToAttach","viewTag","webEventHandlersRef","_ghQueueMicrotask","handler","_utils1","_RNGestureHandlerModule","_handlersRegistry","gesture","_ActionType","_mountRegistry","isAnimatedGesture","g","dropHandlers","needsToReattach","newGestures","updateHandlers","attachedGestures","shouldUpdateSharedValueIfUsed","newHandlersValue","useAnimatedGesture","_worklet_12174736290982_init_data","getHandler","_e","global","_gesture","_worklet_6825086001765_init_data","touchEventTypeToCallbackType","eventType","_TouchEventType","_worklet_6506685255530_init_data","runWorklet","_worklet_8201524245094_init_data","isStateChangeEvent","_worklet_6575076970903_init_data","isTouchEvent","_worklet_5273055625178_init_data","needsRebuild","_reanimatedWrapper","sharedHandlersCallbacks","lastUpdateEvent","stateControllers","callback","pnpm_useAnimatedGestureTs6","currentCallback","_State","_gestureStateManager","useDetectorUpdater","state","forceRender","updateAttachedGestures","skipConfigUpdate","_findNodeHandle","didUnderlyingViewChange","_needsToReattach","_dropHandlers","_attachHandlers","_updateHandlers","useMountReactions","shouldUpdateDetector","relation","updateDetector","attachedGesture","blocksHandlers","requireToFail","simultaneousWith","useViewRefHandler","refHandler","node","_getShadowNodeFromRef","ALLOWED_PROPS","checkGestureCallbacksForWorklets","extractGestureRelations","useForceRender","useWebEventHandlers","validateDetectorChildren","_TapGestureHandler","_PanGestureHandler","_LongPressGestureHandler","_ForceTouchGestureHandler","_FlingGestureHandler","_hoverGesture","_NativeViewGestureHandler","convertToHandlerTag","_ref_current","extractValidHandlerTags","interactionGroup","_interactionGroup_map","areSomeNotWorklets","areSomeWorklets","areAllNotWorklets","wrapType","_RNRenderer","_useState","renderState","setRenderState","_eventReceiver","_EnableNewWebImplementation","onGestureHandlerEvent","startListening","stopListening","gestureHandlerEventSubscription","gestureHandlerStateChangeEventSubscription","gestureStateManagers","Map","_handler_handlers","_handler_handlers1","_handler_handlers2","_handler_handlers3","_handler_handlers4","_handler_handlers5","manager","_handler_handlers6","_handler_handlers7","_handler_handlers8","_handler_handlers9","_handler_handlers10","_handler_handlers11","_handler_handlers12","oldHandler","nativeEvent","FlingGesture","numberOfPointers","pointers","direction","ForceTouchGesture","_worklet_11365193947542_init_data","changeEventCalculator","current","previous","changePayload","minForce","force","maxForce","feedbackOnActivation","onChange","BaseGesture","CALLBACK_TYPE","ContinousBaseGesture","Gesture","nextGestureId","addDependency","withRef","isWorklet","onBegin","onStart","onEnd","onFinalize","onTouchesDown","onTouchesMove","onTouchesUp","onTouchesCancelled","shouldCancelWhenOutside","hitSlop","activeCursor","mouseButton","runOnJS","simultaneousWithExternalGesture","gestures","requireExternalGestureToFail","blocksExternalGesture","withTestId","id","cancelsTouchesInView","initialize","_getNextHandlerTag","toGestureArray","prepare","onUpdate","manualActivation","ComposedGesture","ExclusiveGesture","SimultaneousGesture","extendRelation","currentRelation","extendWith","prepareSingleGesture","simultaneousGestures","requireGesturesToFail","simultaneousArrays","x","gestureArrays","GestureObjects","_tapGesture","_panGesture","_pinchGesture","_rotationGesture","_flingGesture","_longPressGesture","_forceTouchGesture","_nativeGesture","_manualGesture","_gestureComposition","GestureStateManager","warningMessage","REANIMATED_AVAILABLE","setGestureState","_worklet_17474649591271_init_data","_worklet_4799367197403_init_data","_worklet_7932903515929_init_data","_worklet_6492077607729_init_data","_worklet_2856860112444_init_data","create","pnpm_gestureStateManagerTs2","pnpm_gestureStateManagerTs3","pnpm_gestureStateManagerTs4","pnpm_gestureStateManagerTs5","HoverEffect","HoverGesture","hoverGestureHandlerProps","_worklet_2074844346342_init_data","effect","LongPressGesture","minDuration","duration","maxDistance","distance","ManualGesture","_worklet_12945462865583_init_data","_previous","NativeGesture","PanGesture","_worklet_1947784830943_init_data","activeOffsetY","offset","activeOffsetX","failOffsetY","failOffsetX","minPointers","maxPointers","minDistance","minVelocity","velocity","minVelocityX","minVelocityY","averageTouches","enableTrackpadTwoFingerGesture","activateAfterLongPress","PinchGesture","_worklet_9876979738005_init_data","Reanimated","_worklet_12835327155090_init_data","pnpm_reanimatedWrapperTs1","RotationGesture","_worklet_11988645380499_init_data","TapGesture","numberOfTaps","count","maxDist","maxDuration","maxDelay","delay","maxDeltaX","delta","maxDeltaY","getNextHandlerTag","findHandler","findHandlerByTestID","findOldGestureHandler","handlerIDToTag","registerHandler","registerOldGestureHandler","unregisterHandler","unregisterOldGestureHandler","oldHandlers","testIDs","testID","filterConfig","findNodeHandle","scheduleFlushOperations","transformIntoHandlerTags","isConfigParam","param","validProps","filteredConfig","defaults","handlerIDs","handle","handlerID","_handlerID_current","flushOperationsScheduled","_GestureButtons","_Directions","_DrawerLayout","_GestureComponents","_gestureObjects","_GestureDetector","_GestureHandlerRootView","_PinchGestureHandler","_PointerType","_RotationGestureHandler","_Swipeable","_Text","_touchables","_createNativeWrapper","_gestureHandlerRootHOC","_init","maybeInitializeFabric","fabricInitialized","MountRegistry","addMountListener","listener","addUnmountListener","gestureHandlerWillMount","gestureHandlerWillUnmount","gestureWillMount","gestureWillUnmount","Set","INT32_MAX","deepEqual","hasProperty","isFabric","isReact19","isRemoteDebuggingEnabled","isTestEnv","tagMessage","toArray","withPrevAndCurrent","array","mapFn","previousArr","currentArr","transformedArr","transformed","msg","_global","localGlobal","obj1","obj2","keys1","keys2","DrawerLayout","DRAG_TOSS","IDLE","DRAGGING","SETTLING","drawerPosition","drawerWidth","drawerType","dragXValue","touchXValue","drawerTranslation","containerWidth","dragX","touchX","translationX","startPositionX","dragOffsetFromOnStartPosition","gestureOptions","ev","_this_props","Math","position","newState","drawerWillShow","velocityX","gestureStartX","dragOffsetBasedOnStart","startOffsetX","projOffsetX","shouldOpen","showing","_this_accessibilityIsModalView_current","_this_pointerEventsView_current","_this_panGestureHandler_current","minSwipeDistance","edgeWidth","fromLeft","gestureOrientation","fromValue","toValue","speed","nextFramePosition","willShow","finished","_this_props1","options","_invariant","overlayOpacity","dynamicOverlayStyles","styles","drawerBackgroundColor","drawerContainerStyle","contentContainerStyle","drawerSlide","containerSlide","reverseContentDirection","dynamicDrawerStyles","openValue","containerStyles","containerTranslateX","drawerTranslateX","closedDrawerOffset","drawerStyles","shouldComponentUpdate","drawerLockMode","BaseButton","BorderlessButton","_GestureHandlerButton","RawButton","RectButton","IS_FABRIC","InnerBaseButton","oldState","pointerInside","active","setTimeout","clearTimeout","unprocessedRippleColor","style","rest","AnimatedInnerBaseButton","AnimatedBaseButton","btnStyles","InnerRectButton","children","resolvedStyle","InnerBorderlessButton","innerRef","DrawerLayoutAndroid","FlatList","RefreshControl","ScrollView","Switch","TextInput","GHScrollView","refreshControlGestureRef","refreshControl","waitFor","flatListProps","scrollViewProps","propName","scrollProps","_RNGestureHandlerButtonNativeComponent","GestureHandlerRootView","_param","_GestureHandlerRootViewContext","DEFAULT_LONG_PRESS_DURATION","IS_TEST_ENV","Pressable","pressableRef","_Gesture","testOnly_pressed","pressRetentionOffset","delayHoverIn","onHoverIn","delayHoverOut","onHoverOut","delayLongPress","unstable_pressDelay","onPress","onPressIn","onPressOut","onLongPress","android_disableSound","android_ripple","disabled","accessible","remainingProps","pressedState","setPressedState","isPressCallbackEnabled","hasPassedBoundsChecks","shouldPreventNativeEffects","normalizedHitSlop","normalizedPressRetentionOffset","hoverInTimeout","hoverOutTimeout","hoverGesture","pressDelayTimeoutRef","isTouchPropagationAllowed","deferredEventPayload","pressInHandler","handlingOnTouchesDown","pressOutHandler","longPressTimeoutRef","onEndHandlingTouchesDown","cancelledMidPress","activateLongPress","longPressMinDuration","innerPressableRef","measureCallback","width","height","pressAndTouchGesture","_pressableRef_current","_x","_y","_innerPressableRef_current","buttonGesture","appliedHitSlop","isPressableEnabled","gesture1","pointerStyle","styleProp","childrenProp","defaultRippleColor","_PressabilityDebugView","Swipeable","friction","overshootFriction","rowTranslation","leftWidth","rowWidth","rightOffset","rightWidth","overshootLeft","overshootRight","transX","Number","_ev_nativeEvent","rowState","_this_state","_this_state1","leftThreshold","rightThreshold","_this_props2","_this_props3","_this_props4","closingDirection","renderLeftActions","renderRightActions","dragOffsetFromLeftEdge","dragOffsetFromRightEdge","left","right","Text","textRef","native","textElement","gestureHandlerRootHOC","Component","Wrapper","_hoistnonreactstatics","TOUCHABLE_STATE","GenericTouchable","shouldCallOnPress","handlePressIn","time","handleMoveOutside","handleGoToUndetermined","reset","moveToState","componentWillUnmount","onMoveIn","onMoveOut","coreProps","TouchableHighlight","_from","to","_GenericTouchable","renderChildren","child","extraUnderlayStyle","TouchableNativeFeedback","TouchableOpacity","childStyle","TouchableWithoutFeedback","extraButtonProps","_PressabilityDebug","UIManagerAny","_customDirectEventTypes","customGHEventsConfigFabricAndroid","customGHEventsConfig","UIManagerConstants","tmp","tmp1","oldSetJSResponder","oldClearJSResponder","allowTouches","DEV_ON_ANDROID","hasUnresolvedRefs","extract","refs","r","stateToPropMappings","UNRESOLVED_REFS_RETRY_LIMIT","transformProps","customNativeProps","Handler","stateEventName","eventHandler","_child_props","_$ref","newViewTag","onGestureEvent","isGestureHandlerWorklet","onHandlerStateChange","isStateChangeHandlerWorklet","isReanimatedHandler","_","componentDidUpdate","_this_inspectorToggleListener","update","remainingTries","setNativeProps","updates","mergedProps","gestureEventHandler","gestureStateEventHandler","onGestureHandlerStateChange","events","grandChildren","createNativeWrapper","NATIVE_WRAPPER_PROPS_FILTER","_Component_render","ComponentWrapper","_Object_keys_reduce","allowedKeys","gestureHandlerProps","childProps","_gestureHandlerRef","AnimatedWrap","Wrap","_Reanimated_default","GestureDetector","propagateDetectorConfig","keysToPropagate","rootViewContext","shouldUseReanimated","_useDetectorUpdater","_useViewRefHandler","needsToRebuildReanimatedEvent","_useAnimatedGesture","_useMountReactions","_Wrap"],"mappings":"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"}