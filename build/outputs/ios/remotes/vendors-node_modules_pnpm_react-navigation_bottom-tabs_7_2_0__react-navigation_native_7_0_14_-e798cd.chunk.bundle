"use strict";
(self["webpackChunkadopta_app"] = self["webpackChunkadopta_app"] || []).push([["vendors-node_modules_pnpm_react-navigation_bottom-tabs_7_2_0__react-navigation_native_7_0_14_-e798cd"], {
"./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/TransitionConfigs/SceneStyleInterpolators.js": 
/*!**********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/TransitionConfigs/SceneStyleInterpolators.js ***!
  \**********************************************************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.forFade = forFade;
exports.forShift = forShift;
/**
 * Simple cross fade animation
 */ function forFade(ref) {
    var current = ref.current;
    return {
        sceneStyle: {
            opacity: current.progress.interpolate({
                inputRange: [
                    -1,
                    0,
                    1
                ],
                outputRange: [
                    0,
                    1,
                    0
                ]
            })
        }
    };
}
/**
 * Animation where the screens slightly shift to left/right
 */ function forShift(ref) {
    var current = ref.current;
    return {
        sceneStyle: {
            opacity: current.progress.interpolate({
                inputRange: [
                    -1,
                    0,
                    1
                ],
                outputRange: [
                    0,
                    1,
                    0
                ]
            }),
            transform: [
                {
                    translateX: current.progress.interpolate({
                        inputRange: [
                            -1,
                            0,
                            1
                        ],
                        outputRange: [
                            -50,
                            0,
                            50
                        ]
                    })
                }
            ]
        }
    };
} //# sourceMappingURL=SceneStyleInterpolators.js.map


}),
"./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/TransitionConfigs/TransitionPresets.js": 
/*!****************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/TransitionConfigs/TransitionPresets.js ***!
  \****************************************************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.ShiftTransition = exports.FadeTransition = void 0;
var _SceneStyleInterpolators = __webpack_require__(/*! ./SceneStyleInterpolators.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/TransitionConfigs/SceneStyleInterpolators.js");
var _TransitionSpecs = __webpack_require__(/*! ./TransitionSpecs.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/TransitionConfigs/TransitionSpecs.js");
var FadeTransition = exports.FadeTransition = {
    transitionSpec: _TransitionSpecs.FadeSpec,
    sceneStyleInterpolator: _SceneStyleInterpolators.forFade
};
var ShiftTransition = exports.ShiftTransition = {
    transitionSpec: _TransitionSpecs.ShiftSpec,
    sceneStyleInterpolator: _SceneStyleInterpolators.forShift
}; //# sourceMappingURL=TransitionPresets.js.map


}),
"./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/TransitionConfigs/TransitionSpecs.js": 
/*!**************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/TransitionConfigs/TransitionSpecs.js ***!
  \**************************************************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.ShiftSpec = exports.FadeSpec = void 0;
var _reactNative = __webpack_require__(/*! react-native */ "webpack/sharing/consume/default/react-native/react-native");
var FadeSpec = exports.FadeSpec = {
    animation: 'timing',
    config: {
        duration: 150,
        easing: _reactNative.Easing.in(_reactNative.Easing.linear)
    }
};
var ShiftSpec = exports.ShiftSpec = {
    animation: 'timing',
    config: {
        duration: 150,
        easing: _reactNative.Easing.inOut(_reactNative.Easing.ease)
    }
}; //# sourceMappingURL=TransitionSpecs.js.map


}),
"./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/index.js": 
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/index.js ***!
  \**********************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
Object.defineProperty(exports, "BottomTabBar", ({
    enumerable: true,
    get: function() {
        return _BottomTabBar.BottomTabBar;
    }
}));
Object.defineProperty(exports, "BottomTabBarHeightCallbackContext", ({
    enumerable: true,
    get: function() {
        return _BottomTabBarHeightCallbackContext.BottomTabBarHeightCallbackContext;
    }
}));
Object.defineProperty(exports, "BottomTabBarHeightContext", ({
    enumerable: true,
    get: function() {
        return _BottomTabBarHeightContext.BottomTabBarHeightContext;
    }
}));
Object.defineProperty(exports, "BottomTabView", ({
    enumerable: true,
    get: function() {
        return _BottomTabView.BottomTabView;
    }
}));
exports.TransitionSpecs = exports.TransitionPresets = exports.SceneStyleInterpolators = void 0;
Object.defineProperty(exports, "createBottomTabNavigator", ({
    enumerable: true,
    get: function() {
        return _createBottomTabNavigator.createBottomTabNavigator;
    }
}));
Object.defineProperty(exports, "useBottomTabBarHeight", ({
    enumerable: true,
    get: function() {
        return _useBottomTabBarHeight.useBottomTabBarHeight;
    }
}));
var SceneStyleInterpolators = _interopRequireWildcard(__webpack_require__(/*! ./TransitionConfigs/SceneStyleInterpolators.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/TransitionConfigs/SceneStyleInterpolators.js"));
exports.SceneStyleInterpolators = SceneStyleInterpolators;
var TransitionPresets = _interopRequireWildcard(__webpack_require__(/*! ./TransitionConfigs/TransitionPresets.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/TransitionConfigs/TransitionPresets.js"));
exports.TransitionPresets = TransitionPresets;
var TransitionSpecs = _interopRequireWildcard(__webpack_require__(/*! ./TransitionConfigs/TransitionSpecs.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/TransitionConfigs/TransitionSpecs.js"));
exports.TransitionSpecs = TransitionSpecs;
var _createBottomTabNavigator = __webpack_require__(/*! ./navigators/createBottomTabNavigator.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/navigators/createBottomTabNavigator.js");
var _BottomTabBar = __webpack_require__(/*! ./views/BottomTabBar.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/BottomTabBar.js");
var _BottomTabView = __webpack_require__(/*! ./views/BottomTabView.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/BottomTabView.js");
var _BottomTabBarHeightCallbackContext = __webpack_require__(/*! ./utils/BottomTabBarHeightCallbackContext.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/BottomTabBarHeightCallbackContext.js");
var _BottomTabBarHeightContext = __webpack_require__(/*! ./utils/BottomTabBarHeightContext.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/BottomTabBarHeightContext.js");
var _useBottomTabBarHeight = __webpack_require__(/*! ./utils/useBottomTabBarHeight.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/useBottomTabBarHeight.js");
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != typeof e && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
} //# sourceMappingURL=index.js.map


}),
"./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/navigators/createBottomTabNavigator.js": 
/*!****************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/navigators/createBottomTabNavigator.js ***!
  \****************************************************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _object_spread = __webpack_require__(/*! @swc/helpers/_/_object_spread */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_object_spread.cjs");
var _object_spread_props = __webpack_require__(/*! @swc/helpers/_/_object_spread_props */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_object_spread_props.cjs");
var _object_without_properties = __webpack_require__(/*! @swc/helpers/_/_object_without_properties */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_object_without_properties.cjs");
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.createBottomTabNavigator = createBottomTabNavigator;
var _native = __webpack_require__(/*! @react-navigation/native */ "webpack/sharing/consume/default/@react-navigation/native/@react-navigation/native");
var _BottomTabView = __webpack_require__(/*! ../views/BottomTabView.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/BottomTabView.js");
var _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/.pnpm/react@19.0.0/node_modules/react/jsx-runtime.js");
function BottomTabNavigator(_param) {
    var id = _param.id, initialRouteName = _param.initialRouteName, backBehavior = _param.backBehavior, children = _param.children, layout = _param.layout, screenListeners = _param.screenListeners, screenOptions = _param.screenOptions, screenLayout = _param.screenLayout, UNSTABLE_getStateForRouteNamesChange = _param.UNSTABLE_getStateForRouteNamesChange, rest = _object_without_properties._(_param, [
        "id",
        "initialRouteName",
        "backBehavior",
        "children",
        "layout",
        "screenListeners",
        "screenOptions",
        "screenLayout",
        "UNSTABLE_getStateForRouteNamesChange"
    ]);
    var _ref = (0, _native.useNavigationBuilder)(_native.TabRouter, {
        id,
        initialRouteName,
        backBehavior,
        children,
        layout,
        screenListeners,
        screenOptions,
        screenLayout,
        UNSTABLE_getStateForRouteNamesChange
    }), state = _ref.state, descriptors = _ref.descriptors, navigation = _ref.navigation, NavigationContent = _ref.NavigationContent;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(NavigationContent, {
        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_BottomTabView.BottomTabView, _object_spread_props._(_object_spread._({}, rest), {
            state: state,
            navigation: navigation,
            descriptors: descriptors
        }))
    });
}
function createBottomTabNavigator(config) {
    return (0, _native.createNavigatorFactory)(BottomTabNavigator)(config);
} //# sourceMappingURL=createBottomTabNavigator.js.map


}),
"./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/BottomTabBarHeightCallbackContext.js": 
/*!********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/BottomTabBarHeightCallbackContext.js ***!
  \********************************************************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.BottomTabBarHeightCallbackContext = void 0;
var React = _interopRequireWildcard(__webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react"));
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != typeof e && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
}
var BottomTabBarHeightCallbackContext = exports.BottomTabBarHeightCallbackContext = /*#__PURE__*/ React.createContext(undefined); //# sourceMappingURL=BottomTabBarHeightCallbackContext.js.map


}),
"./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/BottomTabBarHeightContext.js": 
/*!************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/BottomTabBarHeightContext.js ***!
  \************************************************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.BottomTabBarHeightContext = void 0;
var React = _interopRequireWildcard(__webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react"));
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != typeof e && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
}
var BottomTabBarHeightContext = exports.BottomTabBarHeightContext = /*#__PURE__*/ React.createContext(undefined); //# sourceMappingURL=BottomTabBarHeightContext.js.map


}),
"./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/useAnimatedHashMap.js": 
/*!*****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/useAnimatedHashMap.js ***!
  \*****************************************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.useAnimatedHashMap = useAnimatedHashMap;
var React = _interopRequireWildcard(__webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react"));
var _reactNative = __webpack_require__(/*! react-native */ "webpack/sharing/consume/default/react-native/react-native");
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != typeof e && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
}
function useAnimatedHashMap(ref) {
    var routes = ref.routes, index = ref.index;
    var refs = React.useRef({});
    var previous = refs.current;
    var routeKeys = Object.keys(previous);
    if (routes.length === routeKeys.length && routes.every((route)=>routeKeys.includes(route.key))) {
        return previous;
    }
    refs.current = {};
    routes.forEach((ref, i)=>{
        var key = ref.key;
        refs.current[key] = previous[key] ?? new _reactNative.Animated.Value(i === index ? 0 : i >= index ? 1 : -1);
    });
    return refs.current;
} //# sourceMappingURL=useAnimatedHashMap.js.map


}),
"./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/useBottomTabBarHeight.js": 
/*!********************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/useBottomTabBarHeight.js ***!
  \********************************************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.useBottomTabBarHeight = useBottomTabBarHeight;
var React = _interopRequireWildcard(__webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react"));
var _BottomTabBarHeightContext = __webpack_require__(/*! ./BottomTabBarHeightContext.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/BottomTabBarHeightContext.js");
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != typeof e && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
}
function useBottomTabBarHeight() {
    var height = React.useContext(_BottomTabBarHeightContext.BottomTabBarHeightContext);
    if (height === undefined) {
        throw new Error("Couldn't find the bottom tab bar height. Are you inside a screen in Bottom Tab Navigator?");
    }
    return height;
} //# sourceMappingURL=useBottomTabBarHeight.js.map


}),
"./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/useIsKeyboardShown.js": 
/*!*****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/useIsKeyboardShown.js ***!
  \*****************************************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _sliced_to_array = __webpack_require__(/*! @swc/helpers/_/_sliced_to_array */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_sliced_to_array.cjs");
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.useIsKeyboardShown = useIsKeyboardShown;
var React = _interopRequireWildcard(__webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react"));
var _reactNative = __webpack_require__(/*! react-native */ "webpack/sharing/consume/default/react-native/react-native");
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != typeof e && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
}
function useIsKeyboardShown() {
    var _React_useState = _sliced_to_array._(React.useState(false), 2), isKeyboardShown = _React_useState[0], setIsKeyboardShown = _React_useState[1];
    React.useEffect(()=>{
        var handleKeyboardShow = ()=>setIsKeyboardShown(true);
        var handleKeyboardHide = ()=>setIsKeyboardShown(false);
        var subscriptions;
        if (_reactNative.Platform.OS === 'ios') {
            subscriptions = [
                _reactNative.Keyboard.addListener('keyboardWillShow', handleKeyboardShow),
                _reactNative.Keyboard.addListener('keyboardWillHide', handleKeyboardHide)
            ];
        } else {
            subscriptions = [
                _reactNative.Keyboard.addListener('keyboardDidShow', handleKeyboardShow),
                _reactNative.Keyboard.addListener('keyboardDidHide', handleKeyboardHide)
            ];
        }
        return ()=>{
            subscriptions.forEach((s)=>s.remove());
        };
    }, []);
    return isKeyboardShown;
} //# sourceMappingURL=useIsKeyboardShown.js.map


}),
"./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/Badge.js": 
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/Badge.js ***!
  \****************************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _object_spread = __webpack_require__(/*! @swc/helpers/_/_object_spread */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_object_spread.cjs");
var _object_spread_props = __webpack_require__(/*! @swc/helpers/_/_object_spread_props */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_object_spread_props.cjs");
var _object_without_properties = __webpack_require__(/*! @swc/helpers/_/_object_without_properties */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_object_without_properties.cjs");
var _sliced_to_array = __webpack_require__(/*! @swc/helpers/_/_sliced_to_array */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_sliced_to_array.cjs");
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.Badge = Badge;
var _native = __webpack_require__(/*! @react-navigation/native */ "webpack/sharing/consume/default/@react-navigation/native/@react-navigation/native");
var _color = _interopRequireDefault(__webpack_require__(/*! color */ "./node_modules/.pnpm/color@4.2.3/node_modules/color/index.js"));
var React = _interopRequireWildcard(__webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react"));
var _reactNative = __webpack_require__(/*! react-native */ "webpack/sharing/consume/default/react-native/react-native");
var _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/.pnpm/react@19.0.0/node_modules/react/jsx-runtime.js");
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != typeof e && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
}
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
var useNativeDriver = _reactNative.Platform.OS !== 'web';
function Badge(_param) {
    var children = _param.children, style = _param.style, _param_visible = _param.visible, visible = _param_visible === void 0 ? true : _param_visible, _param_size = _param.size, size = _param_size === void 0 ? 18 : _param_size, rest = _object_without_properties._(_param, [
        "children",
        "style",
        "visible",
        "size"
    ]);
    var _React_useState = _sliced_to_array._(React.useState(()=>new _reactNative.Animated.Value(visible ? 1 : 0)), 1), opacity = _React_useState[0];
    var _React_useState1 = _sliced_to_array._(React.useState(visible), 2), rendered = _React_useState1[0], setRendered = _React_useState1[1];
    var _ref = (0, _native.useTheme)(), colors = _ref.colors, fonts = _ref.fonts;
    React.useEffect(()=>{
        if (!rendered) {
            return;
        }
        _reactNative.Animated.timing(opacity, {
            toValue: visible ? 1 : 0,
            duration: 150,
            useNativeDriver
        }).start((ref)=>{
            var finished = ref.finished;
            if (finished && !visible) {
                setRendered(false);
            }
        });
        return ()=>opacity.stopAnimation();
    }, [
        opacity,
        rendered,
        visible
    ]);
    if (!rendered) {
        if (visible) {
            setRendered(true);
        } else {
            return null;
        }
    }
    // @ts-expect-error: backgroundColor definitely exists
    var _ref1 = _reactNative.StyleSheet.flatten(style) || {}, _ref_backgroundColor = _ref1.backgroundColor, backgroundColor = _ref_backgroundColor === void 0 ? colors.notification : _ref_backgroundColor, restStyle = _object_without_properties._(_ref1, [
        "backgroundColor"
    ]);
    var textColor = (0, _color.default)(backgroundColor).isLight() ? 'black' : 'white';
    var borderRadius = size / 2;
    var fontSize = Math.floor(size * 3 / 4);
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_reactNative.Animated.Text, _object_spread_props._(_object_spread._({
        numberOfLines: 1,
        style: [
            {
                transform: [
                    {
                        scale: opacity.interpolate({
                            inputRange: [
                                0,
                                1
                            ],
                            outputRange: [
                                0.5,
                                1
                            ]
                        })
                    }
                ],
                color: textColor,
                lineHeight: size - 1,
                height: size,
                minWidth: size,
                opacity,
                backgroundColor,
                fontSize,
                borderRadius
            },
            fonts.regular,
            styles.container,
            restStyle
        ]
    }, rest), {
        children: children
    }));
}
var styles = _reactNative.StyleSheet.create({
    container: {
        alignSelf: 'flex-end',
        textAlign: 'center',
        paddingHorizontal: 4,
        overflow: 'hidden'
    }
}); //# sourceMappingURL=Badge.js.map


}),
"./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/BottomTabBar.js": 
/*!***********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/BottomTabBar.js ***!
  \***********************************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _object_spread = __webpack_require__(/*! @swc/helpers/_/_object_spread */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_object_spread.cjs");
var _object_spread_props = __webpack_require__(/*! @swc/helpers/_/_object_spread_props */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_object_spread_props.cjs");
var _sliced_to_array = __webpack_require__(/*! @swc/helpers/_/_sliced_to_array */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_sliced_to_array.cjs");
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.BottomTabBar = BottomTabBar;
exports.getTabBarHeight = void 0;
var _elements = __webpack_require__(/*! @react-navigation/elements */ "./node_modules/.pnpm/@react-navigation+elements@2.4.2_@react-navigation+native@7.0.14_react-native@0.78.2_@babel+c_gj2mp6qhcpixepngjpirbxnqsq/node_modules/@react-navigation/elements/lib/module/index.js");
var _native = __webpack_require__(/*! @react-navigation/native */ "webpack/sharing/consume/default/@react-navigation/native/@react-navigation/native");
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react"));
var _reactNative = __webpack_require__(/*! react-native */ "webpack/sharing/consume/default/react-native/react-native");
var _reactNativeSafeAreaContext = __webpack_require__(/*! react-native-safe-area-context */ "webpack/sharing/consume/default/react-native-safe-area-context/react-native-safe-area-context");
var _BottomTabBarHeightCallbackContext = __webpack_require__(/*! ../utils/BottomTabBarHeightCallbackContext.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/BottomTabBarHeightCallbackContext.js");
var _useIsKeyboardShown = __webpack_require__(/*! ../utils/useIsKeyboardShown.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/useIsKeyboardShown.js");
var _BottomTabItem = __webpack_require__(/*! ./BottomTabItem.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/BottomTabItem.js");
var _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/.pnpm/react@19.0.0/node_modules/react/jsx-runtime.js");
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
var TABBAR_HEIGHT_UIKIT = 49;
var TABBAR_HEIGHT_UIKIT_COMPACT = 32;
var SPACING_UIKIT = 15;
var SPACING_MATERIAL = 12;
var DEFAULT_MAX_TAB_ITEM_WIDTH = 125;
var useNativeDriver = _reactNative.Platform.OS !== 'web';
var shouldUseHorizontalLabels = (ref)=>{
    var state = ref.state, descriptors = ref.descriptors, dimensions = ref.dimensions;
    var tabBarLabelPosition = descriptors[state.routes[state.index].key].options.tabBarLabelPosition;
    if (tabBarLabelPosition) {
        switch(tabBarLabelPosition){
            case 'beside-icon':
                return true;
            case 'below-icon':
                return false;
        }
    }
    if (dimensions.width >= 768) {
        // Screen size matches a tablet
        var maxTabWidth = state.routes.reduce((acc, route)=>{
            var tabBarItemStyle = descriptors[route.key].options.tabBarItemStyle;
            var flattenedStyle = _reactNative.StyleSheet.flatten(tabBarItemStyle);
            if (flattenedStyle) {
                if (typeof flattenedStyle.width === 'number') {
                    return acc + flattenedStyle.width;
                } else if (typeof flattenedStyle.maxWidth === 'number') {
                    return acc + flattenedStyle.maxWidth;
                }
            }
            return acc + DEFAULT_MAX_TAB_ITEM_WIDTH;
        }, 0);
        return maxTabWidth <= dimensions.width;
    } else {
        return dimensions.width > dimensions.height;
    }
};
var isCompact = (ref)=>{
    var state = ref.state, descriptors = ref.descriptors, dimensions = ref.dimensions;
    var _descriptors_state_routes_state_index_key_options = descriptors[state.routes[state.index].key].options, tabBarPosition = _descriptors_state_routes_state_index_key_options.tabBarPosition, tabBarVariant = _descriptors_state_routes_state_index_key_options.tabBarVariant;
    if (tabBarPosition === 'left' || tabBarPosition === 'right' || tabBarVariant === 'material') {
        return false;
    }
    var isLandscape = dimensions.width > dimensions.height;
    var horizontalLabels = shouldUseHorizontalLabels({
        state,
        descriptors,
        dimensions
    });
    if (_reactNative.Platform.OS === 'ios' && !_reactNative.Platform.isPad && isLandscape && horizontalLabels) {
        return true;
    }
    return false;
};
var getTabBarHeight = (ref)=>{
    var state = ref.state, descriptors = ref.descriptors, dimensions = ref.dimensions, insets = ref.insets, style = ref.style;
    var tabBarPosition = descriptors[state.routes[state.index].key].options.tabBarPosition;
    var flattenedStyle = _reactNative.StyleSheet.flatten(style);
    var customHeight = flattenedStyle && 'height' in flattenedStyle ? flattenedStyle.height : undefined;
    if (typeof customHeight === 'number') {
        return customHeight;
    }
    var inset = insets[tabBarPosition === 'top' ? 'top' : 'bottom'];
    if (isCompact({
        state,
        descriptors,
        dimensions
    })) {
        return TABBAR_HEIGHT_UIKIT_COMPACT + inset;
    }
    return TABBAR_HEIGHT_UIKIT + inset;
};
exports.getTabBarHeight = getTabBarHeight;
function BottomTabBar(ref) {
    var state = ref.state, navigation = ref.navigation, descriptors = ref.descriptors, insets = ref.insets, style = ref.style;
    var colors = (0, _native.useTheme)().colors;
    var direction = (0, _native.useLocale)().direction;
    var buildHref = (0, _native.useLinkBuilder)().buildHref;
    var focusedRoute = state.routes[state.index];
    var focusedDescriptor = descriptors[focusedRoute.key];
    var focusedOptions = focusedDescriptor.options;
    var _focusedOptions_tabBarPosition = focusedOptions.tabBarPosition, tabBarPosition = _focusedOptions_tabBarPosition === void 0 ? 'bottom' : _focusedOptions_tabBarPosition, tabBarShowLabel = focusedOptions.tabBarShowLabel, tabBarLabelPosition = focusedOptions.tabBarLabelPosition, _focusedOptions_tabBarHideOnKeyboard = focusedOptions.tabBarHideOnKeyboard, tabBarHideOnKeyboard = _focusedOptions_tabBarHideOnKeyboard === void 0 ? false : _focusedOptions_tabBarHideOnKeyboard, tabBarVisibilityAnimationConfig = focusedOptions.tabBarVisibilityAnimationConfig, _focusedOptions_tabBarVariant = focusedOptions.tabBarVariant, tabBarVariant = _focusedOptions_tabBarVariant === void 0 ? 'uikit' : _focusedOptions_tabBarVariant, tabBarStyle = focusedOptions.tabBarStyle, tabBarBackground = focusedOptions.tabBarBackground, tabBarActiveTintColor = focusedOptions.tabBarActiveTintColor, tabBarInactiveTintColor = focusedOptions.tabBarInactiveTintColor, tabBarActiveBackgroundColor = focusedOptions.tabBarActiveBackgroundColor, tabBarInactiveBackgroundColor = focusedOptions.tabBarInactiveBackgroundColor;
    if (tabBarVariant === 'material' && tabBarPosition !== 'left' && tabBarPosition !== 'right') {
        throw new Error("The 'material' variant for tab bar is only supported when 'tabBarPosition' is set to 'left' or 'right'.");
    }
    if (tabBarLabelPosition === 'below-icon' && tabBarVariant === 'uikit' && (tabBarPosition === 'left' || tabBarPosition === 'right')) {
        throw new Error("The 'below-icon' label position for tab bar is only supported when 'tabBarPosition' is set to 'top' or 'bottom' when using the 'uikit' variant.");
    }
    var dimensions = (0, _reactNativeSafeAreaContext.useSafeAreaFrame)();
    var isKeyboardShown = (0, _useIsKeyboardShown.useIsKeyboardShown)();
    var onHeightChange = _react.default.useContext(_BottomTabBarHeightCallbackContext.BottomTabBarHeightCallbackContext);
    var shouldShowTabBar = !(tabBarHideOnKeyboard && isKeyboardShown);
    var visibilityAnimationConfigRef = _react.default.useRef(tabBarVisibilityAnimationConfig);
    _react.default.useEffect(()=>{
        visibilityAnimationConfigRef.current = tabBarVisibilityAnimationConfig;
    });
    var _react_default_useState = _sliced_to_array._(_react.default.useState(!shouldShowTabBar), 2), isTabBarHidden = _react_default_useState[0], setIsTabBarHidden = _react_default_useState[1];
    var _react_default_useState1 = _sliced_to_array._(_react.default.useState(()=>new _reactNative.Animated.Value(shouldShowTabBar ? 1 : 0)), 1), visible = _react_default_useState1[0];
    _react.default.useEffect(()=>{
        var visibilityAnimationConfig = visibilityAnimationConfigRef.current;
        if (shouldShowTabBar) {
            var _visibilityAnimationConfig_show, _visibilityAnimationConfig_show1;
            var animation = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationConfig_show = visibilityAnimationConfig.show) === null || _visibilityAnimationConfig_show === void 0 ? void 0 : _visibilityAnimationConfig_show.animation) === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;
            animation(visible, _object_spread._({
                toValue: 1,
                useNativeDriver,
                duration: 250
            }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationConfig_show1 = visibilityAnimationConfig.show) === null || _visibilityAnimationConfig_show1 === void 0 ? void 0 : _visibilityAnimationConfig_show1.config)).start((ref)=>{
                var finished = ref.finished;
                if (finished) {
                    setIsTabBarHidden(false);
                }
            });
        } else {
            var _visibilityAnimationConfig_hide, _visibilityAnimationConfig_hide1;
            // eslint-disable-next-line @eslint-react/hooks-extra/no-direct-set-state-in-use-effect
            setIsTabBarHidden(true);
            var animation1 = (visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationConfig_hide = visibilityAnimationConfig.hide) === null || _visibilityAnimationConfig_hide === void 0 ? void 0 : _visibilityAnimationConfig_hide.animation) === 'spring' ? _reactNative.Animated.spring : _reactNative.Animated.timing;
            animation1(visible, _object_spread._({
                toValue: 0,
                useNativeDriver,
                duration: 200
            }, visibilityAnimationConfig === null || visibilityAnimationConfig === void 0 ? void 0 : (_visibilityAnimationConfig_hide1 = visibilityAnimationConfig.hide) === null || _visibilityAnimationConfig_hide1 === void 0 ? void 0 : _visibilityAnimationConfig_hide1.config)).start();
        }
        return ()=>visible.stopAnimation();
    }, [
        visible,
        shouldShowTabBar
    ]);
    var _react_default_useState2 = _sliced_to_array._(_react.default.useState({
        height: 0
    }), 2), layout = _react_default_useState2[0], setLayout = _react_default_useState2[1];
    var handleLayout = (e)=>{
        var height = e.nativeEvent.layout.height;
        onHeightChange === null || onHeightChange === void 0 ? void 0 : onHeightChange(height);
        setLayout((layout)=>{
            if (height === layout.height) {
                return layout;
            } else {
                return {
                    height
                };
            }
        });
    };
    var routes = state.routes;
    var tabBarHeight = getTabBarHeight({
        state,
        descriptors,
        insets,
        dimensions,
        style: [
            tabBarStyle,
            style
        ]
    });
    var hasHorizontalLabels = shouldUseHorizontalLabels({
        state,
        descriptors,
        dimensions
    });
    var compact = isCompact({
        state,
        descriptors,
        dimensions
    });
    var sidebar = tabBarPosition === 'left' || tabBarPosition === 'right';
    var spacing = tabBarVariant === 'material' ? SPACING_MATERIAL : SPACING_UIKIT;
    var tabBarBackgroundElement = tabBarBackground === null || tabBarBackground === void 0 ? void 0 : tabBarBackground();
    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_reactNative.Animated.View, {
        style: [
            tabBarPosition === 'left' ? styles.start : tabBarPosition === 'right' ? styles.end : styles.bottom,
            (_reactNative.Platform.OS === 'web' ? tabBarPosition === 'right' : direction === 'rtl' && tabBarPosition === 'left' || direction !== 'rtl' && tabBarPosition === 'right') ? {
                borderLeftWidth: _reactNative.StyleSheet.hairlineWidth
            } : (_reactNative.Platform.OS === 'web' ? tabBarPosition === 'left' : direction === 'rtl' && tabBarPosition === 'right' || direction !== 'rtl' && tabBarPosition === 'left') ? {
                borderRightWidth: _reactNative.StyleSheet.hairlineWidth
            } : tabBarPosition === 'top' ? {
                borderBottomWidth: _reactNative.StyleSheet.hairlineWidth
            } : {
                borderTopWidth: _reactNative.StyleSheet.hairlineWidth
            },
            {
                backgroundColor: tabBarBackgroundElement != null ? 'transparent' : colors.card,
                borderColor: colors.border
            },
            sidebar ? {
                paddingTop: (hasHorizontalLabels ? spacing : spacing / 2) + insets.top,
                paddingBottom: (hasHorizontalLabels ? spacing : spacing / 2) + insets.bottom,
                paddingStart: spacing + (tabBarPosition === 'left' ? insets.left : 0),
                paddingEnd: spacing + (tabBarPosition === 'right' ? insets.right : 0),
                minWidth: hasHorizontalLabels ? (0, _elements.getDefaultSidebarWidth)(dimensions) : 0
            } : [
                {
                    transform: [
                        {
                            translateY: visible.interpolate({
                                inputRange: [
                                    0,
                                    1
                                ],
                                outputRange: [
                                    layout.height + insets[tabBarPosition === 'top' ? 'top' : 'bottom'] + _reactNative.StyleSheet.hairlineWidth,
                                    0
                                ]
                            })
                        }
                    ],
                    // Absolutely position the tab bar so that the content is below it
                    // This is needed to avoid gap at bottom when the tab bar is hidden
                    position: isTabBarHidden ? 'absolute' : undefined
                },
                {
                    height: tabBarHeight,
                    paddingBottom: tabBarPosition === 'bottom' ? insets.bottom : 0,
                    paddingTop: tabBarPosition === 'top' ? insets.top : 0,
                    paddingHorizontal: Math.max(insets.left, insets.right)
                }
            ],
            tabBarStyle
        ],
        pointerEvents: isTabBarHidden ? 'none' : 'auto',
        onLayout: sidebar ? undefined : handleLayout,
        children: [
            /*#__PURE__*/ (0, _jsxRuntime.jsx)(_reactNative.View, {
                pointerEvents: "none",
                style: _reactNative.StyleSheet.absoluteFill,
                children: tabBarBackgroundElement
            }),
            /*#__PURE__*/ (0, _jsxRuntime.jsx)(_reactNative.View, {
                accessibilityRole: "tablist",
                style: sidebar ? styles.sideContent : styles.bottomContent,
                children: routes.map((route, index)=>{
                    var focused = index === state.index;
                    var options = descriptors[route.key].options;
                    var onPress = ()=>{
                        var event = navigation.emit({
                            type: 'tabPress',
                            target: route.key,
                            canPreventDefault: true
                        });
                        if (!focused && !event.defaultPrevented) {
                            navigation.dispatch(_object_spread_props._(_object_spread._({}, _native.CommonActions.navigate(route)), {
                                target: state.key
                            }));
                        }
                    };
                    var onLongPress = ()=>{
                        navigation.emit({
                            type: 'tabLongPress',
                            target: route.key
                        });
                    };
                    var label = typeof options.tabBarLabel === 'function' ? options.tabBarLabel : (0, _elements.getLabel)({
                        label: options.tabBarLabel,
                        title: options.title
                    }, route.name);
                    var accessibilityLabel = options.tabBarAccessibilityLabel !== undefined ? options.tabBarAccessibilityLabel : typeof label === 'string' && _reactNative.Platform.OS === 'ios' ? `${label}, tab, ${index + 1} of ${routes.length}` : undefined;
                    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_native.NavigationContext.Provider, {
                        value: descriptors[route.key].navigation,
                        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_native.NavigationRouteContext.Provider, {
                            value: route,
                            children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_BottomTabItem.BottomTabItem, {
                                href: buildHref(route.name, route.params),
                                route: route,
                                descriptor: descriptors[route.key],
                                focused: focused,
                                horizontal: hasHorizontalLabels,
                                compact: compact,
                                sidebar: sidebar,
                                variant: tabBarVariant,
                                onPress: onPress,
                                onLongPress: onLongPress,
                                accessibilityLabel: accessibilityLabel,
                                testID: options.tabBarButtonTestID,
                                allowFontScaling: options.tabBarAllowFontScaling,
                                activeTintColor: tabBarActiveTintColor,
                                inactiveTintColor: tabBarInactiveTintColor,
                                activeBackgroundColor: tabBarActiveBackgroundColor,
                                inactiveBackgroundColor: tabBarInactiveBackgroundColor,
                                button: options.tabBarButton,
                                icon: options.tabBarIcon ?? ((ref)=>{
                                    var color = ref.color, size = ref.size;
                                    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_elements.MissingIcon, {
                                        color: color,
                                        size: size
                                    });
                                }),
                                badge: options.tabBarBadge,
                                badgeStyle: options.tabBarBadgeStyle,
                                label: label,
                                showLabel: tabBarShowLabel,
                                labelStyle: options.tabBarLabelStyle,
                                iconStyle: options.tabBarIconStyle,
                                style: [
                                    sidebar ? {
                                        marginVertical: hasHorizontalLabels ? tabBarVariant === 'material' ? 0 : 1 : spacing / 2
                                    } : styles.bottomItem,
                                    options.tabBarItemStyle
                                ]
                            })
                        })
                    }, route.key);
                })
            })
        ]
    });
}
var styles = _reactNative.StyleSheet.create({
    start: {
        top: 0,
        bottom: 0,
        start: 0
    },
    end: {
        top: 0,
        bottom: 0,
        end: 0
    },
    bottom: {
        start: 0,
        end: 0,
        bottom: 0,
        elevation: 8
    },
    bottomContent: {
        flex: 1,
        flexDirection: 'row'
    },
    sideContent: {
        flex: 1,
        flexDirection: 'column'
    },
    bottomItem: {
        flex: 1
    }
}); //# sourceMappingURL=BottomTabBar.js.map


}),
"./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/BottomTabItem.js": 
/*!************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/BottomTabItem.js ***!
  \************************************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _object_spread = __webpack_require__(/*! @swc/helpers/_/_object_spread */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_object_spread.cjs");
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.BottomTabItem = BottomTabItem;
var _elements = __webpack_require__(/*! @react-navigation/elements */ "./node_modules/.pnpm/@react-navigation+elements@2.4.2_@react-navigation+native@7.0.14_react-native@0.78.2_@babel+c_gj2mp6qhcpixepngjpirbxnqsq/node_modules/@react-navigation/elements/lib/module/index.js");
var _native = __webpack_require__(/*! @react-navigation/native */ "webpack/sharing/consume/default/@react-navigation/native/@react-navigation/native");
var _color = _interopRequireDefault(__webpack_require__(/*! color */ "./node_modules/.pnpm/color@4.2.3/node_modules/color/index.js"));
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react"));
var _reactNative = __webpack_require__(/*! react-native */ "webpack/sharing/consume/default/react-native/react-native");
var _TabBarIcon = __webpack_require__(/*! ./TabBarIcon.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/TabBarIcon.js");
var _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/.pnpm/react@19.0.0/node_modules/react/jsx-runtime.js");
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
var renderButtonDefault = (props)=>/*#__PURE__*/ (0, _jsxRuntime.jsx)(_elements.PlatformPressable, _object_spread._({}, props));
var SUPPORTS_LARGE_CONTENT_VIEWER = _reactNative.Platform.OS === 'ios' && parseInt(_reactNative.Platform.Version, 10) >= 13;
function BottomTabItem(ref) {
    var route = ref.route, href = ref.href, focused = ref.focused, descriptor = ref.descriptor, label = ref.label, icon = ref.icon, badge = ref.badge, badgeStyle = ref.badgeStyle, _ref_button = ref.button, button = _ref_button === void 0 ? renderButtonDefault : _ref_button, accessibilityLabel = ref.accessibilityLabel, testID = ref.testID, onPress = ref.onPress, onLongPress = ref.onLongPress, horizontal = ref.horizontal, compact = ref.compact, sidebar = ref.sidebar, variant = ref.variant, customActiveTintColor = ref.activeTintColor, customInactiveTintColor = ref.inactiveTintColor, customActiveBackgroundColor = ref.activeBackgroundColor, _ref_inactiveBackgroundColor = ref.inactiveBackgroundColor, inactiveBackgroundColor = _ref_inactiveBackgroundColor === void 0 ? 'transparent' : _ref_inactiveBackgroundColor, _ref_showLabel = ref.showLabel, showLabel = _ref_showLabel === void 0 ? true : _ref_showLabel, _ref_allowFontScaling = ref.// On iOS 13+, we use `largeContentTitle` for accessibility
    // So we don't need the font to scale up
    // https://developer.apple.com/documentation/uikit/uiview/3183939-largecontenttitle
    allowFontScaling, allowFontScaling = _ref_allowFontScaling === void 0 ? SUPPORTS_LARGE_CONTENT_VIEWER ? false : undefined : _ref_allowFontScaling, labelStyle = ref.labelStyle, iconStyle = ref.iconStyle, style = ref.style;
    var _ref = (0, _native.useTheme)(), colors = _ref.colors, fonts = _ref.fonts;
    var activeTintColor = customActiveTintColor ?? (variant === 'uikit' && sidebar && horizontal ? (0, _color.default)(colors.primary).isDark() ? 'white' : (0, _color.default)(colors.primary).darken(0.71).string() : colors.primary);
    var inactiveTintColor = customInactiveTintColor === undefined ? variant === 'material' ? (0, _color.default)(colors.text).alpha(0.68).rgb().string() : (0, _color.default)(colors.text).mix((0, _color.default)(colors.card), 0.5).hex() : customInactiveTintColor;
    var activeBackgroundColor = customActiveBackgroundColor ?? (variant === 'material' ? (0, _color.default)(activeTintColor).alpha(0.12).rgb().string() : sidebar && horizontal ? colors.primary : 'transparent');
    var options = descriptor.options;
    var labelString = (0, _elements.getLabel)({
        label: typeof options.tabBarLabel === 'string' ? options.tabBarLabel : undefined,
        title: options.title
    }, route.name);
    var labelInactiveTintColor = inactiveTintColor;
    var iconInactiveTintColor = inactiveTintColor;
    if (variant === 'uikit' && sidebar && horizontal && customInactiveTintColor === undefined) {
        iconInactiveTintColor = colors.primary;
        labelInactiveTintColor = colors.text;
    }
    var renderLabel = (ref)=>{
        var focused = ref.focused;
        if (showLabel === false) {
            return null;
        }
        var color = focused ? activeTintColor : labelInactiveTintColor;
        if (typeof label !== 'string') {
            return label({
                focused,
                color,
                position: horizontal ? 'beside-icon' : 'below-icon',
                children: labelString
            });
        }
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_elements.Label, {
            style: [
                horizontal ? [
                    styles.labelBeside,
                    variant === 'material' ? styles.labelSidebarMaterial : sidebar ? styles.labelSidebarUiKit : compact ? styles.labelBesideUikitCompact : styles.labelBesideUikit,
                    icon == null && {
                        marginStart: 0
                    }
                ] : styles.labelBeneath,
                compact || variant === 'uikit' && sidebar && horizontal ? fonts.regular : fonts.medium,
                labelStyle
            ],
            allowFontScaling: allowFontScaling,
            tintColor: color,
            children: label
        });
    };
    var renderIcon = (ref)=>{
        var focused = ref.focused;
        if (icon === undefined) {
            return null;
        }
        var activeOpacity = focused ? 1 : 0;
        var inactiveOpacity = focused ? 0 : 1;
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_TabBarIcon.TabBarIcon, {
            route: route,
            variant: variant,
            size: compact ? 'compact' : 'regular',
            badge: badge,
            badgeStyle: badgeStyle,
            activeOpacity: activeOpacity,
            allowFontScaling: allowFontScaling,
            inactiveOpacity: inactiveOpacity,
            activeTintColor: activeTintColor,
            inactiveTintColor: iconInactiveTintColor,
            renderIcon: icon,
            style: iconStyle
        });
    };
    var scene = {
        route,
        focused
    };
    var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;
    var flex = _reactNative.StyleSheet.flatten(style || {}).flex;
    var borderRadius = variant === 'material' ? horizontal ? 56 : 16 : sidebar && horizontal ? 10 : 0;
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_reactNative.View, {
        style: [
            // Clip ripple effect on Android
            {
                borderRadius,
                overflow: variant === 'material' ? 'hidden' : 'visible'
            },
            style
        ],
        children: button({
            href,
            onPress,
            onLongPress,
            testID,
            accessibilityLabel,
            accessibilityLargeContentTitle: labelString,
            accessibilityShowsLargeContentViewer: true,
            // FIXME: accessibilityRole: 'tab' doesn't seem to work as expected on iOS
            accessibilityRole: _reactNative.Platform.select({
                ios: 'button',
                default: 'tab'
            }),
            accessibilityState: {
                selected: focused
            },
            // @ts-expect-error: keep for compatibility with older React Native versions
            accessibilityStates: focused ? [
                'selected'
            ] : [],
            android_ripple: {
                borderless: true
            },
            hoverEffect: variant === 'material' || sidebar && horizontal ? {
                color: colors.text
            } : undefined,
            pressOpacity: 1,
            style: [
                styles.tab,
                {
                    flex,
                    backgroundColor,
                    borderRadius
                },
                sidebar ? variant === 'material' ? horizontal ? styles.tabBarSidebarMaterial : styles.tabVerticalMaterial : horizontal ? styles.tabBarSidebarUiKit : styles.tabVerticalUiKit : variant === 'material' ? styles.tabVerticalMaterial : horizontal ? styles.tabHorizontalUiKit : styles.tabVerticalUiKit
            ],
            children: /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_react.default.Fragment, {
                children: [
                    renderIcon(scene),
                    renderLabel(scene)
                ]
            })
        })
    });
}
var styles = _reactNative.StyleSheet.create({
    tab: {
        alignItems: 'center',
        // Roundness for iPad hover effect
        borderRadius: 10
    },
    tabVerticalUiKit: {
        justifyContent: 'flex-start',
        flexDirection: 'column',
        padding: 5
    },
    tabVerticalMaterial: {
        padding: 10
    },
    tabHorizontalUiKit: {
        justifyContent: 'center',
        alignItems: 'center',
        flexDirection: 'row',
        padding: 5
    },
    tabBarSidebarUiKit: {
        justifyContent: 'flex-start',
        alignItems: 'center',
        flexDirection: 'row',
        paddingVertical: 7,
        paddingHorizontal: 5
    },
    tabBarSidebarMaterial: {
        justifyContent: 'flex-start',
        alignItems: 'center',
        flexDirection: 'row',
        paddingVertical: 15,
        paddingStart: 16,
        paddingEnd: 24
    },
    labelSidebarMaterial: {
        marginStart: 12
    },
    labelSidebarUiKit: {
        fontSize: 17,
        marginStart: 10
    },
    labelBeneath: {
        fontSize: 10
    },
    labelBeside: {
        marginEnd: 12,
        lineHeight: 24
    },
    labelBesideUikit: {
        fontSize: 13,
        marginStart: 5
    },
    labelBesideUikitCompact: {
        fontSize: 12,
        marginStart: 5
    }
}); //# sourceMappingURL=BottomTabItem.js.map


}),
"./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/BottomTabView.js": 
/*!************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/BottomTabView.js ***!
  \************************************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _object_spread = __webpack_require__(/*! @swc/helpers/_/_object_spread */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_object_spread.cjs");
var _object_spread_props = __webpack_require__(/*! @swc/helpers/_/_object_spread_props */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_object_spread_props.cjs");
var _sliced_to_array = __webpack_require__(/*! @swc/helpers/_/_sliced_to_array */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_sliced_to_array.cjs");
var _to_consumable_array = __webpack_require__(/*! @swc/helpers/_/_to_consumable_array */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_to_consumable_array.cjs");
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.BottomTabView = BottomTabView;
var _elements = __webpack_require__(/*! @react-navigation/elements */ "./node_modules/.pnpm/@react-navigation+elements@2.4.2_@react-navigation+native@7.0.14_react-native@0.78.2_@babel+c_gj2mp6qhcpixepngjpirbxnqsq/node_modules/@react-navigation/elements/lib/module/index.js");
var _native = __webpack_require__(/*! @react-navigation/native */ "webpack/sharing/consume/default/@react-navigation/native/@react-navigation/native");
var React = _interopRequireWildcard(__webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react"));
var _reactNative = __webpack_require__(/*! react-native */ "webpack/sharing/consume/default/react-native/react-native");
var _reactNativeSafeAreaContext = __webpack_require__(/*! react-native-safe-area-context */ "webpack/sharing/consume/default/react-native-safe-area-context/react-native-safe-area-context");
var _TransitionPresets = __webpack_require__(/*! ../TransitionConfigs/TransitionPresets.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/TransitionConfigs/TransitionPresets.js");
var _BottomTabBarHeightCallbackContext = __webpack_require__(/*! ../utils/BottomTabBarHeightCallbackContext.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/BottomTabBarHeightCallbackContext.js");
var _BottomTabBarHeightContext = __webpack_require__(/*! ../utils/BottomTabBarHeightContext.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/BottomTabBarHeightContext.js");
var _useAnimatedHashMap = __webpack_require__(/*! ../utils/useAnimatedHashMap.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/utils/useAnimatedHashMap.js");
var _BottomTabBar = __webpack_require__(/*! ./BottomTabBar.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/BottomTabBar.js");
var _ScreenFallback = __webpack_require__(/*! ./ScreenFallback.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/ScreenFallback.js");
var _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/.pnpm/react@19.0.0/node_modules/react/jsx-runtime.js");
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != typeof e && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
}
var EPSILON = 1e-5;
var STATE_INACTIVE = 0;
var STATE_TRANSITIONING_OR_BELOW_TOP = 1;
var STATE_ON_TOP = 2;
var NAMED_TRANSITIONS_PRESETS = {
    fade: _TransitionPresets.FadeTransition,
    shift: _TransitionPresets.ShiftTransition,
    none: {
        sceneStyleInterpolator: undefined,
        transitionSpec: {
            animation: 'timing',
            config: {
                duration: 0
            }
        }
    }
};
var useNativeDriver = _reactNative.Platform.OS !== 'web';
var hasAnimation = (options)=>{
    var animation = options.animation, transitionSpec = options.transitionSpec;
    if (animation) {
        return animation !== 'none';
    }
    return Boolean(transitionSpec);
};
var renderTabBarDefault = (props)=>/*#__PURE__*/ (0, _jsxRuntime.jsx)(_BottomTabBar.BottomTabBar, _object_spread._({}, props));
function BottomTabView(props) {
    var _props_tabBar = props.tabBar, tabBar = _props_tabBar === void 0 ? renderTabBarDefault : _props_tabBar, state = props.state, navigation = props.navigation, descriptors = props.descriptors, safeAreaInsets = props.safeAreaInsets, _props_detachInactiveScreens = props.detachInactiveScreens, detachInactiveScreens = _props_detachInactiveScreens === void 0 ? _reactNative.Platform.OS === 'web' || _reactNative.Platform.OS === 'android' || _reactNative.Platform.OS === 'ios' : _props_detachInactiveScreens;
    var focusedRouteKey = state.routes[state.index].key;
    var direction = (0, _native.useLocale)().direction;
    /**
   * List of loaded tabs, tabs will be loaded when navigated to.
   */ var _React_useState = _sliced_to_array._(React.useState([
        focusedRouteKey
    ]), 2), loaded = _React_useState[0], setLoaded = _React_useState[1];
    if (!loaded.includes(focusedRouteKey)) {
        // Set the current tab to be loaded if it was not loaded before
        setLoaded(_to_consumable_array._(loaded).concat([
            focusedRouteKey
        ]));
    }
    var previousRouteKeyRef = React.useRef(focusedRouteKey);
    var tabAnims = (0, _useAnimatedHashMap.useAnimatedHashMap)(state);
    React.useEffect(()=>{
        var _descriptors_previousRouteKey;
        var previousRouteKey = previousRouteKeyRef.current;
        var popToTopAction;
        if (previousRouteKey !== focusedRouteKey && ((_descriptors_previousRouteKey = descriptors[previousRouteKey]) === null || _descriptors_previousRouteKey === void 0 ? void 0 : _descriptors_previousRouteKey.options.popToTopOnBlur)) {
            var _prevRoute_state;
            var prevRoute = state.routes.find((route)=>route.key === previousRouteKey);
            if ((prevRoute === null || prevRoute === void 0 ? void 0 : (_prevRoute_state = prevRoute.state) === null || _prevRoute_state === void 0 ? void 0 : _prevRoute_state.type) === 'stack' && prevRoute.state.key) {
                popToTopAction = _object_spread_props._(_object_spread._({}, _native.StackActions.popToTop()), {
                    target: prevRoute.state.key
                });
            }
        }
        var animateToIndex = ()=>{
            if (previousRouteKey !== focusedRouteKey) {
                navigation.emit({
                    type: 'transitionStart',
                    target: focusedRouteKey
                });
            }
            _reactNative.Animated.parallel(state.routes.map((route, index)=>{
                var options = descriptors[route.key].options;
                var _options_animation = options.animation, animation = _options_animation === void 0 ? 'none' : _options_animation, _options_transitionSpec = options.transitionSpec, transitionSpec = _options_transitionSpec === void 0 ? NAMED_TRANSITIONS_PRESETS[animation].transitionSpec : _options_transitionSpec;
                var spec = transitionSpec;
                if (route.key !== previousRouteKey && route.key !== focusedRouteKey) {
                    // Don't animate if the screen is not previous one or new one
                    // This will avoid flicker for screens not involved in the transition
                    spec = NAMED_TRANSITIONS_PRESETS.none.transitionSpec;
                }
                spec = spec ?? NAMED_TRANSITIONS_PRESETS.none.transitionSpec;
                var toValue = index === state.index ? 0 : index >= state.index ? 1 : -1;
                return _reactNative.Animated[spec.animation](tabAnims[route.key], _object_spread_props._(_object_spread._({}, spec.config), {
                    toValue,
                    useNativeDriver
                }));
            }).filter(Boolean)).start((ref)=>{
                var finished = ref.finished;
                if (finished && popToTopAction) {
                    navigation.dispatch(popToTopAction);
                }
                if (previousRouteKey !== focusedRouteKey) {
                    navigation.emit({
                        type: 'transitionEnd',
                        target: focusedRouteKey
                    });
                }
            });
        };
        animateToIndex();
        previousRouteKeyRef.current = focusedRouteKey;
    }, [
        descriptors,
        focusedRouteKey,
        navigation,
        state.index,
        state.routes,
        tabAnims
    ]);
    var dimensions = _elements.SafeAreaProviderCompat.initialMetrics.frame;
    var _React_useState1 = _sliced_to_array._(React.useState(()=>(0, _BottomTabBar.getTabBarHeight)({
            state,
            descriptors,
            dimensions,
            insets: _object_spread._({}, _elements.SafeAreaProviderCompat.initialMetrics.insets, props.safeAreaInsets),
            style: descriptors[state.routes[state.index].key].options.tabBarStyle
        })), 2), tabBarHeight = _React_useState1[0], setTabBarHeight = _React_useState1[1];
    var renderTabBar = ()=>{
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_reactNativeSafeAreaContext.SafeAreaInsetsContext.Consumer, {
            children: (insets)=>tabBar({
                    state: state,
                    descriptors: descriptors,
                    navigation: navigation,
                    insets: {
                        top: (safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top) ?? (insets === null || insets === void 0 ? void 0 : insets.top) ?? 0,
                        right: (safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) ?? (insets === null || insets === void 0 ? void 0 : insets.right) ?? 0,
                        bottom: (safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) ?? (insets === null || insets === void 0 ? void 0 : insets.bottom) ?? 0,
                        left: (safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) ?? (insets === null || insets === void 0 ? void 0 : insets.left) ?? 0
                    }
                })
        });
    };
    var routes = state.routes;
    // If there is no animation, we only have 2 states: visible and invisible
    var hasTwoStates = !routes.some((route)=>hasAnimation(descriptors[route.key].options));
    var _descriptors_focusedRouteKey_options = descriptors[focusedRouteKey].options, _descriptors_focusedRouteKey_options_tabBarPosition = _descriptors_focusedRouteKey_options.tabBarPosition, tabBarPosition = _descriptors_focusedRouteKey_options_tabBarPosition === void 0 ? 'bottom' : _descriptors_focusedRouteKey_options_tabBarPosition;
    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_elements.SafeAreaProviderCompat, {
        style: {
            flexDirection: tabBarPosition === 'left' || tabBarPosition === 'right' ? tabBarPosition === 'left' && direction === 'ltr' || tabBarPosition === 'right' && direction === 'rtl' ? 'row-reverse' : 'row' : 'column'
        },
        children: [
            tabBarPosition === 'top' ? /*#__PURE__*/ (0, _jsxRuntime.jsx)(_BottomTabBarHeightCallbackContext.BottomTabBarHeightCallbackContext.Provider, {
                value: setTabBarHeight,
                children: renderTabBar()
            }) : null,
            /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ScreenFallback.MaybeScreenContainer, {
                enabled: detachInactiveScreens,
                hasTwoStates: hasTwoStates,
                style: styles.screens,
                children: routes.map((route, index)=>{
                    var descriptor = descriptors[route.key];
                    var _descriptor_options = descriptor.options, _descriptor_options_lazy = _descriptor_options.lazy, lazy = _descriptor_options_lazy === void 0 ? true : _descriptor_options_lazy, _descriptor_options_animation = _descriptor_options.animation, animation = _descriptor_options_animation === void 0 ? 'none' : _descriptor_options_animation, _descriptor_options_sceneStyleInterpolator = _descriptor_options.sceneStyleInterpolator, sceneStyleInterpolator = _descriptor_options_sceneStyleInterpolator === void 0 ? NAMED_TRANSITIONS_PRESETS[animation].sceneStyleInterpolator : _descriptor_options_sceneStyleInterpolator;
                    var isFocused = state.index === index;
                    var isPreloaded = state.preloadedRouteKeys.includes(route.key);
                    if (lazy && !loaded.includes(route.key) && !isFocused && !isPreloaded) {
                        // Don't render a lazy screen if we've never navigated to it or it wasn't preloaded
                        return null;
                    }
                    var _descriptor_options1 = descriptor.options, freezeOnBlur = _descriptor_options1.freezeOnBlur, _descriptor_options_header = _descriptor_options1.header, header = _descriptor_options_header === void 0 ? (ref)=>{
                        var layout = ref.layout, options = ref.options;
                        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_elements.Header, _object_spread_props._(_object_spread._({}, options), {
                            layout: layout,
                            title: (0, _elements.getHeaderTitle)(options, route.name)
                        }));
                    } : _descriptor_options_header, headerShown = _descriptor_options1.headerShown, headerStatusBarHeight = _descriptor_options1.headerStatusBarHeight, headerTransparent = _descriptor_options1.headerTransparent, customSceneStyle = _descriptor_options1.sceneStyle;
                    var sceneStyle = ((sceneStyleInterpolator === null || sceneStyleInterpolator === void 0 ? void 0 : sceneStyleInterpolator({
                        current: {
                            progress: tabAnims[route.key]
                        }
                    })) ?? {}).sceneStyle;
                    var animationEnabled = hasAnimation(descriptor.options);
                    var activityState = isFocused ? STATE_ON_TOP // the screen is on top after the transition
                     : animationEnabled // is animation is not enabled, immediately move to inactive state
                     ? tabAnims[route.key].interpolate({
                        inputRange: [
                            0,
                            1 - EPSILON,
                            1
                        ],
                        outputRange: [
                            STATE_TRANSITIONING_OR_BELOW_TOP,
                            // screen visible during transition
                            STATE_TRANSITIONING_OR_BELOW_TOP,
                            STATE_INACTIVE // the screen is detached after transition
                        ],
                        extrapolate: 'extend'
                    }) : STATE_INACTIVE;
                    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_ScreenFallback.MaybeScreen, {
                        style: [
                            _reactNative.StyleSheet.absoluteFill,
                            {
                                zIndex: isFocused ? 0 : -1
                            }
                        ],
                        active: activityState,
                        enabled: detachInactiveScreens,
                        freezeOnBlur: freezeOnBlur,
                        shouldFreeze: activityState === STATE_INACTIVE && !isPreloaded,
                        children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_BottomTabBarHeightContext.BottomTabBarHeightContext.Provider, {
                            value: tabBarPosition === 'bottom' ? tabBarHeight : 0,
                            children: /*#__PURE__*/ (0, _jsxRuntime.jsx)(_elements.Screen, {
                                focused: isFocused,
                                route: descriptor.route,
                                navigation: descriptor.navigation,
                                headerShown: headerShown,
                                headerStatusBarHeight: headerStatusBarHeight,
                                headerTransparent: headerTransparent,
                                header: header({
                                    layout: dimensions,
                                    route: descriptor.route,
                                    navigation: descriptor.navigation,
                                    options: descriptor.options
                                }),
                                style: [
                                    customSceneStyle,
                                    animationEnabled && sceneStyle
                                ],
                                children: descriptor.render()
                            })
                        })
                    }, route.key);
                })
            }),
            tabBarPosition !== 'top' ? /*#__PURE__*/ (0, _jsxRuntime.jsx)(_BottomTabBarHeightCallbackContext.BottomTabBarHeightCallbackContext.Provider, {
                value: setTabBarHeight,
                children: renderTabBar()
            }) : null
        ]
    });
}
var styles = _reactNative.StyleSheet.create({
    screens: {
        flex: 1,
        overflow: 'hidden'
    }
}); //# sourceMappingURL=BottomTabView.js.map


}),
"./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/ScreenFallback.js": 
/*!*************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/ScreenFallback.js ***!
  \*************************************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
var _object_spread = __webpack_require__(/*! @swc/helpers/_/_object_spread */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_object_spread.cjs");
var _object_without_properties = __webpack_require__(/*! @swc/helpers/_/_object_without_properties */ "./node_modules/.pnpm/@swc+helpers@0.5.17/node_modules/@swc/helpers/cjs/_object_without_properties.cjs");
Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.MaybeScreen = MaybeScreen;
exports.MaybeScreenContainer = void 0;
var React = _interopRequireWildcard(__webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react"));
var _reactNative = __webpack_require__(/*! react-native */ "webpack/sharing/consume/default/react-native/react-native");
var _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/.pnpm/react@19.0.0/node_modules/react/jsx-runtime.js");
function _getRequireWildcardCache(e) {
    if ("function" != typeof WeakMap) return null;
    var r = new WeakMap(), t = new WeakMap();
    return (_getRequireWildcardCache = function(e) {
        return e ? t : r;
    })(e);
}
function _interopRequireWildcard(e, r) {
    if (!r && e && e.__esModule) return e;
    if (null === e || "object" != typeof e && "function" != typeof e) return {
        default: e
    };
    var t = _getRequireWildcardCache(r);
    if (t && t.has(e)) return t.get(e);
    var n = {
        __proto__: null
    }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
    for(var u in e)if ("default" !== u && ({}).hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
    }
    return n.default = e, t && t.set(e, n), n;
}
var Screens;
try {
    Screens = __webpack_require__(/*! react-native-screens */ "webpack/sharing/consume/default/react-native-screens/react-native-screens");
} catch (e) {
// Ignore
}
var MaybeScreenContainer = (_param)=>{
    var enabled = _param.enabled, rest = _object_without_properties._(_param, [
        "enabled"
    ]);
    var _Screens_screensEnabled;
    if (Screens === null || Screens === void 0 ? void 0 : (_Screens_screensEnabled = Screens.screensEnabled) === null || _Screens_screensEnabled === void 0 ? void 0 : _Screens_screensEnabled.call(Screens)) {
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Screens.ScreenContainer, _object_spread._({
            enabled: enabled
        }, rest));
    }
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_reactNative.View, _object_spread._({}, rest));
};
exports.MaybeScreenContainer = MaybeScreenContainer;
function MaybeScreen(_param) {
    var enabled = _param.enabled, active = _param.active, rest = _object_without_properties._(_param, [
        "enabled",
        "active"
    ]);
    var _Screens_screensEnabled;
    if (Screens === null || Screens === void 0 ? void 0 : (_Screens_screensEnabled = Screens.screensEnabled) === null || _Screens_screensEnabled === void 0 ? void 0 : _Screens_screensEnabled.call(Screens)) {
        return /*#__PURE__*/ (0, _jsxRuntime.jsx)(Screens.Screen, _object_spread._({
            enabled: enabled,
            activityState: active
        }, rest));
    }
    return /*#__PURE__*/ (0, _jsxRuntime.jsx)(_reactNative.View, _object_spread._({}, rest));
} //# sourceMappingURL=ScreenFallback.js.map


}),
"./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/TabBarIcon.js": 
/*!*********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/TabBarIcon.js ***!
  \*********************************************************************************************************************************************************************************************************************************/
(function (__unused_webpack_module, exports, __webpack_require__) {

Object.defineProperty(exports, "__esModule", ({
    value: true
}));
exports.TabBarIcon = TabBarIcon;
var _react = _interopRequireDefault(__webpack_require__(/*! react */ "webpack/sharing/consume/default/react/react"));
var _reactNative = __webpack_require__(/*! react-native */ "webpack/sharing/consume/default/react-native/react-native");
var _Badge = __webpack_require__(/*! ./Badge.js */ "./node_modules/.pnpm/@react-navigation+bottom-tabs@7.2.0_@react-navigation+native@7.0.14_react-native@0.78.2_@babe_25m45f6yfso7yafv5xvyourykq/node_modules/@react-navigation/bottom-tabs/lib/commonjs/views/Badge.js");
var _jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/.pnpm/react@19.0.0/node_modules/react/jsx-runtime.js");
function _interopRequireDefault(e) {
    return e && e.__esModule ? e : {
        default: e
    };
}
/**
 * Icon sizes taken from Apple HIG
 * https://developer.apple.com/design/human-interface-guidelines/tab-bars
 */ var ICON_SIZE_WIDE = 31;
var ICON_SIZE_WIDE_COMPACT = 23;
var ICON_SIZE_TALL = 28;
var ICON_SIZE_TALL_COMPACT = 20;
var ICON_SIZE_ROUND = 25;
var ICON_SIZE_ROUND_COMPACT = 18;
var ICON_SIZE_MATERIAL = 24;
function TabBarIcon(ref) {
    var _ = ref.route, variant = ref.variant, size = ref.size, badge = ref.badge, badgeStyle = ref.badgeStyle, activeOpacity = ref.activeOpacity, inactiveOpacity = ref.inactiveOpacity, activeTintColor = ref.activeTintColor, inactiveTintColor = ref.inactiveTintColor, renderIcon = ref.renderIcon, allowFontScaling = ref.allowFontScaling, style = ref.style;
    var iconSize = variant === 'material' ? ICON_SIZE_MATERIAL : size === 'compact' ? ICON_SIZE_ROUND_COMPACT : ICON_SIZE_ROUND;
    // We render the icon twice at the same position on top of each other:
    // active and inactive one, so we can fade between them.
    return /*#__PURE__*/ (0, _jsxRuntime.jsxs)(_reactNative.View, {
        style: [
            variant === 'material' ? styles.wrapperMaterial : size === 'compact' ? styles.wrapperUikitCompact : styles.wrapperUikit,
            style
        ],
        children: [
            /*#__PURE__*/ (0, _jsxRuntime.jsx)(_reactNative.View, {
                style: [
                    styles.icon,
                    {
                        opacity: activeOpacity,
                        // Workaround for react-native >= 0.54 layout bug
                        minWidth: iconSize
                    }
                ],
                children: renderIcon({
                    focused: true,
                    size: iconSize,
                    color: activeTintColor
                })
            }),
            /*#__PURE__*/ (0, _jsxRuntime.jsx)(_reactNative.View, {
                style: [
                    styles.icon,
                    {
                        opacity: inactiveOpacity
                    }
                ],
                children: renderIcon({
                    focused: false,
                    size: iconSize,
                    color: inactiveTintColor
                })
            }),
            /*#__PURE__*/ (0, _jsxRuntime.jsx)(_Badge.Badge, {
                visible: badge != null,
                size: iconSize * 0.75,
                allowFontScaling: allowFontScaling,
                style: [
                    styles.badge,
                    badgeStyle
                ],
                children: badge
            })
        ]
    });
}
var styles = _reactNative.StyleSheet.create({
    icon: {
        // We render the icon twice at the same position on top of each other:
        // active and inactive one, so we can fade between them:
        // Cover the whole iconContainer:
        position: 'absolute',
        alignSelf: 'center',
        alignItems: 'center',
        justifyContent: 'center',
        height: '100%',
        width: '100%'
    },
    wrapperUikit: {
        width: ICON_SIZE_WIDE,
        height: ICON_SIZE_TALL
    },
    wrapperUikitCompact: {
        width: ICON_SIZE_WIDE_COMPACT,
        height: ICON_SIZE_TALL_COMPACT
    },
    wrapperMaterial: {
        width: ICON_SIZE_MATERIAL,
        height: ICON_SIZE_MATERIAL
    },
    badge: {
        position: 'absolute',
        end: -3,
        top: -3
    }
}); //# sourceMappingURL=TabBarIcon.js.map


}),

}]);//# sourceMappingURL=vendors-node_modules_pnpm_react-navigation_bottom-tabs_7_2_0__react-navigation_native_7_0_14_-e798cd.chunk.bundle.map?platform=ios